{
  "manifest_version": "0.2",
  "name": "ncp",
  "display_name": "NCP - Natural Context Provider",
  "version": "1.6.0",
  "description": "Your MCP Concierge - Complete platform for discovering, managing, and accessing MCPs. Auto-imports, intelligent discovery, and 2-tool simplification with 97% token reduction.",
  "long_description": "Natural Context Provider. 1 MCP to rule them all - Your MCP Concierge. Complete platform for discovering, managing, and accessing MCPs. Transforms 50+ scattered tools into 2 simple commands, auto-syncs with Claude Desktop/Perplexity/Cursor/Cline/Continue, saves 97% tokens. Features: semantic search, intelligent routing, dynamic runtime detection, health monitoring, auto-discovery and installation, AI-assisted management, and optional global CLI. Create once, use everywhere.",
  "author": {
    "name": "Portel",
    "url": "https://github.com/portel-dev/ncp"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/portel-dev/ncp"
  },
  "homepage": "https://github.com/portel-dev/ncp#readme",
  "support": "https://github.com/portel-dev/ncp/issues",
  "user_config": {
    "profile": {
      "type": "string",
      "title": "Profile Name",
      "description": "Which NCP profile to use (e.g., 'all', 'development', 'minimal'). Auto-imported MCPs from your MCP client will be added to this profile.",
      "default": "all"
    },
    "config_path": {
      "type": "string",
      "title": "Configuration Path",
      "description": "Where to store NCP configurations. Use '~/.ncp' for global (shared across projects), '.ncp' for local (per-project), or specify custom path.",
      "default": "~/.ncp"
    },
    "enable_global_cli": {
      "type": "boolean",
      "title": "Enable Global CLI Access",
      "description": "Create a global 'ncp' command for terminal usage. Allows running NCP from command line anywhere on your system.",
      "default": false
    },
    "auto_import_client_mcps": {
      "type": "boolean",
      "title": "Auto-import Client MCPs",
      "description": "Automatically import all MCPs from your MCP client (Claude Desktop, Perplexity, Cursor, etc.) on startup. Syncs both config files and extensions.",
      "default": true
    },
    "enable_debug_logging": {
      "type": "boolean",
      "title": "Enable Debug Logging",
      "description": "Show detailed logs for troubleshooting (runtime detection, MCP loading, etc.)",
      "default": false
    },
    "confirm_before_run": {
      "type": "boolean",
      "title": "Confirm Modifications Before Run",
      "description": "Show confirmation dialog before executing modification operations (adding/removing MCPs, file changes, deletions, etc.). Protects against unintended changes by requiring explicit user approval.",
      "default": true
    },
    "enable_log_rotation": {
      "type": "boolean",
      "title": "Enable Log Rotation",
      "description": "Auto-rotate debug and protocol logs to prevent disk space issues. Advanced settings (maxDebugFiles, maxProtocolLines) can be edited in settings.json.",
      "default": true
    },
    "enable_schedule_mcp": {
      "type": "boolean",
      "title": "Enable Scheduler (Built-in)",
      "description": "Schedule tool executions with cron. Provides 5 tools: create, retrieve, update, delete, validate.",
      "default": true
    },
    "enable_mcp_management": {
      "type": "boolean",
      "title": "Enable MCP Management (Built-in)",
      "description": "Add, remove, and manage MCPs in your configuration. Provides 5 tools: add, remove, list, update, search.",
      "default": true
    }
  },
  "server": {
    "type": "node",
    "entry_point": "dist/index-mcp.js",
    "mcp_config": {
      "command": "node",
      "args": [
        "${__dirname}/dist/index-mcp.js",
        "--profile=${user_config.profile}",
        "--config-path=${user_config.config_path}"
      ],
      "env": {
        "NCP_PROFILE": "${user_config.profile}",
        "NCP_CONFIG_PATH": "${user_config.config_path}",
        "NCP_ENABLE_GLOBAL_CLI": "${user_config.enable_global_cli}",
        "NCP_AUTO_IMPORT": "${user_config.auto_import_client_mcps}",
        "NCP_DEBUG": "${user_config.enable_debug_logging}",
        "NCP_CONFIRM_BEFORE_RUN": "${user_config.confirm_before_run}",
        "NCP_ENABLE_LOG_ROTATION": "${user_config.enable_log_rotation}",
        "NCP_ENABLE_SCHEDULE_MCP": "${user_config.enable_schedule_mcp}",
        "NCP_ENABLE_MCP_MANAGEMENT": "${user_config.enable_mcp_management}",
        "NCP_MODE": "extension"
      }
    }
  },
  "tools": [
    {
      "name": "find",
      "description": "Dual-mode tool discovery: (1) SEARCH MODE: Use with description parameter for intelligent vector search - describe your task as user story for best results. (2) LISTING MODE: Call without description parameter for paginated browsing of all available MCPs and tools."
    },
    {
      "name": "run",
      "description": "Execute tools from managed MCP servers. Requires exact format 'mcp_name:tool_name' with required parameters. System provides suggestions if tool not found and automatic fallbacks when tools fail."
    }
  ],
  "keywords": ["mcp", "model-context-protocol", "ai-orchestration", "tool-discovery", "multi-mcp", "claude", "ai-gateway", "auto-import"],
  "license": "Elastic-2.0"
}
