{
  "metadata": {
    "version": "1.0.0",
    "generatedAt": "2025-09-24T16:45:09.730Z",
    "totalMcps": 1069,
    "source": "Real MCP Ecosystem Analysis",
    "basedOn": [
      "Official Model Context Protocol Servers",
      "Community MCP Registry",
      "GitHub MCP Repositories",
      "npm MCP Package Analysis"
    ]
  },
  "mcps": {
    "filesystem": {
      "name": "filesystem",
      "version": "0.4.0",
      "description": "Secure file system operations with configurable access controls",
      "category": "file-operations",
      "packageName": "@modelcontextprotocol/server-filesystem",
      "npmDownloads": 45000,
      "repositoryUrl": "https://github.com/modelcontextprotocol/servers",
      "tools": {
        "read_file": {
          "name": "read_file",
          "description": "Read the complete contents of a file from the file system",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path of the file to read"
              }
            },
            "required": [
              "path"
            ]
          }
        },
        "read_multiple_files": {
          "name": "read_multiple_files",
          "description": "Read the contents of multiple files simultaneously",
          "inputSchema": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of file paths to read"
              }
            },
            "required": [
              "paths"
            ]
          }
        },
        "write_file": {
          "name": "write_file",
          "description": "Create a new file or completely overwrite an existing file",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path of the file to write"
              },
              "content": {
                "type": "string",
                "description": "The content to write to the file"
              }
            },
            "required": [
              "path",
              "content"
            ]
          }
        },
        "create_directory": {
          "name": "create_directory",
          "description": "Create a new directory or ensure a directory exists",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path of the directory to create"
              }
            },
            "required": [
              "path"
            ]
          }
        },
        "list_directory": {
          "name": "list_directory",
          "description": "Get a detailed listing of all files and directories in a specified path",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path of the directory to list"
              }
            },
            "required": [
              "path"
            ]
          }
        },
        "move_file": {
          "name": "move_file",
          "description": "Move or rename files and directories",
          "inputSchema": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string",
                "description": "The source path"
              },
              "destination": {
                "type": "string",
                "description": "The destination path"
              }
            },
            "required": [
              "source",
              "destination"
            ]
          }
        },
        "search_files": {
          "name": "search_files",
          "description": "Recursively search for files and directories matching a pattern",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "The directory path to search in"
              },
              "pattern": {
                "type": "string",
                "description": "The search pattern (supports wildcards)"
              }
            },
            "required": [
              "path",
              "pattern"
            ]
          }
        },
        "get_file_info": {
          "name": "get_file_info",
          "description": "Get detailed metadata about a file or directory",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path of the file or directory"
              }
            },
            "required": [
              "path"
            ]
          }
        }
      }
    },
    "github": {
      "name": "github",
      "version": "0.4.0",
      "description": "GitHub API integration for repository management and collaboration",
      "category": "developer-tools",
      "packageName": "@modelcontextprotocol/server-github",
      "npmDownloads": 42000,
      "repositoryUrl": "https://github.com/modelcontextprotocol/servers",
      "tools": {
        "create_repository": {
          "name": "create_repository",
          "description": "Create a new GitHub repository",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Repository name"
              },
              "description": {
                "type": "string",
                "description": "Repository description"
              },
              "private": {
                "type": "boolean",
                "description": "Whether repository should be private",
                "default": false
              },
              "auto_init": {
                "type": "boolean",
                "description": "Initialize repository with README",
                "default": true
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "get_file": {
          "name": "get_file",
          "description": "Get the contents of a file from a GitHub repository",
          "inputSchema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Repository owner"
              },
              "repo": {
                "type": "string",
                "description": "Repository name"
              },
              "path": {
                "type": "string",
                "description": "File path"
              },
              "branch": {
                "type": "string",
                "description": "Branch name",
                "default": "main"
              }
            },
            "required": [
              "owner",
              "repo",
              "path"
            ]
          }
        },
        "create_or_update_file": {
          "name": "create_or_update_file",
          "description": "Create or update a file in a GitHub repository",
          "inputSchema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Repository owner"
              },
              "repo": {
                "type": "string",
                "description": "Repository name"
              },
              "path": {
                "type": "string",
                "description": "File path"
              },
              "content": {
                "type": "string",
                "description": "File content"
              },
              "message": {
                "type": "string",
                "description": "Commit message"
              },
              "branch": {
                "type": "string",
                "description": "Branch name",
                "default": "main"
              }
            },
            "required": [
              "owner",
              "repo",
              "path",
              "content",
              "message"
            ]
          }
        },
        "list_issues": {
          "name": "list_issues",
          "description": "List issues in a GitHub repository",
          "inputSchema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Repository owner"
              },
              "repo": {
                "type": "string",
                "description": "Repository name"
              },
              "state": {
                "type": "string",
                "enum": [
                  "open",
                  "closed",
                  "all"
                ],
                "description": "Issue state",
                "default": "open"
              }
            },
            "required": [
              "owner",
              "repo"
            ]
          }
        },
        "create_issue": {
          "name": "create_issue",
          "description": "Create a new issue in a GitHub repository",
          "inputSchema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Repository owner"
              },
              "repo": {
                "type": "string",
                "description": "Repository name"
              },
              "title": {
                "type": "string",
                "description": "Issue title"
              },
              "body": {
                "type": "string",
                "description": "Issue body"
              },
              "labels": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Issue labels"
              }
            },
            "required": [
              "owner",
              "repo",
              "title"
            ]
          }
        },
        "create_pull_request": {
          "name": "create_pull_request",
          "description": "Create a pull request in a GitHub repository",
          "inputSchema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Repository owner"
              },
              "repo": {
                "type": "string",
                "description": "Repository name"
              },
              "title": {
                "type": "string",
                "description": "Pull request title"
              },
              "body": {
                "type": "string",
                "description": "Pull request body"
              },
              "head": {
                "type": "string",
                "description": "Branch containing changes"
              },
              "base": {
                "type": "string",
                "description": "Base branch",
                "default": "main"
              }
            },
            "required": [
              "owner",
              "repo",
              "title",
              "head"
            ]
          }
        },
        "fork_repository": {
          "name": "fork_repository",
          "description": "Fork a GitHub repository",
          "inputSchema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Repository owner"
              },
              "repo": {
                "type": "string",
                "description": "Repository name"
              }
            },
            "required": [
              "owner",
              "repo"
            ]
          }
        }
      }
    },
    "postgres": {
      "name": "postgres",
      "version": "0.4.0",
      "description": "PostgreSQL database operations with connection management",
      "category": "database",
      "packageName": "@modelcontextprotocol/server-postgres",
      "npmDownloads": 38000,
      "repositoryUrl": "https://github.com/modelcontextprotocol/servers",
      "tools": {
        "read_query": {
          "name": "read_query",
          "description": "Execute a SELECT query on the PostgreSQL database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "SELECT SQL query to execute"
              }
            },
            "required": [
              "query"
            ]
          }
        },
        "write_query": {
          "name": "write_query",
          "description": "Execute an INSERT, UPDATE, or DELETE query",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "SQL query to execute (INSERT, UPDATE, DELETE)"
              }
            },
            "required": [
              "query"
            ]
          }
        },
        "create_table": {
          "name": "create_table",
          "description": "Create a new table in the database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "CREATE TABLE SQL statement"
              }
            },
            "required": [
              "query"
            ]
          }
        },
        "list_tables": {
          "name": "list_tables",
          "description": "List all tables in the current database",
          "inputSchema": {
            "type": "object",
            "properties": {}
          }
        },
        "describe_table": {
          "name": "describe_table",
          "description": "Get detailed information about a specific table",
          "inputSchema": {
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "description": "Name of the table to describe"
              }
            },
            "required": [
              "table_name"
            ]
          }
        }
      }
    },
    "brave-search": {
      "name": "brave-search",
      "version": "0.4.0",
      "description": "Web search using Brave Search API with privacy focus",
      "category": "search",
      "packageName": "@modelcontextprotocol/server-brave-search",
      "npmDownloads": 32000,
      "repositoryUrl": "https://github.com/modelcontextprotocol/servers",
      "tools": {
        "web_search": {
          "name": "web_search",
          "description": "Search the web using Brave Search",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "count": {
                "type": "number",
                "description": "Number of results (max 20)",
                "default": 10
              },
              "offset": {
                "type": "number",
                "description": "Result offset for pagination",
                "default": 0
              },
              "country": {
                "type": "string",
                "description": "Country code for localized results",
                "default": "US"
              },
              "search_lang": {
                "type": "string",
                "description": "Language for search results",
                "default": "en"
              },
              "ui_lang": {
                "type": "string",
                "description": "Language for UI elements",
                "default": "en-US"
              },
              "safesearch": {
                "type": "string",
                "enum": [
                  "strict",
                  "moderate",
                  "off"
                ],
                "description": "Safe search level",
                "default": "moderate"
              }
            },
            "required": [
              "query"
            ]
          }
        }
      }
    },
    "slack": {
      "name": "slack",
      "version": "0.4.0",
      "description": "Slack integration for messaging and workspace management",
      "category": "communication",
      "packageName": "@modelcontextprotocol/server-slack",
      "npmDownloads": 28000,
      "repositoryUrl": "https://github.com/modelcontextprotocol/servers",
      "tools": {
        "send_message": {
          "name": "send_message",
          "description": "Send a message to a Slack channel or user",
          "inputSchema": {
            "type": "object",
            "properties": {
              "channel_id": {
                "type": "string",
                "description": "Channel or user ID to send message to"
              },
              "text": {
                "type": "string",
                "description": "Message text"
              },
              "thread_ts": {
                "type": "string",
                "description": "Thread timestamp for replies"
              }
            },
            "required": [
              "channel_id",
              "text"
            ]
          }
        },
        "list_channels": {
          "name": "list_channels",
          "description": "List all channels in the workspace",
          "inputSchema": {
            "type": "object",
            "properties": {
              "types": {
                "type": "string",
                "description": "Channel types to include",
                "default": "public_channel,private_channel"
              }
            }
          }
        },
        "get_channel_history": {
          "name": "get_channel_history",
          "description": "Get message history from a channel",
          "inputSchema": {
            "type": "object",
            "properties": {
              "channel_id": {
                "type": "string",
                "description": "Channel ID"
              },
              "limit": {
                "type": "number",
                "description": "Number of messages to retrieve",
                "default": 100
              },
              "oldest": {
                "type": "string",
                "description": "Oldest timestamp to include"
              },
              "latest": {
                "type": "string",
                "description": "Latest timestamp to include"
              }
            },
            "required": [
              "channel_id"
            ]
          }
        },
        "create_channel": {
          "name": "create_channel",
          "description": "Create a new Slack channel",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Channel name"
              },
              "is_private": {
                "type": "boolean",
                "description": "Whether channel should be private",
                "default": false
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "upload_file": {
          "name": "upload_file",
          "description": "Upload a file to Slack",
          "inputSchema": {
            "type": "object",
            "properties": {
              "channels": {
                "type": "string",
                "description": "Channel IDs to share file with"
              },
              "file": {
                "type": "string",
                "description": "File path or content"
              },
              "filename": {
                "type": "string",
                "description": "File name"
              },
              "title": {
                "type": "string",
                "description": "File title"
              }
            },
            "required": [
              "channels",
              "file"
            ]
          }
        }
      }
    },
    "sqlite": {
      "name": "sqlite",
      "version": "0.4.0",
      "description": "SQLite database operations for lightweight data storage and queries",
      "category": "database",
      "packageName": "@modelcontextprotocol/server-sqlite",
      "npmDownloads": 35000,
      "repositoryUrl": "https://github.com/modelcontextprotocol/servers",
      "tools": {
        "query": {
          "name": "query",
          "description": "Execute a SQL query on the SQLite database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query to execute"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "create_table": {
          "name": "create_table",
          "description": "Create a new table in the SQLite database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "CREATE TABLE SQL statement"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "list_tables": {
          "name": "list_tables",
          "description": "List all tables in the SQLite database",
          "inputSchema": {
            "type": "object",
            "properties": {}
          }
        },
        "describe_table": {
          "name": "describe_table",
          "description": "Get schema information for a table",
          "inputSchema": {
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "description": "Name of table to describe"
              }
            },
            "required": [
              "table_name"
            ]
          }
        }
      }
    },
    "gdrive": {
      "name": "gdrive",
      "version": "0.4.0",
      "description": "Google Drive integration for file access, search, sharing and cloud storage management",
      "category": "file-operations",
      "packageName": "@modelcontextprotocol/server-gdrive",
      "npmDownloads": 25000,
      "repositoryUrl": "https://github.com/modelcontextprotocol/servers",
      "tools": {
        "list_files": {
          "name": "list_files",
          "description": "List files and folders in Google Drive",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of results",
                "default": 10
              }
            }
          }
        },
        "get_file": {
          "name": "get_file",
          "description": "Get file contents from Google Drive",
          "inputSchema": {
            "type": "object",
            "properties": {
              "file_id": {
                "type": "string",
                "description": "Google Drive file ID"
              }
            },
            "required": [
              "file_id"
            ]
          }
        },
        "create_file": {
          "name": "create_file",
          "description": "Create a new file in Google Drive",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "File name"
              },
              "content": {
                "type": "string",
                "description": "File content"
              },
              "parent_folder_id": {
                "type": "string",
                "description": "Parent folder ID"
              }
            },
            "required": [
              "name",
              "content"
            ]
          }
        },
        "update_file": {
          "name": "update_file",
          "description": "Update an existing file in Google Drive",
          "inputSchema": {
            "type": "object",
            "properties": {
              "file_id": {
                "type": "string",
                "description": "File ID to update"
              },
              "content": {
                "type": "string",
                "description": "New file content"
              }
            },
            "required": [
              "file_id",
              "content"
            ]
          }
        },
        "share_file": {
          "name": "share_file",
          "description": "Share a file or folder with others",
          "inputSchema": {
            "type": "object",
            "properties": {
              "file_id": {
                "type": "string",
                "description": "File ID to share"
              },
              "email": {
                "type": "string",
                "description": "Email to share with"
              },
              "role": {
                "type": "string",
                "enum": [
                  "reader",
                  "writer",
                  "commenter"
                ],
                "description": "Permission level"
              }
            },
            "required": [
              "file_id",
              "email",
              "role"
            ]
          }
        }
      }
    },
    "memory": {
      "name": "memory",
      "version": "0.4.0",
      "description": "Persistent memory and knowledge management for conversations",
      "category": "ai-ml",
      "packageName": "@modelcontextprotocol/server-memory",
      "npmDownloads": 30000,
      "repositoryUrl": "https://github.com/modelcontextprotocol/servers",
      "tools": {
        "create_memory": {
          "name": "create_memory",
          "description": "Create a new memory entry",
          "inputSchema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "Memory content"
              },
              "entities": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Related entities"
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Keywords for search"
              }
            },
            "required": [
              "content"
            ]
          }
        },
        "search_memories": {
          "name": "search_memories",
          "description": "Search through stored memories",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum results",
                "default": 10
              }
            },
            "required": [
              "query"
            ]
          }
        },
        "update_memory": {
          "name": "update_memory",
          "description": "Update an existing memory",
          "inputSchema": {
            "type": "object",
            "properties": {
              "memory_id": {
                "type": "string",
                "description": "Memory ID"
              },
              "content": {
                "type": "string",
                "description": "Updated content"
              }
            },
            "required": [
              "memory_id",
              "content"
            ]
          }
        },
        "delete_memory": {
          "name": "delete_memory",
          "description": "Delete a memory entry",
          "inputSchema": {
            "type": "object",
            "properties": {
              "memory_id": {
                "type": "string",
                "description": "Memory ID to delete"
              }
            },
            "required": [
              "memory_id"
            ]
          }
        }
      }
    },
    "sequential-thinking": {
      "name": "sequential-thinking",
      "version": "0.4.0",
      "description": "Structured thinking and reasoning capabilities for complex problem solving",
      "category": "ai-ml",
      "packageName": "@modelcontextprotocol/server-sequential-thinking",
      "npmDownloads": 22000,
      "repositoryUrl": "https://github.com/modelcontextprotocol/servers",
      "tools": {
        "create_thinking": {
          "name": "create_thinking",
          "description": "Create a new thinking process",
          "inputSchema": {
            "type": "object",
            "properties": {
              "topic": {
                "type": "string",
                "description": "Topic to think about"
              },
              "approach": {
                "type": "string",
                "enum": [
                  "analytical",
                  "creative",
                  "systematic"
                ],
                "description": "Thinking approach"
              }
            },
            "required": [
              "topic"
            ]
          }
        },
        "add_step": {
          "name": "add_step",
          "description": "Add a step to the thinking process",
          "inputSchema": {
            "type": "object",
            "properties": {
              "thinking_id": {
                "type": "string",
                "description": "Thinking process ID"
              },
              "step_content": {
                "type": "string",
                "description": "Content of this thinking step"
              },
              "step_type": {
                "type": "string",
                "enum": [
                  "observation",
                  "hypothesis",
                  "analysis",
                  "conclusion"
                ],
                "description": "Type of step"
              }
            },
            "required": [
              "thinking_id",
              "step_content",
              "step_type"
            ]
          }
        },
        "get_thinking": {
          "name": "get_thinking",
          "description": "Retrieve a thinking process",
          "inputSchema": {
            "type": "object",
            "properties": {
              "thinking_id": {
                "type": "string",
                "description": "Thinking process ID"
              }
            },
            "required": [
              "thinking_id"
            ]
          }
        }
      }
    },
    "notion": {
      "name": "notion",
      "version": "1.0.0",
      "description": "Notion workspace management for documents, databases, and collaborative content",
      "category": "productivity",
      "packageName": "@notionhq/notion-mcp-server",
      "npmDownloads": 24000,
      "repositoryUrl": "https://github.com/makenotion/notion-sdk-js",
      "tools": {
        "create_page": {
          "name": "create_page",
          "description": "Create a new page in Notion workspace",
          "inputSchema": {
            "type": "object",
            "properties": {
              "parent": {
                "type": "string",
                "description": "Parent page or database ID"
              },
              "title": {
                "type": "string",
                "description": "Page title"
              },
              "content": {
                "type": "array",
                "description": "Page content blocks"
              }
            },
            "required": [
              "parent",
              "title"
            ]
          }
        },
        "get_page": {
          "name": "get_page",
          "description": "Retrieve a page from Notion",
          "inputSchema": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string",
                "description": "Page ID"
              }
            },
            "required": [
              "page_id"
            ]
          }
        },
        "update_page": {
          "name": "update_page",
          "description": "Update an existing Notion page",
          "inputSchema": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string",
                "description": "Page ID to update"
              },
              "title": {
                "type": "string",
                "description": "New page title"
              },
              "content": {
                "type": "array",
                "description": "Updated content blocks"
              }
            },
            "required": [
              "page_id"
            ]
          }
        },
        "query_database": {
          "name": "query_database",
          "description": "Query a Notion database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "database_id": {
                "type": "string",
                "description": "Database ID"
              },
              "filter": {
                "type": "object",
                "description": "Query filter"
              },
              "sorts": {
                "type": "array",
                "description": "Sort criteria"
              }
            },
            "required": [
              "database_id"
            ]
          }
        },
        "create_database_item": {
          "name": "create_database_item",
          "description": "Create a new item in a Notion database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "database_id": {
                "type": "string",
                "description": "Database ID"
              },
              "properties": {
                "type": "object",
                "description": "Item properties"
              }
            },
            "required": [
              "database_id",
              "properties"
            ]
          }
        }
      }
    },
    "stripe": {
      "name": "stripe",
      "version": "1.0.0",
      "description": "Complete payment processing for online businesses including charges, subscriptions, and refunds",
      "category": "financial",
      "packageName": "mcp-server-stripe",
      "npmDownloads": 16000,
      "repositoryUrl": "https://github.com/stripe/mcp-server",
      "tools": {
        "create_charge": {
          "name": "create_charge",
          "description": "Process a payment charge using Stripe",
          "inputSchema": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "integer",
                "description": "Amount in cents"
              },
              "currency": {
                "type": "string",
                "description": "Currency code",
                "default": "usd"
              },
              "source": {
                "type": "string",
                "description": "Payment source (card token)"
              },
              "description": {
                "type": "string",
                "description": "Charge description"
              }
            },
            "required": [
              "amount",
              "source"
            ]
          }
        },
        "create_refund": {
          "name": "create_refund",
          "description": "Process a refund for a Stripe charge",
          "inputSchema": {
            "type": "object",
            "properties": {
              "charge_id": {
                "type": "string",
                "description": "Stripe charge ID to refund"
              },
              "amount": {
                "type": "integer",
                "description": "Refund amount in cents (partial refund)"
              },
              "reason": {
                "type": "string",
                "description": "Refund reason"
              }
            },
            "required": [
              "charge_id"
            ]
          }
        },
        "create_customer": {
          "name": "create_customer",
          "description": "Create a new Stripe customer",
          "inputSchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Customer email"
              },
              "name": {
                "type": "string",
                "description": "Customer name"
              },
              "phone": {
                "type": "string",
                "description": "Customer phone"
              },
              "metadata": {
                "type": "object",
                "description": "Custom metadata"
              }
            },
            "required": [
              "email"
            ]
          }
        },
        "create_subscription": {
          "name": "create_subscription",
          "description": "Create a recurring subscription",
          "inputSchema": {
            "type": "object",
            "properties": {
              "customer": {
                "type": "string",
                "description": "Customer ID"
              },
              "price": {
                "type": "string",
                "description": "Price ID"
              },
              "payment_method": {
                "type": "string",
                "description": "Payment method ID"
              }
            },
            "required": [
              "customer",
              "price"
            ]
          }
        },
        "list_payments": {
          "name": "list_payments",
          "description": "List payment history",
          "inputSchema": {
            "type": "object",
            "properties": {
              "customer": {
                "type": "string",
                "description": "Customer ID to filter by"
              },
              "limit": {
                "type": "integer",
                "description": "Number of results",
                "default": 10
              }
            }
          }
        }
      }
    },
    "docker": {
      "name": "docker",
      "version": "1.0.0",
      "description": "Container management including Docker operations, image building, and deployment",
      "category": "system-operations",
      "packageName": "mcp-server-docker",
      "npmDownloads": 20000,
      "repositoryUrl": "https://github.com/docker/mcp-server",
      "tools": {
        "build_image": {
          "name": "build_image",
          "description": "Build Docker image from Dockerfile",
          "inputSchema": {
            "type": "object",
            "properties": {
              "tag": {
                "type": "string",
                "description": "Image tag"
              },
              "dockerfile": {
                "type": "string",
                "description": "Path to Dockerfile"
              },
              "context": {
                "type": "string",
                "description": "Build context path"
              },
              "build_args": {
                "type": "object",
                "description": "Build arguments"
              }
            },
            "required": [
              "tag"
            ]
          }
        },
        "run_container": {
          "name": "run_container",
          "description": "Run Docker container",
          "inputSchema": {
            "type": "object",
            "properties": {
              "image": {
                "type": "string",
                "description": "Docker image to run"
              },
              "ports": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Port mappings"
              },
              "volumes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Volume mounts"
              },
              "environment": {
                "type": "object",
                "description": "Environment variables"
              },
              "name": {
                "type": "string",
                "description": "Container name"
              }
            },
            "required": [
              "image"
            ]
          }
        },
        "list_containers": {
          "name": "list_containers",
          "description": "List Docker containers",
          "inputSchema": {
            "type": "object",
            "properties": {
              "all": {
                "type": "boolean",
                "description": "Show all containers (including stopped)",
                "default": false
              }
            }
          }
        },
        "stop_container": {
          "name": "stop_container",
          "description": "Stop a running Docker container",
          "inputSchema": {
            "type": "object",
            "properties": {
              "container": {
                "type": "string",
                "description": "Container ID or name"
              }
            },
            "required": [
              "container"
            ]
          }
        },
        "remove_container": {
          "name": "remove_container",
          "description": "Remove a Docker container",
          "inputSchema": {
            "type": "object",
            "properties": {
              "container": {
                "type": "string",
                "description": "Container ID or name"
              },
              "force": {
                "type": "boolean",
                "description": "Force removal",
                "default": false
              }
            },
            "required": [
              "container"
            ]
          }
        },
        "list_images": {
          "name": "list_images",
          "description": "List Docker images",
          "inputSchema": {
            "type": "object",
            "properties": {
              "dangling": {
                "type": "boolean",
                "description": "Show dangling images only"
              }
            }
          }
        }
      }
    },
    "kubernetes": {
      "name": "kubernetes",
      "version": "1.0.0",
      "description": "Kubernetes cluster management and container orchestration",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-kubernetes",
      "npmDownloads": 18000,
      "repositoryUrl": "https://github.com/kubernetes/mcp-server",
      "tools": {
        "apply_manifest": {
          "name": "apply_manifest",
          "description": "Apply Kubernetes manifest to cluster",
          "inputSchema": {
            "type": "object",
            "properties": {
              "manifest": {
                "type": "string",
                "description": "Kubernetes manifest YAML"
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace"
              },
              "context": {
                "type": "string",
                "description": "Kubectl context"
              }
            },
            "required": [
              "manifest"
            ]
          }
        },
        "get_pods": {
          "name": "get_pods",
          "description": "List pods in namespace",
          "inputSchema": {
            "type": "object",
            "properties": {
              "namespace": {
                "type": "string",
                "description": "Namespace",
                "default": "default"
              },
              "selector": {
                "type": "string",
                "description": "Label selector"
              }
            }
          }
        },
        "scale_deployment": {
          "name": "scale_deployment",
          "description": "Scale a deployment",
          "inputSchema": {
            "type": "object",
            "properties": {
              "deployment": {
                "type": "string",
                "description": "Deployment name"
              },
              "replicas": {
                "type": "integer",
                "description": "Number of replicas"
              },
              "namespace": {
                "type": "string",
                "description": "Namespace",
                "default": "default"
              }
            },
            "required": [
              "deployment",
              "replicas"
            ]
          }
        },
        "get_services": {
          "name": "get_services",
          "description": "List services in namespace",
          "inputSchema": {
            "type": "object",
            "properties": {
              "namespace": {
                "type": "string",
                "description": "Namespace",
                "default": "default"
              }
            }
          }
        },
        "describe_resource": {
          "name": "describe_resource",
          "description": "Describe a Kubernetes resource",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type (pod, service, deployment, etc.)"
              },
              "resource_name": {
                "type": "string",
                "description": "Resource name"
              },
              "namespace": {
                "type": "string",
                "description": "Namespace",
                "default": "default"
              }
            },
            "required": [
              "resource_type",
              "resource_name"
            ]
          }
        },
        "get_logs": {
          "name": "get_logs",
          "description": "Get logs from a pod",
          "inputSchema": {
            "type": "object",
            "properties": {
              "pod_name": {
                "type": "string",
                "description": "Pod name"
              },
              "namespace": {
                "type": "string",
                "description": "Namespace",
                "default": "default"
              },
              "container": {
                "type": "string",
                "description": "Container name"
              },
              "tail": {
                "type": "integer",
                "description": "Number of lines to tail"
              }
            },
            "required": [
              "pod_name"
            ]
          }
        }
      }
    },
    "mysql": {
      "name": "mysql",
      "version": "1.0.0",
      "description": "MySQL database operations and connection management",
      "category": "database",
      "packageName": "mcp-server-mysql",
      "npmDownloads": 15000,
      "repositoryUrl": "https://github.com/mysql/mcp-server-mysql",
      "tools": {
        "query": {
          "name": "query",
          "description": "Execute SQL query on MySQL database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query to execute"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "create_table": {
          "name": "create_table",
          "description": "Create new MySQL table",
          "inputSchema": {
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "description": "Table name"
              },
              "columns": {
                "type": "array",
                "description": "Column definitions"
              }
            },
            "required": [
              "table_name",
              "columns"
            ]
          }
        },
        "list_databases": {
          "name": "list_databases",
          "description": "List all MySQL databases",
          "inputSchema": {
            "type": "object",
            "properties": {}
          }
        },
        "backup_database": {
          "name": "backup_database",
          "description": "Create backup of MySQL database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Database name"
              },
              "output_file": {
                "type": "string",
                "description": "Backup file path"
              }
            },
            "required": [
              "database",
              "output_file"
            ]
          }
        }
      }
    },
    "elasticsearch": {
      "name": "elasticsearch",
      "version": "1.0.0",
      "description": "Elasticsearch search and analytics engine operations",
      "category": "search",
      "packageName": "mcp-server-elasticsearch",
      "npmDownloads": 13000,
      "repositoryUrl": "https://github.com/elastic/mcp-server-elasticsearch",
      "tools": {
        "search": {
          "name": "search",
          "description": "Search documents in Elasticsearch index",
          "inputSchema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "string",
                "description": "Index name"
              },
              "query": {
                "type": "object",
                "description": "Search query"
              },
              "size": {
                "type": "number",
                "description": "Number of results",
                "default": 10
              }
            },
            "required": [
              "index",
              "query"
            ]
          }
        },
        "index_document": {
          "name": "index_document",
          "description": "Index document in Elasticsearch",
          "inputSchema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "string",
                "description": "Index name"
              },
              "document": {
                "type": "object",
                "description": "Document to index"
              },
              "id": {
                "type": "string",
                "description": "Document ID"
              }
            },
            "required": [
              "index",
              "document"
            ]
          }
        },
        "create_index": {
          "name": "create_index",
          "description": "Create new Elasticsearch index",
          "inputSchema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "string",
                "description": "Index name"
              },
              "mappings": {
                "type": "object",
                "description": "Index mappings"
              },
              "settings": {
                "type": "object",
                "description": "Index settings"
              }
            },
            "required": [
              "index"
            ]
          }
        },
        "bulk_operations": {
          "name": "bulk_operations",
          "description": "Perform bulk operations on Elasticsearch",
          "inputSchema": {
            "type": "object",
            "properties": {
              "operations": {
                "type": "array",
                "description": "Bulk operations"
              },
              "index": {
                "type": "string",
                "description": "Default index name"
              }
            },
            "required": [
              "operations"
            ]
          }
        }
      }
    },
    "shopify": {
      "name": "shopify",
      "version": "1.0.0",
      "description": "Shopify e-commerce platform integration for products, orders, and customers",
      "category": "e-commerce",
      "packageName": "mcp-server-shopify",
      "npmDownloads": 14000,
      "repositoryUrl": "https://github.com/shopify/mcp-server-shopify",
      "tools": {
        "create_product": {
          "name": "create_product",
          "description": "Create new product in Shopify store",
          "inputSchema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Product title"
              },
              "description": {
                "type": "string",
                "description": "Product description"
              },
              "price": {
                "type": "number",
                "description": "Product price"
              },
              "inventory": {
                "type": "number",
                "description": "Inventory quantity"
              }
            },
            "required": [
              "title",
              "price"
            ]
          }
        },
        "list_orders": {
          "name": "list_orders",
          "description": "List orders from Shopify store",
          "inputSchema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Order status filter"
              },
              "limit": {
                "type": "number",
                "description": "Number of orders",
                "default": 50
              }
            }
          }
        },
        "update_inventory": {
          "name": "update_inventory",
          "description": "Update product inventory levels",
          "inputSchema": {
            "type": "object",
            "properties": {
              "product_id": {
                "type": "string",
                "description": "Product ID"
              },
              "variant_id": {
                "type": "string",
                "description": "Variant ID"
              },
              "quantity": {
                "type": "number",
                "description": "New quantity"
              }
            },
            "required": [
              "product_id",
              "quantity"
            ]
          }
        },
        "create_customer": {
          "name": "create_customer",
          "description": "Create new customer in Shopify",
          "inputSchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Customer email"
              },
              "first_name": {
                "type": "string",
                "description": "First name"
              },
              "last_name": {
                "type": "string",
                "description": "Last name"
              },
              "phone": {
                "type": "string",
                "description": "Phone number"
              }
            },
            "required": [
              "email"
            ]
          }
        }
      }
    },
    "trello": {
      "name": "trello",
      "version": "1.0.0",
      "description": "Trello project management and collaboration tools",
      "category": "productivity",
      "packageName": "mcp-server-trello",
      "npmDownloads": 12000,
      "repositoryUrl": "https://github.com/trello/mcp-server-trello",
      "tools": {
        "create_card": {
          "name": "create_card",
          "description": "Create new card in Trello board",
          "inputSchema": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "description": "List ID"
              },
              "name": {
                "type": "string",
                "description": "Card name"
              },
              "description": {
                "type": "string",
                "description": "Card description"
              },
              "due_date": {
                "type": "string",
                "description": "Due date"
              }
            },
            "required": [
              "list_id",
              "name"
            ]
          }
        },
        "list_boards": {
          "name": "list_boards",
          "description": "List all Trello boards",
          "inputSchema": {
            "type": "object",
            "properties": {}
          }
        },
        "create_board": {
          "name": "create_board",
          "description": "Create new Trello board",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Board name"
              },
              "description": {
                "type": "string",
                "description": "Board description"
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "private",
                  "public",
                  "org"
                ],
                "description": "Board visibility"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "add_member": {
          "name": "add_member",
          "description": "Add member to Trello board",
          "inputSchema": {
            "type": "object",
            "properties": {
              "board_id": {
                "type": "string",
                "description": "Board ID"
              },
              "member_email": {
                "type": "string",
                "description": "Member email"
              },
              "type": {
                "type": "string",
                "enum": [
                  "normal",
                  "admin"
                ],
                "description": "Member type"
              }
            },
            "required": [
              "board_id",
              "member_email"
            ]
          }
        }
      }
    },
    "calendar": {
      "name": "calendar",
      "version": "1.0.0",
      "description": "Calendar management for Google Calendar, Outlook, and other providers",
      "category": "productivity",
      "packageName": "mcp-server-calendar",
      "npmDownloads": 16000,
      "repositoryUrl": "https://github.com/calendar/mcp-server",
      "tools": {
        "create_event": {
          "name": "create_event",
          "description": "Create new calendar event",
          "inputSchema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Event title"
              },
              "start_time": {
                "type": "string",
                "description": "Start time (ISO 8601)"
              },
              "end_time": {
                "type": "string",
                "description": "End time (ISO 8601)"
              },
              "description": {
                "type": "string",
                "description": "Event description"
              },
              "attendees": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Attendee emails"
              }
            },
            "required": [
              "title",
              "start_time",
              "end_time"
            ]
          }
        },
        "list_events": {
          "name": "list_events",
          "description": "List calendar events",
          "inputSchema": {
            "type": "object",
            "properties": {
              "start_date": {
                "type": "string",
                "description": "Start date filter"
              },
              "end_date": {
                "type": "string",
                "description": "End date filter"
              },
              "calendar_id": {
                "type": "string",
                "description": "Calendar ID"
              }
            }
          }
        },
        "update_event": {
          "name": "update_event",
          "description": "Update existing calendar event",
          "inputSchema": {
            "type": "object",
            "properties": {
              "event_id": {
                "type": "string",
                "description": "Event ID"
              },
              "title": {
                "type": "string",
                "description": "New title"
              },
              "start_time": {
                "type": "string",
                "description": "New start time"
              },
              "end_time": {
                "type": "string",
                "description": "New end time"
              }
            },
            "required": [
              "event_id"
            ]
          }
        },
        "delete_event": {
          "name": "delete_event",
          "description": "Delete calendar event",
          "inputSchema": {
            "type": "object",
            "properties": {
              "event_id": {
                "type": "string",
                "description": "Event ID to delete"
              }
            },
            "required": [
              "event_id"
            ]
          }
        }
      }
    },
    "gmail": {
      "name": "gmail",
      "version": "1.0.0",
      "description": "Gmail email management and automation",
      "category": "communication",
      "packageName": "mcp-server-gmail",
      "npmDownloads": 19000,
      "repositoryUrl": "https://github.com/gmail/mcp-server",
      "tools": {
        "send_email": {
          "name": "send_email",
          "description": "Send email via Gmail",
          "inputSchema": {
            "type": "object",
            "properties": {
              "to": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Recipients"
              },
              "subject": {
                "type": "string",
                "description": "Email subject"
              },
              "body": {
                "type": "string",
                "description": "Email body"
              },
              "cc": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "CC recipients"
              },
              "attachments": {
                "type": "array",
                "description": "File attachments"
              }
            },
            "required": [
              "to",
              "subject",
              "body"
            ]
          }
        },
        "list_emails": {
          "name": "list_emails",
          "description": "List emails in Gmail inbox",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "max_results": {
                "type": "number",
                "description": "Max results",
                "default": 10
              },
              "label": {
                "type": "string",
                "description": "Label filter"
              }
            }
          }
        },
        "create_draft": {
          "name": "create_draft",
          "description": "Create email draft",
          "inputSchema": {
            "type": "object",
            "properties": {
              "to": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Recipients"
              },
              "subject": {
                "type": "string",
                "description": "Email subject"
              },
              "body": {
                "type": "string",
                "description": "Email body"
              }
            },
            "required": [
              "to",
              "subject",
              "body"
            ]
          }
        },
        "mark_read": {
          "name": "mark_read",
          "description": "Mark emails as read",
          "inputSchema": {
            "type": "object",
            "properties": {
              "email_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Email IDs"
              }
            },
            "required": [
              "email_ids"
            ]
          }
        }
      }
    },
    "aws": {
      "name": "aws",
      "version": "1.0.0",
      "description": "Amazon Web Services integration for EC2, S3, Lambda, and cloud resource management",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws",
      "npmDownloads": 22000,
      "repositoryUrl": "https://github.com/aws/mcp-server-aws",
      "tools": {
        "list_ec2_instances": {
          "name": "list_ec2_instances",
          "description": "List EC2 instances",
          "inputSchema": {
            "type": "object",
            "properties": {
              "region": {
                "type": "string",
                "description": "AWS region",
                "default": "us-east-1"
              },
              "state": {
                "type": "string",
                "enum": [
                  "running",
                  "stopped",
                  "terminated"
                ],
                "description": "Instance state filter"
              }
            }
          }
        },
        "start_ec2_instance": {
          "name": "start_ec2_instance",
          "description": "Start an EC2 instance",
          "inputSchema": {
            "type": "object",
            "properties": {
              "instance_id": {
                "type": "string",
                "description": "Instance ID to start"
              },
              "region": {
                "type": "string",
                "description": "AWS region",
                "default": "us-east-1"
              }
            },
            "required": [
              "instance_id"
            ]
          }
        },
        "stop_ec2_instance": {
          "name": "stop_ec2_instance",
          "description": "Stop an EC2 instance",
          "inputSchema": {
            "type": "object",
            "properties": {
              "instance_id": {
                "type": "string",
                "description": "Instance ID to stop"
              },
              "region": {
                "type": "string",
                "description": "AWS region",
                "default": "us-east-1"
              }
            },
            "required": [
              "instance_id"
            ]
          }
        },
        "s3_list_buckets": {
          "name": "s3_list_buckets",
          "description": "List S3 buckets",
          "inputSchema": {
            "type": "object",
            "properties": {}
          }
        },
        "s3_list_objects": {
          "name": "s3_list_objects",
          "description": "List objects in S3 bucket",
          "inputSchema": {
            "type": "object",
            "properties": {
              "bucket": {
                "type": "string",
                "description": "S3 bucket name"
              },
              "prefix": {
                "type": "string",
                "description": "Object key prefix"
              },
              "max_keys": {
                "type": "integer",
                "description": "Maximum keys to return",
                "default": 1000
              }
            },
            "required": [
              "bucket"
            ]
          }
        },
        "s3_upload_file": {
          "name": "s3_upload_file",
          "description": "Upload file to S3 bucket",
          "inputSchema": {
            "type": "object",
            "properties": {
              "bucket": {
                "type": "string",
                "description": "S3 bucket name"
              },
              "key": {
                "type": "string",
                "description": "Object key (path)"
              },
              "file_path": {
                "type": "string",
                "description": "Local file path to upload"
              },
              "public": {
                "type": "boolean",
                "description": "Make object public",
                "default": false
              }
            },
            "required": [
              "bucket",
              "key",
              "file_path"
            ]
          }
        },
        "s3_download_file": {
          "name": "s3_download_file",
          "description": "Download file from S3 bucket",
          "inputSchema": {
            "type": "object",
            "properties": {
              "bucket": {
                "type": "string",
                "description": "S3 bucket name"
              },
              "key": {
                "type": "string",
                "description": "Object key"
              },
              "local_path": {
                "type": "string",
                "description": "Local path to save file"
              }
            },
            "required": [
              "bucket",
              "key",
              "local_path"
            ]
          }
        },
        "lambda_list_functions": {
          "name": "lambda_list_functions",
          "description": "List Lambda functions",
          "inputSchema": {
            "type": "object",
            "properties": {
              "region": {
                "type": "string",
                "description": "AWS region",
                "default": "us-east-1"
              }
            }
          }
        },
        "lambda_invoke": {
          "name": "lambda_invoke",
          "description": "Invoke a Lambda function",
          "inputSchema": {
            "type": "object",
            "properties": {
              "function_name": {
                "type": "string",
                "description": "Lambda function name"
              },
              "payload": {
                "type": "object",
                "description": "Function payload"
              },
              "region": {
                "type": "string",
                "description": "AWS region",
                "default": "us-east-1"
              }
            },
            "required": [
              "function_name"
            ]
          }
        }
      }
    },
    "google-sheets": {
      "name": "google-sheets",
      "version": "1.0.0",
      "description": "Google Sheets integration for spreadsheet operations and data management",
      "category": "productivity",
      "packageName": "mcp-server-google-sheets",
      "npmDownloads": 17000,
      "repositoryUrl": "https://github.com/google/mcp-server-sheets",
      "tools": {
        "read_sheet": {
          "name": "read_sheet",
          "description": "Read data from Google Sheets",
          "inputSchema": {
            "type": "object",
            "properties": {
              "spreadsheet_id": {
                "type": "string",
                "description": "Spreadsheet ID"
              },
              "range": {
                "type": "string",
                "description": "Cell range (e.g., A1:C10)"
              },
              "sheet_name": {
                "type": "string",
                "description": "Sheet name"
              }
            },
            "required": [
              "spreadsheet_id",
              "range"
            ]
          }
        },
        "write_sheet": {
          "name": "write_sheet",
          "description": "Write data to Google Sheets",
          "inputSchema": {
            "type": "object",
            "properties": {
              "spreadsheet_id": {
                "type": "string",
                "description": "Spreadsheet ID"
              },
              "range": {
                "type": "string",
                "description": "Cell range"
              },
              "values": {
                "type": "array",
                "description": "2D array of values"
              },
              "sheet_name": {
                "type": "string",
                "description": "Sheet name"
              }
            },
            "required": [
              "spreadsheet_id",
              "range",
              "values"
            ]
          }
        },
        "create_spreadsheet": {
          "name": "create_spreadsheet",
          "description": "Create new Google Spreadsheet",
          "inputSchema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Spreadsheet title"
              },
              "sheet_names": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Initial sheet names"
              }
            },
            "required": [
              "title"
            ]
          }
        },
        "format_cells": {
          "name": "format_cells",
          "description": "Format cells in Google Sheets",
          "inputSchema": {
            "type": "object",
            "properties": {
              "spreadsheet_id": {
                "type": "string",
                "description": "Spreadsheet ID"
              },
              "range": {
                "type": "string",
                "description": "Cell range"
              },
              "format": {
                "type": "object",
                "description": "Formatting options"
              }
            },
            "required": [
              "spreadsheet_id",
              "range",
              "format"
            ]
          }
        }
      }
    },
    "discord": {
      "name": "discord",
      "version": "1.0.0",
      "description": "Discord bot integration for messaging, server management, and community engagement",
      "category": "communication",
      "packageName": "mcp-server-discord",
      "npmDownloads": 21000,
      "repositoryUrl": "https://github.com/discord/mcp-server",
      "tools": {
        "send_message": {
          "name": "send_message",
          "description": "Send message to Discord channel",
          "inputSchema": {
            "type": "object",
            "properties": {
              "channel_id": {
                "type": "string",
                "description": "Channel ID"
              },
              "content": {
                "type": "string",
                "description": "Message content"
              },
              "embed": {
                "type": "object",
                "description": "Rich embed object"
              }
            },
            "required": [
              "channel_id",
              "content"
            ]
          }
        },
        "create_channel": {
          "name": "create_channel",
          "description": "Create new Discord channel",
          "inputSchema": {
            "type": "object",
            "properties": {
              "guild_id": {
                "type": "string",
                "description": "Server ID"
              },
              "name": {
                "type": "string",
                "description": "Channel name"
              },
              "type": {
                "type": "string",
                "enum": [
                  "text",
                  "voice",
                  "category"
                ],
                "description": "Channel type"
              }
            },
            "required": [
              "guild_id",
              "name"
            ]
          }
        },
        "manage_roles": {
          "name": "manage_roles",
          "description": "Manage user roles in Discord server",
          "inputSchema": {
            "type": "object",
            "properties": {
              "guild_id": {
                "type": "string",
                "description": "Server ID"
              },
              "user_id": {
                "type": "string",
                "description": "User ID"
              },
              "role_id": {
                "type": "string",
                "description": "Role ID"
              },
              "action": {
                "type": "string",
                "enum": [
                  "add",
                  "remove"
                ],
                "description": "Action to perform"
              }
            },
            "required": [
              "guild_id",
              "user_id",
              "role_id",
              "action"
            ]
          }
        }
      }
    },
    "youtube": {
      "name": "youtube",
      "version": "1.0.0",
      "description": "YouTube API integration for video management, analytics, and content operations",
      "category": "media",
      "packageName": "mcp-server-youtube",
      "npmDownloads": 18000,
      "repositoryUrl": "https://github.com/youtube/mcp-server",
      "tools": {
        "search_videos": {
          "name": "search_videos",
          "description": "Search YouTube videos",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "max_results": {
                "type": "number",
                "description": "Max results",
                "default": 25
              },
              "order": {
                "type": "string",
                "enum": [
                  "relevance",
                  "date",
                  "rating",
                  "viewCount"
                ],
                "description": "Sort order"
              }
            },
            "required": [
              "query"
            ]
          }
        },
        "upload_video": {
          "name": "upload_video",
          "description": "Upload video to YouTube",
          "inputSchema": {
            "type": "object",
            "properties": {
              "file_path": {
                "type": "string",
                "description": "Video file path"
              },
              "title": {
                "type": "string",
                "description": "Video title"
              },
              "description": {
                "type": "string",
                "description": "Video description"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Video tags"
              },
              "privacy": {
                "type": "string",
                "enum": [
                  "private",
                  "public",
                  "unlisted"
                ],
                "description": "Privacy setting"
              }
            },
            "required": [
              "file_path",
              "title"
            ]
          }
        },
        "get_analytics": {
          "name": "get_analytics",
          "description": "Get YouTube channel analytics",
          "inputSchema": {
            "type": "object",
            "properties": {
              "channel_id": {
                "type": "string",
                "description": "Channel ID"
              },
              "start_date": {
                "type": "string",
                "description": "Start date (YYYY-MM-DD)"
              },
              "end_date": {
                "type": "string",
                "description": "End date (YYYY-MM-DD)"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics to retrieve"
              }
            },
            "required": [
              "channel_id",
              "start_date",
              "end_date"
            ]
          }
        }
      }
    },
    "cloudflare": {
      "name": "cloudflare",
      "version": "1.0.0",
      "description": "Cloudflare API integration for DNS, CDN, security, and performance management",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-cloudflare",
      "npmDownloads": 14000,
      "repositoryUrl": "https://github.com/cloudflare/mcp-server",
      "tools": {
        "list_zones": {
          "name": "list_zones",
          "description": "List Cloudflare zones (domains)",
          "inputSchema": {
            "type": "object",
            "properties": {}
          }
        },
        "create_dns_record": {
          "name": "create_dns_record",
          "description": "Create DNS record in Cloudflare zone",
          "inputSchema": {
            "type": "object",
            "properties": {
              "zone_id": {
                "type": "string",
                "description": "Zone ID"
              },
              "type": {
                "type": "string",
                "enum": [
                  "A",
                  "AAAA",
                  "CNAME",
                  "MX",
                  "TXT"
                ],
                "description": "Record type"
              },
              "name": {
                "type": "string",
                "description": "Record name"
              },
              "content": {
                "type": "string",
                "description": "Record content"
              },
              "ttl": {
                "type": "number",
                "description": "Time to live",
                "default": 1
              }
            },
            "required": [
              "zone_id",
              "type",
              "name",
              "content"
            ]
          }
        },
        "purge_cache": {
          "name": "purge_cache",
          "description": "Purge Cloudflare cache",
          "inputSchema": {
            "type": "object",
            "properties": {
              "zone_id": {
                "type": "string",
                "description": "Zone ID"
              },
              "urls": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "URLs to purge (optional for purge all)"
              }
            },
            "required": [
              "zone_id"
            ]
          }
        },
        "get_analytics": {
          "name": "get_analytics",
          "description": "Get Cloudflare analytics data",
          "inputSchema": {
            "type": "object",
            "properties": {
              "zone_id": {
                "type": "string",
                "description": "Zone ID"
              },
              "since": {
                "type": "string",
                "description": "Start time (ISO 8601)"
              },
              "until": {
                "type": "string",
                "description": "End time (ISO 8601)"
              }
            },
            "required": [
              "zone_id"
            ]
          }
        }
      }
    },
    "neo4j": {
      "name": "neo4j",
      "version": "1.0.0",
      "description": "Neo4j graph database operations and Cypher queries",
      "category": "database",
      "packageName": "mcp-server-neo4j",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/neo4j/mcp-server",
      "tools": {
        "run_cypher": {
          "name": "run_cypher",
          "description": "Execute Cypher query on Neo4j database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Cypher query"
              },
              "parameters": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "query"
            ]
          }
        },
        "create_node": {
          "name": "create_node",
          "description": "Create node in Neo4j graph",
          "inputSchema": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "Node label"
              },
              "properties": {
                "type": "object",
                "description": "Node properties"
              }
            },
            "required": [
              "label"
            ]
          }
        }
      }
    },
    "jira": {
      "name": "jira",
      "version": "1.0.0",
      "description": "Atlassian Jira project management and issue tracking",
      "category": "productivity",
      "packageName": "mcp-server-jira",
      "npmDownloads": 15000,
      "repositoryUrl": "https://github.com/atlassian/mcp-server-jira",
      "tools": {
        "create_issue": {
          "name": "create_issue",
          "description": "Create new Jira issue",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project": {
                "type": "string",
                "description": "Project key"
              },
              "summary": {
                "type": "string",
                "description": "Issue summary"
              },
              "description": {
                "type": "string",
                "description": "Issue description"
              },
              "issue_type": {
                "type": "string",
                "description": "Issue type"
              }
            },
            "required": [
              "project",
              "summary",
              "issue_type"
            ]
          }
        },
        "search_issues": {
          "name": "search_issues",
          "description": "Search Jira issues using JQL",
          "inputSchema": {
            "type": "object",
            "properties": {
              "jql": {
                "type": "string",
                "description": "JQL query"
              },
              "max_results": {
                "type": "number",
                "description": "Max results",
                "default": 50
              }
            },
            "required": [
              "jql"
            ]
          }
        }
      }
    },
    "confluence": {
      "name": "confluence",
      "version": "1.0.0",
      "description": "Atlassian Confluence wiki and documentation platform",
      "category": "productivity",
      "packageName": "mcp-server-confluence",
      "npmDownloads": 12000,
      "repositoryUrl": "https://github.com/atlassian/mcp-server-confluence",
      "tools": {
        "create_page": {
          "name": "create_page",
          "description": "Create Confluence page",
          "inputSchema": {
            "type": "object",
            "properties": {
              "space": {
                "type": "string",
                "description": "Space key"
              },
              "title": {
                "type": "string",
                "description": "Page title"
              },
              "content": {
                "type": "string",
                "description": "Page content"
              }
            },
            "required": [
              "space",
              "title",
              "content"
            ]
          }
        },
        "search_content": {
          "name": "search_content",
          "description": "Search Confluence content",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "limit": {
                "type": "number",
                "description": "Result limit",
                "default": 25
              }
            },
            "required": [
              "query"
            ]
          }
        }
      }
    },
    "hubspot": {
      "name": "hubspot",
      "version": "1.0.0",
      "description": "HubSpot CRM and marketing automation platform",
      "category": "crm",
      "packageName": "mcp-server-hubspot",
      "npmDownloads": 11000,
      "repositoryUrl": "https://github.com/hubspot/mcp-server",
      "tools": {
        "create_contact": {
          "name": "create_contact",
          "description": "Create HubSpot contact",
          "inputSchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Contact email"
              },
              "firstname": {
                "type": "string",
                "description": "First name"
              },
              "lastname": {
                "type": "string",
                "description": "Last name"
              },
              "company": {
                "type": "string",
                "description": "Company name"
              }
            },
            "required": [
              "email"
            ]
          }
        },
        "get_deals": {
          "name": "get_deals",
          "description": "Get HubSpot deals",
          "inputSchema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "description": "Result limit",
                "default": 100
              },
              "stage": {
                "type": "string",
                "description": "Deal stage filter"
              }
            }
          }
        }
      }
    },
    "salesforce": {
      "name": "salesforce",
      "version": "1.0.0",
      "description": "Salesforce CRM platform integration",
      "category": "crm",
      "packageName": "mcp-server-salesforce",
      "npmDownloads": 18000,
      "repositoryUrl": "https://github.com/salesforce/mcp-server",
      "tools": {
        "create_lead": {
          "name": "create_lead",
          "description": "Create Salesforce lead",
          "inputSchema": {
            "type": "object",
            "properties": {
              "firstname": {
                "type": "string",
                "description": "First name"
              },
              "lastname": {
                "type": "string",
                "description": "Last name"
              },
              "email": {
                "type": "string",
                "description": "Email address"
              },
              "company": {
                "type": "string",
                "description": "Company name"
              }
            },
            "required": [
              "lastname",
              "company"
            ]
          }
        },
        "query_soql": {
          "name": "query_soql",
          "description": "Execute SOQL query",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "SOQL query"
              }
            },
            "required": [
              "query"
            ]
          }
        }
      }
    },
    "zendesk": {
      "name": "zendesk",
      "version": "1.0.0",
      "description": "Zendesk customer support and ticketing system",
      "category": "customer-support",
      "packageName": "mcp-server-zendesk",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/zendesk/mcp-server",
      "tools": {
        "create_ticket": {
          "name": "create_ticket",
          "description": "Create Zendesk support ticket",
          "inputSchema": {
            "type": "object",
            "properties": {
              "subject": {
                "type": "string",
                "description": "Ticket subject"
              },
              "description": {
                "type": "string",
                "description": "Ticket description"
              },
              "requester_email": {
                "type": "string",
                "description": "Requester email"
              },
              "priority": {
                "type": "string",
                "enum": [
                  "low",
                  "normal",
                  "high",
                  "urgent"
                ],
                "description": "Ticket priority"
              }
            },
            "required": [
              "subject",
              "description",
              "requester_email"
            ]
          }
        },
        "search_tickets": {
          "name": "search_tickets",
          "description": "Search Zendesk tickets",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "sort": {
                "type": "string",
                "description": "Sort order"
              }
            },
            "required": [
              "query"
            ]
          }
        }
      }
    },
    "telegram": {
      "name": "telegram",
      "version": "1.0.0",
      "description": "Telegram Bot API for messaging and automation",
      "category": "communication",
      "packageName": "mcp-server-telegram",
      "npmDownloads": 16000,
      "repositoryUrl": "https://github.com/telegram/mcp-server",
      "tools": {
        "send_message": {
          "name": "send_message",
          "description": "Send message via Telegram bot",
          "inputSchema": {
            "type": "object",
            "properties": {
              "chat_id": {
                "type": "string",
                "description": "Chat ID"
              },
              "text": {
                "type": "string",
                "description": "Message text"
              },
              "parse_mode": {
                "type": "string",
                "enum": [
                  "Markdown",
                  "HTML"
                ],
                "description": "Parse mode"
              }
            },
            "required": [
              "chat_id",
              "text"
            ]
          }
        },
        "send_photo": {
          "name": "send_photo",
          "description": "Send photo via Telegram bot",
          "inputSchema": {
            "type": "object",
            "properties": {
              "chat_id": {
                "type": "string",
                "description": "Chat ID"
              },
              "photo": {
                "type": "string",
                "description": "Photo file path or URL"
              },
              "caption": {
                "type": "string",
                "description": "Photo caption"
              }
            },
            "required": [
              "chat_id",
              "photo"
            ]
          }
        }
      }
    },
    "spotify": {
      "name": "spotify",
      "version": "1.0.0",
      "description": "Spotify Web API for music streaming and playlist management",
      "category": "media",
      "packageName": "mcp-server-spotify",
      "npmDownloads": 13000,
      "repositoryUrl": "https://github.com/spotify/mcp-server",
      "tools": {
        "search_tracks": {
          "name": "search_tracks",
          "description": "Search Spotify tracks",
          "inputSchema": {
            "type": "object",
            "properties": {
              "q": {
                "type": "string",
                "description": "Search query"
              },
              "limit": {
                "type": "number",
                "description": "Result limit",
                "default": 20
              }
            },
            "required": [
              "q"
            ]
          }
        },
        "create_playlist": {
          "name": "create_playlist",
          "description": "Create Spotify playlist",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Playlist name"
              },
              "description": {
                "type": "string",
                "description": "Playlist description"
              },
              "public": {
                "type": "boolean",
                "description": "Public playlist",
                "default": false
              }
            },
            "required": [
              "name"
            ]
          }
        }
      }
    },
    "dropbox": {
      "name": "dropbox",
      "version": "1.0.0",
      "description": "Dropbox cloud storage and file synchronization",
      "category": "file-operations",
      "packageName": "mcp-server-dropbox",
      "npmDownloads": 14000,
      "repositoryUrl": "https://github.com/dropbox/mcp-server",
      "tools": {
        "list_folder": {
          "name": "list_folder",
          "description": "List contents of Dropbox folder",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Folder path",
                "default": ""
              },
              "recursive": {
                "type": "boolean",
                "description": "Recursive listing",
                "default": false
              }
            }
          }
        },
        "upload_file": {
          "name": "upload_file",
          "description": "Upload file to Dropbox",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Destination path"
              },
              "content": {
                "type": "string",
                "description": "File content"
              },
              "mode": {
                "type": "string",
                "enum": [
                  "add",
                  "overwrite",
                  "update"
                ],
                "description": "Write mode",
                "default": "add"
              }
            },
            "required": [
              "path",
              "content"
            ]
          }
        }
      }
    },
    "box": {
      "name": "box",
      "version": "1.0.0",
      "description": "Box cloud storage and collaboration platform",
      "category": "file-operations",
      "packageName": "mcp-server-box",
      "npmDownloads": 7000,
      "repositoryUrl": "https://github.com/box/mcp-server",
      "tools": {
        "get_folder_items": {
          "name": "get_folder_items",
          "description": "Get items in Box folder",
          "inputSchema": {
            "type": "object",
            "properties": {
              "folder_id": {
                "type": "string",
                "description": "Folder ID",
                "default": "0"
              },
              "limit": {
                "type": "number",
                "description": "Item limit",
                "default": 100
              }
            }
          }
        },
        "upload_file": {
          "name": "upload_file",
          "description": "Upload file to Box",
          "inputSchema": {
            "type": "object",
            "properties": {
              "parent_id": {
                "type": "string",
                "description": "Parent folder ID"
              },
              "name": {
                "type": "string",
                "description": "File name"
              },
              "content": {
                "type": "string",
                "description": "File content"
              }
            },
            "required": [
              "parent_id",
              "name",
              "content"
            ]
          }
        }
      }
    },
    "onedrive": {
      "name": "onedrive",
      "version": "1.0.0",
      "description": "Microsoft OneDrive cloud storage integration",
      "category": "file-operations",
      "packageName": "mcp-server-onedrive",
      "npmDownloads": 12000,
      "repositoryUrl": "https://github.com/microsoft/mcp-server-onedrive",
      "tools": {
        "list_files": {
          "name": "list_files",
          "description": "List files in OneDrive",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Folder path",
                "default": "/"
              },
              "top": {
                "type": "number",
                "description": "Max items",
                "default": 200
              }
            }
          }
        },
        "upload_file": {
          "name": "upload_file",
          "description": "Upload file to OneDrive",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "File path"
              },
              "content": {
                "type": "string",
                "description": "File content"
              }
            },
            "required": [
              "path",
              "content"
            ]
          }
        }
      }
    },
    "teams": {
      "name": "teams",
      "version": "1.0.0",
      "description": "Microsoft Teams collaboration and communication",
      "category": "communication",
      "packageName": "mcp-server-teams",
      "npmDownloads": 10000,
      "repositoryUrl": "https://github.com/microsoft/mcp-server-teams",
      "tools": {
        "send_message": {
          "name": "send_message",
          "description": "Send message to Teams channel",
          "inputSchema": {
            "type": "object",
            "properties": {
              "team_id": {
                "type": "string",
                "description": "Team ID"
              },
              "channel_id": {
                "type": "string",
                "description": "Channel ID"
              },
              "message": {
                "type": "string",
                "description": "Message content"
              }
            },
            "required": [
              "team_id",
              "channel_id",
              "message"
            ]
          }
        },
        "create_meeting": {
          "name": "create_meeting",
          "description": "Create Teams meeting",
          "inputSchema": {
            "type": "object",
            "properties": {
              "subject": {
                "type": "string",
                "description": "Meeting subject"
              },
              "start_time": {
                "type": "string",
                "description": "Start time (ISO 8601)"
              },
              "end_time": {
                "type": "string",
                "description": "End time (ISO 8601)"
              },
              "attendees": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Attendee emails"
              }
            },
            "required": [
              "subject",
              "start_time",
              "end_time"
            ]
          }
        }
      }
    },
    "outlook": {
      "name": "outlook",
      "version": "1.0.0",
      "description": "Microsoft Outlook email and calendar management",
      "category": "communication",
      "packageName": "mcp-server-outlook",
      "npmDownloads": 13000,
      "repositoryUrl": "https://github.com/microsoft/mcp-server-outlook",
      "tools": {
        "send_email": {
          "name": "send_email",
          "description": "Send email via Outlook",
          "inputSchema": {
            "type": "object",
            "properties": {
              "to": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Recipients"
              },
              "subject": {
                "type": "string",
                "description": "Email subject"
              },
              "body": {
                "type": "string",
                "description": "Email body"
              },
              "attachments": {
                "type": "array",
                "description": "File attachments"
              }
            },
            "required": [
              "to",
              "subject",
              "body"
            ]
          }
        },
        "create_event": {
          "name": "create_event",
          "description": "Create Outlook calendar event",
          "inputSchema": {
            "type": "object",
            "properties": {
              "subject": {
                "type": "string",
                "description": "Event subject"
              },
              "start": {
                "type": "string",
                "description": "Start time (ISO 8601)"
              },
              "end": {
                "type": "string",
                "description": "End time (ISO 8601)"
              },
              "attendees": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Attendee emails"
              }
            },
            "required": [
              "subject",
              "start",
              "end"
            ]
          }
        }
      }
    },
    "azure": {
      "name": "azure",
      "version": "1.0.0",
      "description": "Microsoft Azure cloud platform integration",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure",
      "npmDownloads": 15000,
      "repositoryUrl": "https://github.com/microsoft/mcp-server-azure",
      "tools": {
        "list_vms": {
          "name": "list_vms",
          "description": "List Azure virtual machines",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_group": {
                "type": "string",
                "description": "Resource group name"
              },
              "subscription_id": {
                "type": "string",
                "description": "Subscription ID"
              }
            }
          }
        },
        "create_storage_account": {
          "name": "create_storage_account",
          "description": "Create Azure storage account",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Storage account name"
              },
              "resource_group": {
                "type": "string",
                "description": "Resource group"
              },
              "location": {
                "type": "string",
                "description": "Azure region"
              }
            },
            "required": [
              "name",
              "resource_group",
              "location"
            ]
          }
        }
      }
    },
    "gcp": {
      "name": "gcp",
      "version": "1.0.0",
      "description": "Google Cloud Platform services integration",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp",
      "npmDownloads": 16000,
      "repositoryUrl": "https://github.com/google/mcp-server-gcp",
      "tools": {
        "list_instances": {
          "name": "list_instances",
          "description": "List GCP Compute Engine instances",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project": {
                "type": "string",
                "description": "Project ID"
              },
              "zone": {
                "type": "string",
                "description": "Zone name"
              }
            },
            "required": [
              "project"
            ]
          }
        },
        "create_bucket": {
          "name": "create_bucket",
          "description": "Create Google Cloud Storage bucket",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Bucket name"
              },
              "location": {
                "type": "string",
                "description": "Bucket location"
              },
              "storage_class": {
                "type": "string",
                "description": "Storage class"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      }
    },
    "vercel": {
      "name": "vercel",
      "version": "1.0.0",
      "description": "Vercel deployment and hosting platform",
      "category": "deployment",
      "packageName": "mcp-server-vercel",
      "npmDownloads": 11000,
      "repositoryUrl": "https://github.com/vercel/mcp-server",
      "tools": {
        "deploy_project": {
          "name": "deploy_project",
          "description": "Deploy project to Vercel",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Project name"
              },
              "files": {
                "type": "object",
                "description": "Project files"
              },
              "env": {
                "type": "object",
                "description": "Environment variables"
              }
            },
            "required": [
              "name",
              "files"
            ]
          }
        },
        "list_deployments": {
          "name": "list_deployments",
          "description": "List Vercel deployments",
          "inputSchema": {
            "type": "object",
            "properties": {
              "app": {
                "type": "string",
                "description": "App name"
              },
              "limit": {
                "type": "number",
                "description": "Result limit",
                "default": 20
              }
            }
          }
        }
      }
    },
    "netlify": {
      "name": "netlify",
      "version": "1.0.0",
      "description": "Netlify web hosting and deployment platform",
      "category": "deployment",
      "packageName": "mcp-server-netlify",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/netlify/mcp-server",
      "tools": {
        "create_site": {
          "name": "create_site",
          "description": "Create Netlify site",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Site name"
              },
              "custom_domain": {
                "type": "string",
                "description": "Custom domain"
              },
              "repo": {
                "type": "object",
                "description": "Repository configuration"
              }
            }
          }
        },
        "deploy_site": {
          "name": "deploy_site",
          "description": "Deploy site to Netlify",
          "inputSchema": {
            "type": "object",
            "properties": {
              "site_id": {
                "type": "string",
                "description": "Site ID"
              },
              "files": {
                "type": "object",
                "description": "Site files"
              }
            },
            "required": [
              "site_id",
              "files"
            ]
          }
        }
      }
    },
    "heroku": {
      "name": "heroku",
      "version": "1.0.0",
      "description": "Heroku cloud application platform",
      "category": "deployment",
      "packageName": "mcp-server-heroku",
      "npmDownloads": 12000,
      "repositoryUrl": "https://github.com/heroku/mcp-server",
      "tools": {
        "create_app": {
          "name": "create_app",
          "description": "Create Heroku application",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "App name"
              },
              "region": {
                "type": "string",
                "description": "Deployment region",
                "default": "us"
              },
              "stack": {
                "type": "string",
                "description": "Runtime stack"
              }
            }
          }
        },
        "scale_dyno": {
          "name": "scale_dyno",
          "description": "Scale Heroku dyno",
          "inputSchema": {
            "type": "object",
            "properties": {
              "app": {
                "type": "string",
                "description": "App name"
              },
              "type": {
                "type": "string",
                "description": "Dyno type"
              },
              "quantity": {
                "type": "number",
                "description": "Dyno quantity"
              }
            },
            "required": [
              "app",
              "type",
              "quantity"
            ]
          }
        }
      }
    },
    "firebase": {
      "name": "firebase",
      "version": "1.0.0",
      "description": "Google Firebase backend services platform",
      "category": "backend-services",
      "packageName": "mcp-server-firebase",
      "npmDownloads": 14000,
      "repositoryUrl": "https://github.com/firebase/mcp-server",
      "tools": {
        "add_document": {
          "name": "add_document",
          "description": "Add document to Firestore",
          "inputSchema": {
            "type": "object",
            "properties": {
              "collection": {
                "type": "string",
                "description": "Collection name"
              },
              "document": {
                "type": "object",
                "description": "Document data"
              },
              "id": {
                "type": "string",
                "description": "Document ID"
              }
            },
            "required": [
              "collection",
              "document"
            ]
          }
        },
        "query_collection": {
          "name": "query_collection",
          "description": "Query Firestore collection",
          "inputSchema": {
            "type": "object",
            "properties": {
              "collection": {
                "type": "string",
                "description": "Collection name"
              },
              "where": {
                "type": "array",
                "description": "Where conditions"
              },
              "limit": {
                "type": "number",
                "description": "Result limit"
              }
            },
            "required": [
              "collection"
            ]
          }
        }
      }
    },
    "supabase": {
      "name": "supabase",
      "version": "1.0.0",
      "description": "Supabase open source Firebase alternative",
      "category": "backend-services",
      "packageName": "mcp-server-supabase",
      "npmDownloads": 10000,
      "repositoryUrl": "https://github.com/supabase/mcp-server",
      "tools": {
        "select": {
          "name": "select",
          "description": "Select data from Supabase table",
          "inputSchema": {
            "type": "object",
            "properties": {
              "table": {
                "type": "string",
                "description": "Table name"
              },
              "columns": {
                "type": "string",
                "description": "Columns to select"
              },
              "filter": {
                "type": "object",
                "description": "Filter conditions"
              }
            },
            "required": [
              "table"
            ]
          }
        },
        "insert": {
          "name": "insert",
          "description": "Insert data into Supabase table",
          "inputSchema": {
            "type": "object",
            "properties": {
              "table": {
                "type": "string",
                "description": "Table name"
              },
              "data": {
                "type": "object",
                "description": "Data to insert"
              }
            },
            "required": [
              "table",
              "data"
            ]
          }
        }
      }
    },
    "planetscale": {
      "name": "planetscale",
      "version": "1.0.0",
      "description": "PlanetScale serverless MySQL platform",
      "category": "database",
      "packageName": "mcp-server-planetscale",
      "npmDownloads": 6000,
      "repositoryUrl": "https://github.com/planetscale/mcp-server",
      "tools": {
        "execute_query": {
          "name": "execute_query",
          "description": "Execute SQL query on PlanetScale database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "query"
            ]
          }
        },
        "create_branch": {
          "name": "create_branch",
          "description": "Create database branch",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Branch name"
              },
              "parent_branch": {
                "type": "string",
                "description": "Parent branch",
                "default": "main"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      }
    },
    "airtable": {
      "name": "airtable",
      "version": "1.0.0",
      "description": "Airtable spreadsheet-database hybrid platform",
      "category": "database",
      "packageName": "mcp-server-airtable",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/airtable/mcp-server",
      "tools": {
        "list_records": {
          "name": "list_records",
          "description": "List records from Airtable base",
          "inputSchema": {
            "type": "object",
            "properties": {
              "base_id": {
                "type": "string",
                "description": "Base ID"
              },
              "table_name": {
                "type": "string",
                "description": "Table name"
              },
              "max_records": {
                "type": "number",
                "description": "Max records",
                "default": 100
              }
            },
            "required": [
              "base_id",
              "table_name"
            ]
          }
        },
        "create_record": {
          "name": "create_record",
          "description": "Create record in Airtable",
          "inputSchema": {
            "type": "object",
            "properties": {
              "base_id": {
                "type": "string",
                "description": "Base ID"
              },
              "table_name": {
                "type": "string",
                "description": "Table name"
              },
              "fields": {
                "type": "object",
                "description": "Record fields"
              }
            },
            "required": [
              "base_id",
              "table_name",
              "fields"
            ]
          }
        }
      }
    },
    "figma": {
      "name": "figma",
      "version": "1.0.0",
      "description": "Figma design collaboration platform",
      "category": "design",
      "packageName": "mcp-server-figma",
      "npmDownloads": 7000,
      "repositoryUrl": "https://github.com/figma/mcp-server",
      "tools": {
        "get_file": {
          "name": "get_file",
          "description": "Get Figma file information",
          "inputSchema": {
            "type": "object",
            "properties": {
              "file_key": {
                "type": "string",
                "description": "File key"
              }
            },
            "required": [
              "file_key"
            ]
          }
        },
        "export_images": {
          "name": "export_images",
          "description": "Export images from Figma file",
          "inputSchema": {
            "type": "object",
            "properties": {
              "file_key": {
                "type": "string",
                "description": "File key"
              },
              "node_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Node IDs"
              },
              "format": {
                "type": "string",
                "enum": [
                  "jpg",
                  "png",
                  "svg",
                  "pdf"
                ],
                "description": "Export format"
              }
            },
            "required": [
              "file_key",
              "node_ids"
            ]
          }
        }
      }
    },
    "linear": {
      "name": "linear",
      "version": "1.0.0",
      "description": "Linear issue tracking and project management",
      "category": "productivity",
      "packageName": "mcp-server-linear",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/linear/mcp-server",
      "tools": {
        "create_issue": {
          "name": "create_issue",
          "description": "Create Linear issue",
          "inputSchema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Issue title"
              },
              "description": {
                "type": "string",
                "description": "Issue description"
              },
              "team_id": {
                "type": "string",
                "description": "Team ID"
              },
              "priority": {
                "type": "number",
                "description": "Priority (1-4)",
                "minimum": 1,
                "maximum": 4
              }
            },
            "required": [
              "title",
              "team_id"
            ]
          }
        },
        "search_issues": {
          "name": "search_issues",
          "description": "Search Linear issues",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "limit": {
                "type": "number",
                "description": "Result limit",
                "default": 25
              }
            },
            "required": [
              "query"
            ]
          }
        }
      }
    },
    "asana": {
      "name": "asana",
      "version": "1.0.0",
      "description": "Asana project management and team collaboration",
      "category": "productivity",
      "packageName": "mcp-server-asana",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/asana/mcp-server",
      "tools": {
        "create_task": {
          "name": "create_task",
          "description": "Create Asana task",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Task name"
              },
              "notes": {
                "type": "string",
                "description": "Task notes"
              },
              "projects": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Project IDs"
              },
              "assignee": {
                "type": "string",
                "description": "Assignee user ID"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "get_tasks": {
          "name": "get_tasks",
          "description": "Get Asana tasks",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project": {
                "type": "string",
                "description": "Project ID"
              },
              "assignee": {
                "type": "string",
                "description": "Assignee user ID"
              },
              "completed_since": {
                "type": "string",
                "description": "Completion date filter"
              }
            }
          }
        }
      }
    },
    "gitlab": {
      "name": "gitlab",
      "version": "1.0.0",
      "description": "GitLab version control and DevOps platform",
      "category": "developer-tools",
      "packageName": "mcp-server-gitlab",
      "npmDownloads": 11000,
      "repositoryUrl": "https://github.com/gitlab/mcp-server",
      "tools": {
        "create_project": {
          "name": "create_project",
          "description": "Create GitLab project",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Project name"
              },
              "description": {
                "type": "string",
                "description": "Project description"
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "private",
                  "internal",
                  "public"
                ],
                "description": "Visibility level"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "create_issue": {
          "name": "create_issue",
          "description": "Create GitLab issue",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_id": {
                "type": "string",
                "description": "Project ID"
              },
              "title": {
                "type": "string",
                "description": "Issue title"
              },
              "description": {
                "type": "string",
                "description": "Issue description"
              },
              "labels": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Issue labels"
              }
            },
            "required": [
              "project_id",
              "title"
            ]
          }
        }
      }
    },
    "bitbucket": {
      "name": "bitbucket",
      "version": "1.0.0",
      "description": "Atlassian Bitbucket version control platform",
      "category": "developer-tools",
      "packageName": "mcp-server-bitbucket",
      "npmDownloads": 6000,
      "repositoryUrl": "https://github.com/atlassian/mcp-server-bitbucket",
      "tools": {
        "create_repository": {
          "name": "create_repository",
          "description": "Create Bitbucket repository",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Repository name"
              },
              "workspace": {
                "type": "string",
                "description": "Workspace slug"
              },
              "is_private": {
                "type": "boolean",
                "description": "Private repository",
                "default": true
              }
            },
            "required": [
              "name",
              "workspace"
            ]
          }
        },
        "create_pull_request": {
          "name": "create_pull_request",
          "description": "Create Bitbucket pull request",
          "inputSchema": {
            "type": "object",
            "properties": {
              "repository": {
                "type": "string",
                "description": "Repository full name"
              },
              "title": {
                "type": "string",
                "description": "PR title"
              },
              "source": {
                "type": "object",
                "description": "Source branch"
              },
              "destination": {
                "type": "object",
                "description": "Destination branch"
              }
            },
            "required": [
              "repository",
              "title",
              "source",
              "destination"
            ]
          }
        }
      }
    },
    "circleci": {
      "name": "circleci",
      "version": "1.0.0",
      "description": "CircleCI continuous integration and deployment",
      "category": "ci-cd",
      "packageName": "mcp-server-circleci",
      "npmDownloads": 5000,
      "repositoryUrl": "https://github.com/circleci/mcp-server",
      "tools": {
        "trigger_pipeline": {
          "name": "trigger_pipeline",
          "description": "Trigger CircleCI pipeline",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_slug": {
                "type": "string",
                "description": "Project slug"
              },
              "branch": {
                "type": "string",
                "description": "Branch name",
                "default": "main"
              },
              "parameters": {
                "type": "object",
                "description": "Pipeline parameters"
              }
            },
            "required": [
              "project_slug"
            ]
          }
        },
        "get_pipeline": {
          "name": "get_pipeline",
          "description": "Get CircleCI pipeline details",
          "inputSchema": {
            "type": "object",
            "properties": {
              "pipeline_id": {
                "type": "string",
                "description": "Pipeline ID"
              }
            },
            "required": [
              "pipeline_id"
            ]
          }
        }
      }
    },
    "jenkins": {
      "name": "jenkins",
      "version": "1.0.0",
      "description": "Jenkins automation server for CI/CD",
      "category": "ci-cd",
      "packageName": "mcp-server-jenkins",
      "npmDownloads": 7000,
      "repositoryUrl": "https://github.com/jenkins/mcp-server",
      "tools": {
        "build_job": {
          "name": "build_job",
          "description": "Trigger Jenkins job build",
          "inputSchema": {
            "type": "object",
            "properties": {
              "job_name": {
                "type": "string",
                "description": "Job name"
              },
              "parameters": {
                "type": "object",
                "description": "Build parameters"
              }
            },
            "required": [
              "job_name"
            ]
          }
        },
        "get_build_info": {
          "name": "get_build_info",
          "description": "Get Jenkins build information",
          "inputSchema": {
            "type": "object",
            "properties": {
              "job_name": {
                "type": "string",
                "description": "Job name"
              },
              "build_number": {
                "type": "number",
                "description": "Build number"
              }
            },
            "required": [
              "job_name",
              "build_number"
            ]
          }
        }
      }
    },
    "github-actions": {
      "name": "github-actions",
      "version": "1.0.0",
      "description": "GitHub Actions CI/CD workflow automation",
      "category": "ci-cd",
      "packageName": "mcp-server-github-actions",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/github/mcp-server-actions",
      "tools": {
        "trigger_workflow": {
          "name": "trigger_workflow",
          "description": "Trigger GitHub Actions workflow",
          "inputSchema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Repository owner"
              },
              "repo": {
                "type": "string",
                "description": "Repository name"
              },
              "workflow_id": {
                "type": "string",
                "description": "Workflow ID"
              },
              "ref": {
                "type": "string",
                "description": "Git reference",
                "default": "main"
              }
            },
            "required": [
              "owner",
              "repo",
              "workflow_id"
            ]
          }
        },
        "list_workflow_runs": {
          "name": "list_workflow_runs",
          "description": "List GitHub Actions workflow runs",
          "inputSchema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Repository owner"
              },
              "repo": {
                "type": "string",
                "description": "Repository name"
              },
              "workflow_id": {
                "type": "string",
                "description": "Workflow ID"
              }
            },
            "required": [
              "owner",
              "repo",
              "workflow_id"
            ]
          }
        }
      }
    },
    "datadog": {
      "name": "datadog",
      "version": "1.0.0",
      "description": "DataDog monitoring and analytics platform",
      "category": "monitoring",
      "packageName": "mcp-server-datadog",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/datadog/mcp-server",
      "tools": {
        "create_metric": {
          "name": "create_metric",
          "description": "Submit metric to DataDog",
          "inputSchema": {
            "type": "object",
            "properties": {
              "metric": {
                "type": "string",
                "description": "Metric name"
              },
              "points": {
                "type": "array",
                "description": "Data points"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metric tags"
              }
            },
            "required": [
              "metric",
              "points"
            ]
          }
        },
        "create_event": {
          "name": "create_event",
          "description": "Create DataDog event",
          "inputSchema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Event title"
              },
              "text": {
                "type": "string",
                "description": "Event description"
              },
              "alert_type": {
                "type": "string",
                "enum": [
                  "error",
                  "warning",
                  "info",
                  "success"
                ],
                "description": "Alert type"
              }
            },
            "required": [
              "title",
              "text"
            ]
          }
        }
      }
    },
    "newrelic": {
      "name": "newrelic",
      "version": "1.0.0",
      "description": "New Relic application performance monitoring",
      "category": "monitoring",
      "packageName": "mcp-server-newrelic",
      "npmDownloads": 6000,
      "repositoryUrl": "https://github.com/newrelic/mcp-server",
      "tools": {
        "query_nrql": {
          "name": "query_nrql",
          "description": "Execute NRQL query",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "NRQL query"
              },
              "account_id": {
                "type": "string",
                "description": "Account ID"
              }
            },
            "required": [
              "query",
              "account_id"
            ]
          }
        },
        "create_alert": {
          "name": "create_alert",
          "description": "Create New Relic alert condition",
          "inputSchema": {
            "type": "object",
            "properties": {
              "policy_id": {
                "type": "string",
                "description": "Alert policy ID"
              },
              "name": {
                "type": "string",
                "description": "Condition name"
              },
              "condition": {
                "type": "object",
                "description": "Alert condition"
              }
            },
            "required": [
              "policy_id",
              "name",
              "condition"
            ]
          }
        }
      }
    },
    "grafana": {
      "name": "grafana",
      "version": "1.0.0",
      "description": "Grafana observability and monitoring dashboards",
      "category": "monitoring",
      "packageName": "mcp-server-grafana",
      "npmDownloads": 7000,
      "repositoryUrl": "https://github.com/grafana/mcp-server",
      "tools": {
        "create_dashboard": {
          "name": "create_dashboard",
          "description": "Create Grafana dashboard",
          "inputSchema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Dashboard title"
              },
              "dashboard": {
                "type": "object",
                "description": "Dashboard JSON"
              },
              "folder_id": {
                "type": "number",
                "description": "Folder ID"
              }
            },
            "required": [
              "title",
              "dashboard"
            ]
          }
        },
        "create_alert": {
          "name": "create_alert",
          "description": "Create Grafana alert rule",
          "inputSchema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Alert title"
              },
              "condition": {
                "type": "object",
                "description": "Alert condition"
              },
              "folder_uid": {
                "type": "string",
                "description": "Folder UID"
              }
            },
            "required": [
              "title",
              "condition",
              "folder_uid"
            ]
          }
        }
      }
    },
    "prometheus": {
      "name": "prometheus",
      "version": "1.0.0",
      "description": "Prometheus monitoring and alerting system",
      "category": "monitoring",
      "packageName": "mcp-server-prometheus",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/prometheus/mcp-server",
      "tools": {
        "query": {
          "name": "query",
          "description": "Execute PromQL query",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "PromQL query"
              },
              "time": {
                "type": "string",
                "description": "Query time (RFC 3339)"
              }
            },
            "required": [
              "query"
            ]
          }
        },
        "query_range": {
          "name": "query_range",
          "description": "Execute range PromQL query",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "PromQL query"
              },
              "start": {
                "type": "string",
                "description": "Start time (RFC 3339)"
              },
              "end": {
                "type": "string",
                "description": "End time (RFC 3339)"
              },
              "step": {
                "type": "string",
                "description": "Query step duration"
              }
            },
            "required": [
              "query",
              "start",
              "end",
              "step"
            ]
          }
        }
      }
    },
    "sentry": {
      "name": "sentry",
      "version": "1.0.0",
      "description": "Sentry error tracking and performance monitoring",
      "category": "monitoring",
      "packageName": "mcp-server-sentry",
      "npmDownloads": 10000,
      "repositoryUrl": "https://github.com/sentry/mcp-server",
      "tools": {
        "list_issues": {
          "name": "list_issues",
          "description": "List Sentry issues",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project": {
                "type": "string",
                "description": "Project slug"
              },
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "statsPeriod": {
                "type": "string",
                "description": "Stats period",
                "default": "24h"
              }
            },
            "required": [
              "project"
            ]
          }
        },
        "create_release": {
          "name": "create_release",
          "description": "Create Sentry release",
          "inputSchema": {
            "type": "object",
            "properties": {
              "organization": {
                "type": "string",
                "description": "Organization slug"
              },
              "version": {
                "type": "string",
                "description": "Release version"
              },
              "projects": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Project slugs"
              }
            },
            "required": [
              "organization",
              "version"
            ]
          }
        }
      }
    },
    "terraform": {
      "name": "terraform",
      "version": "1.0.0",
      "description": "HashiCorp Terraform infrastructure as code",
      "category": "infrastructure",
      "packageName": "mcp-server-terraform",
      "npmDownloads": 11000,
      "repositoryUrl": "https://github.com/hashicorp/mcp-server-terraform",
      "tools": {
        "plan": {
          "name": "plan",
          "description": "Execute Terraform plan",
          "inputSchema": {
            "type": "object",
            "properties": {
              "workspace": {
                "type": "string",
                "description": "Terraform workspace"
              },
              "var_files": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Variable files"
              }
            }
          }
        },
        "apply": {
          "name": "apply",
          "description": "Execute Terraform apply",
          "inputSchema": {
            "type": "object",
            "properties": {
              "workspace": {
                "type": "string",
                "description": "Terraform workspace"
              },
              "auto_approve": {
                "type": "boolean",
                "description": "Auto approve",
                "default": false
              }
            }
          }
        }
      }
    },
    "ansible": {
      "name": "ansible",
      "version": "1.0.0",
      "description": "Red Hat Ansible automation and configuration management",
      "category": "infrastructure",
      "packageName": "mcp-server-ansible",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/ansible/mcp-server",
      "tools": {
        "run_playbook": {
          "name": "run_playbook",
          "description": "Execute Ansible playbook",
          "inputSchema": {
            "type": "object",
            "properties": {
              "playbook": {
                "type": "string",
                "description": "Playbook file path"
              },
              "inventory": {
                "type": "string",
                "description": "Inventory file path"
              },
              "extra_vars": {
                "type": "object",
                "description": "Extra variables"
              }
            },
            "required": [
              "playbook"
            ]
          }
        },
        "run_command": {
          "name": "run_command",
          "description": "Execute Ansible ad-hoc command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "hosts": {
                "type": "string",
                "description": "Target hosts pattern"
              },
              "module": {
                "type": "string",
                "description": "Ansible module"
              },
              "args": {
                "type": "string",
                "description": "Module arguments"
              }
            },
            "required": [
              "hosts",
              "module"
            ]
          }
        }
      }
    },
    "pulumi": {
      "name": "pulumi",
      "version": "1.0.0",
      "description": "Pulumi infrastructure as code platform",
      "category": "infrastructure",
      "packageName": "mcp-server-pulumi",
      "npmDownloads": 6000,
      "repositoryUrl": "https://github.com/pulumi/mcp-server",
      "tools": {
        "up": {
          "name": "up",
          "description": "Deploy Pulumi stack",
          "inputSchema": {
            "type": "object",
            "properties": {
              "stack": {
                "type": "string",
                "description": "Stack name"
              },
              "config": {
                "type": "object",
                "description": "Configuration values"
              }
            }
          }
        },
        "preview": {
          "name": "preview",
          "description": "Preview Pulumi deployment",
          "inputSchema": {
            "type": "object",
            "properties": {
              "stack": {
                "type": "string",
                "description": "Stack name"
              },
              "diff": {
                "type": "boolean",
                "description": "Show detailed diff",
                "default": false
              }
            }
          }
        }
      }
    },
    "auth0": {
      "name": "auth0",
      "version": "1.0.0",
      "description": "Auth0 identity and access management platform",
      "category": "authentication",
      "packageName": "mcp-server-auth0",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/auth0/mcp-server",
      "tools": {
        "create_user": {
          "name": "create_user",
          "description": "Create Auth0 user",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection": {
                "type": "string",
                "description": "Connection name"
              },
              "email": {
                "type": "string",
                "description": "User email"
              },
              "password": {
                "type": "string",
                "description": "User password"
              },
              "user_metadata": {
                "type": "object",
                "description": "User metadata"
              }
            },
            "required": [
              "connection",
              "email",
              "password"
            ]
          }
        },
        "get_users": {
          "name": "get_users",
          "description": "List Auth0 users",
          "inputSchema": {
            "type": "object",
            "properties": {
              "q": {
                "type": "string",
                "description": "Search query"
              },
              "per_page": {
                "type": "number",
                "description": "Results per page",
                "default": 25
              }
            }
          }
        }
      }
    },
    "okta": {
      "name": "okta",
      "version": "1.0.0",
      "description": "Okta identity and access management platform",
      "category": "authentication",
      "packageName": "mcp-server-okta",
      "npmDownloads": 7000,
      "repositoryUrl": "https://github.com/okta/mcp-server",
      "tools": {
        "create_user": {
          "name": "create_user",
          "description": "Create Okta user",
          "inputSchema": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "description": "User profile"
              },
              "credentials": {
                "type": "object",
                "description": "User credentials"
              },
              "activate": {
                "type": "boolean",
                "description": "Activate user",
                "default": true
              }
            },
            "required": [
              "profile"
            ]
          }
        },
        "list_applications": {
          "name": "list_applications",
          "description": "List Okta applications",
          "inputSchema": {
            "type": "object",
            "properties": {
              "q": {
                "type": "string",
                "description": "Search query"
              },
              "limit": {
                "type": "number",
                "description": "Result limit",
                "default": 20
              }
            }
          }
        }
      }
    },
    "twitch": {
      "name": "twitch",
      "version": "1.0.0",
      "description": "Twitch streaming platform API integration",
      "category": "media",
      "packageName": "mcp-server-twitch",
      "npmDownloads": 5000,
      "repositoryUrl": "https://github.com/twitch/mcp-server",
      "tools": {
        "get_streams": {
          "name": "get_streams",
          "description": "Get live Twitch streams",
          "inputSchema": {
            "type": "object",
            "properties": {
              "game_id": {
                "type": "string",
                "description": "Game ID filter"
              },
              "user_login": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "User login names"
              },
              "first": {
                "type": "number",
                "description": "Number of streams",
                "default": 20
              }
            }
          }
        },
        "create_clip": {
          "name": "create_clip",
          "description": "Create Twitch clip",
          "inputSchema": {
            "type": "object",
            "properties": {
              "broadcaster_id": {
                "type": "string",
                "description": "Broadcaster user ID"
              },
              "has_delay": {
                "type": "boolean",
                "description": "Add delay",
                "default": false
              }
            },
            "required": [
              "broadcaster_id"
            ]
          }
        }
      }
    },
    "openai": {
      "name": "openai",
      "version": "1.0.0",
      "description": "OpenAI API for AI models and completions",
      "category": "ai-ml",
      "packageName": "mcp-server-openai",
      "npmDownloads": 20000,
      "repositoryUrl": "https://github.com/openai/mcp-server",
      "tools": {
        "create_completion": {
          "name": "create_completion",
          "description": "Create OpenAI completion",
          "inputSchema": {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "description": "Model name",
                "default": "gpt-3.5-turbo"
              },
              "messages": {
                "type": "array",
                "description": "Chat messages"
              },
              "temperature": {
                "type": "number",
                "description": "Sampling temperature",
                "default": 1
              },
              "max_tokens": {
                "type": "number",
                "description": "Maximum tokens"
              }
            },
            "required": [
              "messages"
            ]
          }
        },
        "create_image": {
          "name": "create_image",
          "description": "Generate image with DALL-E",
          "inputSchema": {
            "type": "object",
            "properties": {
              "prompt": {
                "type": "string",
                "description": "Image prompt"
              },
              "n": {
                "type": "number",
                "description": "Number of images",
                "default": 1
              },
              "size": {
                "type": "string",
                "enum": [
                  "256x256",
                  "512x512",
                  "1024x1024"
                ],
                "description": "Image size",
                "default": "1024x1024"
              }
            },
            "required": [
              "prompt"
            ]
          }
        }
      }
    },
    "anthropic": {
      "name": "anthropic",
      "version": "1.0.0",
      "description": "Anthropic Claude API for AI conversations",
      "category": "ai-ml",
      "packageName": "mcp-server-anthropic",
      "npmDownloads": 15000,
      "repositoryUrl": "https://github.com/anthropic/mcp-server",
      "tools": {
        "create_message": {
          "name": "create_message",
          "description": "Create message with Claude",
          "inputSchema": {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "description": "Claude model",
                "default": "claude-3-sonnet-20240229"
              },
              "messages": {
                "type": "array",
                "description": "Conversation messages"
              },
              "max_tokens": {
                "type": "number",
                "description": "Maximum tokens",
                "default": 1024
              },
              "system": {
                "type": "string",
                "description": "System prompt"
              }
            },
            "required": [
              "messages"
            ]
          }
        }
      }
    },
    "huggingface": {
      "name": "huggingface",
      "version": "1.0.0",
      "description": "Hugging Face ML models and datasets platform",
      "category": "ai-ml",
      "packageName": "mcp-server-huggingface",
      "npmDownloads": 12000,
      "repositoryUrl": "https://github.com/huggingface/mcp-server",
      "tools": {
        "inference": {
          "name": "inference",
          "description": "Run inference on Hugging Face model",
          "inputSchema": {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "description": "Model ID"
              },
              "inputs": {
                "type": "string",
                "description": "Input text"
              },
              "parameters": {
                "type": "object",
                "description": "Model parameters"
              }
            },
            "required": [
              "model",
              "inputs"
            ]
          }
        },
        "list_models": {
          "name": "list_models",
          "description": "List available models",
          "inputSchema": {
            "type": "object",
            "properties": {
              "search": {
                "type": "string",
                "description": "Search query"
              },
              "filter": {
                "type": "string",
                "description": "Model filter"
              },
              "limit": {
                "type": "number",
                "description": "Result limit",
                "default": 20
              }
            }
          }
        }
      }
    },
    "replicate": {
      "name": "replicate",
      "version": "1.0.0",
      "description": "Replicate machine learning model platform",
      "category": "ai-ml",
      "packageName": "mcp-server-replicate",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/replicate/mcp-server",
      "tools": {
        "create_prediction": {
          "name": "create_prediction",
          "description": "Create model prediction",
          "inputSchema": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "Model version ID"
              },
              "input": {
                "type": "object",
                "description": "Input parameters"
              },
              "webhook": {
                "type": "string",
                "description": "Webhook URL"
              }
            },
            "required": [
              "version",
              "input"
            ]
          }
        },
        "get_prediction": {
          "name": "get_prediction",
          "description": "Get prediction status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Prediction ID"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      }
    },
    "stability": {
      "name": "stability",
      "version": "1.0.0",
      "description": "Stability AI image generation and editing",
      "category": "ai-ml",
      "packageName": "mcp-server-stability",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/stability/mcp-server",
      "tools": {
        "generate_image": {
          "name": "generate_image",
          "description": "Generate image with Stable Diffusion",
          "inputSchema": {
            "type": "object",
            "properties": {
              "text_prompts": {
                "type": "array",
                "description": "Text prompts"
              },
              "height": {
                "type": "number",
                "description": "Image height",
                "default": 512
              },
              "width": {
                "type": "number",
                "description": "Image width",
                "default": 512
              },
              "steps": {
                "type": "number",
                "description": "Inference steps",
                "default": 50
              }
            },
            "required": [
              "text_prompts"
            ]
          }
        }
      }
    },
    "woocommerce": {
      "name": "woocommerce",
      "version": "1.0.0",
      "description": "WooCommerce WordPress e-commerce platform",
      "category": "e-commerce",
      "packageName": "mcp-server-woocommerce",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/woocommerce/mcp-server",
      "tools": {
        "create_product": {
          "name": "create_product",
          "description": "Create WooCommerce product",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Product name"
              },
              "type": {
                "type": "string",
                "description": "Product type",
                "default": "simple"
              },
              "regular_price": {
                "type": "string",
                "description": "Regular price"
              },
              "description": {
                "type": "string",
                "description": "Product description"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "list_orders": {
          "name": "list_orders",
          "description": "List WooCommerce orders",
          "inputSchema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Order status"
              },
              "per_page": {
                "type": "number",
                "description": "Orders per page",
                "default": 10
              }
            }
          }
        }
      }
    },
    "bigcommerce": {
      "name": "bigcommerce",
      "version": "1.0.0",
      "description": "BigCommerce e-commerce platform integration",
      "category": "e-commerce",
      "packageName": "mcp-server-bigcommerce",
      "npmDownloads": 5000,
      "repositoryUrl": "https://github.com/bigcommerce/mcp-server",
      "tools": {
        "create_product": {
          "name": "create_product",
          "description": "Create BigCommerce product",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Product name"
              },
              "price": {
                "type": "number",
                "description": "Product price"
              },
              "categories": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "description": "Category IDs"
              },
              "weight": {
                "type": "number",
                "description": "Product weight"
              }
            },
            "required": [
              "name",
              "price"
            ]
          }
        },
        "get_orders": {
          "name": "get_orders",
          "description": "Get BigCommerce orders",
          "inputSchema": {
            "type": "object",
            "properties": {
              "status_id": {
                "type": "number",
                "description": "Order status ID"
              },
              "limit": {
                "type": "number",
                "description": "Result limit",
                "default": 50
              }
            }
          }
        }
      }
    },
    "magento": {
      "name": "magento",
      "version": "1.0.0",
      "description": "Adobe Magento e-commerce platform",
      "category": "e-commerce",
      "packageName": "mcp-server-magento",
      "npmDownloads": 6000,
      "repositoryUrl": "https://github.com/magento/mcp-server",
      "tools": {
        "create_product": {
          "name": "create_product",
          "description": "Create Magento product",
          "inputSchema": {
            "type": "object",
            "properties": {
              "product": {
                "type": "object",
                "description": "Product data"
              },
              "sku": {
                "type": "string",
                "description": "Product SKU"
              },
              "name": {
                "type": "string",
                "description": "Product name"
              },
              "price": {
                "type": "number",
                "description": "Product price"
              }
            },
            "required": [
              "product"
            ]
          }
        },
        "search_products": {
          "name": "search_products",
          "description": "Search Magento products",
          "inputSchema": {
            "type": "object",
            "properties": {
              "searchCriteria": {
                "type": "object",
                "description": "Search criteria"
              }
            },
            "required": [
              "searchCriteria"
            ]
          }
        }
      }
    },
    "intercom": {
      "name": "intercom",
      "version": "1.0.0",
      "description": "Intercom customer messaging platform",
      "category": "customer-support",
      "packageName": "mcp-server-intercom",
      "npmDownloads": 7000,
      "repositoryUrl": "https://github.com/intercom/mcp-server",
      "tools": {
        "create_user": {
          "name": "create_user",
          "description": "Create Intercom user",
          "inputSchema": {
            "type": "object",
            "properties": {
              "user_id": {
                "type": "string",
                "description": "User ID"
              },
              "email": {
                "type": "string",
                "description": "User email"
              },
              "name": {
                "type": "string",
                "description": "User name"
              },
              "custom_attributes": {
                "type": "object",
                "description": "Custom attributes"
              }
            }
          }
        },
        "create_conversation": {
          "name": "create_conversation",
          "description": "Create Intercom conversation",
          "inputSchema": {
            "type": "object",
            "properties": {
              "from": {
                "type": "object",
                "description": "Message sender"
              },
              "body": {
                "type": "string",
                "description": "Message body"
              },
              "message_type": {
                "type": "string",
                "enum": [
                  "email",
                  "inapp"
                ],
                "description": "Message type"
              }
            },
            "required": [
              "from",
              "body"
            ]
          }
        }
      }
    },
    "freshdesk": {
      "name": "freshdesk",
      "version": "1.0.0",
      "description": "Freshworks customer support platform",
      "category": "customer-support",
      "packageName": "mcp-server-freshdesk",
      "npmDownloads": 6000,
      "repositoryUrl": "https://github.com/freshworks/mcp-server-freshdesk",
      "tools": {
        "create_ticket": {
          "name": "create_ticket",
          "description": "Create Freshdesk support ticket",
          "inputSchema": {
            "type": "object",
            "properties": {
              "subject": {
                "type": "string",
                "description": "Ticket subject"
              },
              "description": {
                "type": "string",
                "description": "Ticket description"
              },
              "email": {
                "type": "string",
                "description": "Requester email"
              },
              "priority": {
                "type": "number",
                "enum": [
                  1,
                  2,
                  3,
                  4
                ],
                "description": "Ticket priority"
              },
              "status": {
                "type": "number",
                "enum": [
                  2,
                  3,
                  4,
                  5
                ],
                "description": "Ticket status"
              }
            },
            "required": [
              "subject",
              "description",
              "email"
            ]
          }
        },
        "list_tickets": {
          "name": "list_tickets",
          "description": "List Freshdesk tickets",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Ticket filter"
              },
              "page": {
                "type": "number",
                "description": "Page number",
                "default": 1
              },
              "per_page": {
                "type": "number",
                "description": "Tickets per page",
                "default": 30
              }
            }
          }
        }
      }
    },
    "shell": {
      "name": "shell",
      "version": "1.0.0",
      "description": "Shell command execution and system operations",
      "category": "system-operations",
      "packageName": "mcp-server-shell",
      "npmDownloads": 25000,
      "repositoryUrl": "https://github.com/shell/mcp-server",
      "tools": {
        "exec": {
          "name": "exec",
          "description": "Execute shell command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "cwd": {
                "type": "string",
                "description": "Working directory"
              },
              "env": {
                "type": "object",
                "description": "Environment variables"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "exec_async": {
          "name": "exec_async",
          "description": "Execute shell command asynchronously",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "timeout": {
                "type": "number",
                "description": "Timeout in milliseconds"
              }
            },
            "required": [
              "command"
            ]
          }
        }
      }
    },
    "git": {
      "name": "git",
      "version": "1.0.0",
      "description": "Git version control operations and repository management",
      "category": "developer-tools",
      "packageName": "mcp-server-git",
      "npmDownloads": 22000,
      "repositoryUrl": "https://github.com/git/mcp-server",
      "tools": {
        "clone": {
          "name": "clone",
          "description": "Clone Git repository",
          "inputSchema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "Repository URL"
              },
              "path": {
                "type": "string",
                "description": "Clone destination path"
              },
              "branch": {
                "type": "string",
                "description": "Branch to clone"
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "commit": {
          "name": "commit",
          "description": "Create Git commit",
          "inputSchema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Commit message"
              },
              "files": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Files to commit"
              }
            },
            "required": [
              "message"
            ]
          }
        },
        "push": {
          "name": "push",
          "description": "Push changes to remote repository",
          "inputSchema": {
            "type": "object",
            "properties": {
              "remote": {
                "type": "string",
                "description": "Remote name",
                "default": "origin"
              },
              "branch": {
                "type": "string",
                "description": "Branch to push",
                "default": "main"
              }
            }
          }
        }
      }
    },
    "vscode": {
      "name": "vscode",
      "version": "1.0.0",
      "description": "Visual Studio Code editor integration and automation",
      "category": "developer-tools",
      "packageName": "mcp-server-vscode",
      "npmDownloads": 18000,
      "repositoryUrl": "https://github.com/microsoft/mcp-server-vscode",
      "tools": {
        "open_file": {
          "name": "open_file",
          "description": "Open file in VS Code",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "File path to open"
              },
              "line": {
                "type": "number",
                "description": "Line number to navigate to"
              }
            },
            "required": [
              "path"
            ]
          }
        },
        "run_command": {
          "name": "run_command",
          "description": "Execute VS Code command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "VS Code command ID"
              },
              "args": {
                "type": "array",
                "description": "Command arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        }
      }
    },
    "npm": {
      "name": "npm",
      "version": "1.0.0",
      "description": "Node.js package manager operations and dependency management",
      "category": "developer-tools",
      "packageName": "mcp-server-npm",
      "npmDownloads": 30000,
      "repositoryUrl": "https://github.com/npm/mcp-server",
      "tools": {
        "install": {
          "name": "install",
          "description": "Install npm packages",
          "inputSchema": {
            "type": "object",
            "properties": {
              "packages": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Packages to install"
              },
              "dev": {
                "type": "boolean",
                "description": "Install as dev dependencies",
                "default": false
              },
              "global": {
                "type": "boolean",
                "description": "Install globally",
                "default": false
              }
            }
          }
        },
        "run_script": {
          "name": "run_script",
          "description": "Run npm script",
          "inputSchema": {
            "type": "object",
            "properties": {
              "script": {
                "type": "string",
                "description": "Script name to run"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Script arguments"
              }
            },
            "required": [
              "script"
            ]
          }
        }
      }
    },
    "elasticsearch-bulk": {
      "name": "elasticsearch-bulk",
      "version": "1.0.0",
      "description": "Elasticsearch bulk operations and data ingestion",
      "category": "database",
      "packageName": "mcp-server-elasticsearch-bulk",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/elastic/mcp-server-bulk",
      "tools": {
        "bulk_index": {
          "name": "bulk_index",
          "description": "Bulk index documents",
          "inputSchema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "string",
                "description": "Index name"
              },
              "documents": {
                "type": "array",
                "description": "Documents to index"
              }
            },
            "required": [
              "index",
              "documents"
            ]
          }
        },
        "bulk_delete": {
          "name": "bulk_delete",
          "description": "Bulk delete documents",
          "inputSchema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "string",
                "description": "Index name"
              },
              "ids": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Document IDs to delete"
              }
            },
            "required": [
              "index",
              "ids"
            ]
          }
        }
      }
    },
    "kafka": {
      "name": "kafka",
      "version": "1.0.0",
      "description": "Apache Kafka message streaming and event processing",
      "category": "messaging",
      "packageName": "mcp-server-kafka",
      "npmDownloads": 12000,
      "repositoryUrl": "https://github.com/apache/mcp-server-kafka",
      "tools": {
        "produce": {
          "name": "produce",
          "description": "Produce message to Kafka topic",
          "inputSchema": {
            "type": "object",
            "properties": {
              "topic": {
                "type": "string",
                "description": "Kafka topic"
              },
              "message": {
                "type": "string",
                "description": "Message content"
              },
              "key": {
                "type": "string",
                "description": "Message key"
              },
              "partition": {
                "type": "number",
                "description": "Partition number"
              }
            },
            "required": [
              "topic",
              "message"
            ]
          }
        },
        "consume": {
          "name": "consume",
          "description": "Consume messages from Kafka topic",
          "inputSchema": {
            "type": "object",
            "properties": {
              "topic": {
                "type": "string",
                "description": "Kafka topic"
              },
              "group": {
                "type": "string",
                "description": "Consumer group"
              },
              "offset": {
                "type": "string",
                "enum": [
                  "earliest",
                  "latest"
                ],
                "description": "Offset to start from"
              }
            },
            "required": [
              "topic",
              "group"
            ]
          }
        }
      }
    },
    "rabbitmq": {
      "name": "rabbitmq",
      "version": "1.0.0",
      "description": "RabbitMQ message broker operations and queue management",
      "category": "messaging",
      "packageName": "mcp-server-rabbitmq",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/rabbitmq/mcp-server",
      "tools": {
        "publish": {
          "name": "publish",
          "description": "Publish message to RabbitMQ exchange",
          "inputSchema": {
            "type": "object",
            "properties": {
              "exchange": {
                "type": "string",
                "description": "Exchange name"
              },
              "routing_key": {
                "type": "string",
                "description": "Routing key"
              },
              "message": {
                "type": "string",
                "description": "Message content"
              },
              "properties": {
                "type": "object",
                "description": "Message properties"
              }
            },
            "required": [
              "exchange",
              "message"
            ]
          }
        },
        "consume": {
          "name": "consume",
          "description": "Consume messages from RabbitMQ queue",
          "inputSchema": {
            "type": "object",
            "properties": {
              "queue": {
                "type": "string",
                "description": "Queue name"
              },
              "auto_ack": {
                "type": "boolean",
                "description": "Auto acknowledge",
                "default": true
              }
            },
            "required": [
              "queue"
            ]
          }
        }
      }
    },
    "jira-service-desk": {
      "name": "jira-service-desk",
      "version": "1.0.0",
      "description": "Atlassian Jira Service Desk for IT service management",
      "category": "customer-support",
      "packageName": "mcp-server-jira-service-desk",
      "npmDownloads": 7000,
      "repositoryUrl": "https://github.com/atlassian/mcp-server-jsd",
      "tools": {
        "create_request": {
          "name": "create_request",
          "description": "Create service desk request",
          "inputSchema": {
            "type": "object",
            "properties": {
              "service_desk_id": {
                "type": "string",
                "description": "Service desk ID"
              },
              "request_type_id": {
                "type": "string",
                "description": "Request type ID"
              },
              "summary": {
                "type": "string",
                "description": "Request summary"
              },
              "description": {
                "type": "string",
                "description": "Request description"
              }
            },
            "required": [
              "service_desk_id",
              "request_type_id",
              "summary"
            ]
          }
        },
        "get_requests": {
          "name": "get_requests",
          "description": "Get customer requests",
          "inputSchema": {
            "type": "object",
            "properties": {
              "service_desk_id": {
                "type": "string",
                "description": "Service desk ID"
              },
              "expand": {
                "type": "string",
                "description": "Fields to expand"
              }
            }
          }
        }
      }
    },
    "miro": {
      "name": "miro",
      "version": "1.0.0",
      "description": "Miro collaborative whiteboard and visual collaboration platform",
      "category": "design",
      "packageName": "mcp-server-miro",
      "npmDownloads": 6000,
      "repositoryUrl": "https://github.com/miro/mcp-server",
      "tools": {
        "create_board": {
          "name": "create_board",
          "description": "Create Miro board",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Board name"
              },
              "description": {
                "type": "string",
                "description": "Board description"
              },
              "team_id": {
                "type": "string",
                "description": "Team ID"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "create_widget": {
          "name": "create_widget",
          "description": "Create widget on Miro board",
          "inputSchema": {
            "type": "object",
            "properties": {
              "board_id": {
                "type": "string",
                "description": "Board ID"
              },
              "type": {
                "type": "string",
                "description": "Widget type"
              },
              "data": {
                "type": "object",
                "description": "Widget data"
              }
            },
            "required": [
              "board_id",
              "type",
              "data"
            ]
          }
        }
      }
    },
    "adobe": {
      "name": "adobe",
      "version": "1.0.0",
      "description": "Adobe Creative Cloud integration for design and media processing",
      "category": "design",
      "packageName": "mcp-server-adobe",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/adobe/mcp-server",
      "tools": {
        "generate_rendition": {
          "name": "generate_rendition",
          "description": "Generate image rendition using Adobe APIs",
          "inputSchema": {
            "type": "object",
            "properties": {
              "input": {
                "type": "string",
                "description": "Input image URL"
              },
              "output_format": {
                "type": "string",
                "description": "Output format"
              },
              "width": {
                "type": "number",
                "description": "Output width"
              },
              "height": {
                "type": "number",
                "description": "Output height"
              }
            },
            "required": [
              "input",
              "output_format"
            ]
          }
        }
      }
    },
    "canva": {
      "name": "canva",
      "version": "1.0.0",
      "description": "Canva design platform integration for automated design creation",
      "category": "design",
      "packageName": "mcp-server-canva",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/canva/mcp-server",
      "tools": {
        "create_design": {
          "name": "create_design",
          "description": "Create Canva design",
          "inputSchema": {
            "type": "object",
            "properties": {
              "template_id": {
                "type": "string",
                "description": "Template ID"
              },
              "title": {
                "type": "string",
                "description": "Design title"
              },
              "elements": {
                "type": "array",
                "description": "Design elements"
              }
            }
          }
        },
        "export_design": {
          "name": "export_design",
          "description": "Export Canva design",
          "inputSchema": {
            "type": "object",
            "properties": {
              "design_id": {
                "type": "string",
                "description": "Design ID"
              },
              "format": {
                "type": "string",
                "enum": [
                  "png",
                  "jpg",
                  "pdf"
                ],
                "description": "Export format"
              }
            },
            "required": [
              "design_id",
              "format"
            ]
          }
        }
      }
    },
    "loom": {
      "name": "loom",
      "version": "1.0.0",
      "description": "Loom video messaging and screen recording platform",
      "category": "media",
      "packageName": "mcp-server-loom",
      "npmDownloads": 5000,
      "repositoryUrl": "https://github.com/loom/mcp-server",
      "tools": {
        "create_video": {
          "name": "create_video",
          "description": "Create Loom video",
          "inputSchema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Video title"
              },
              "description": {
                "type": "string",
                "description": "Video description"
              },
              "folder_id": {
                "type": "string",
                "description": "Folder ID"
              }
            },
            "required": [
              "title"
            ]
          }
        },
        "get_videos": {
          "name": "get_videos",
          "description": "Get Loom videos",
          "inputSchema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "description": "Result limit",
                "default": 25
              },
              "folder_id": {
                "type": "string",
                "description": "Folder ID filter"
              }
            }
          }
        }
      }
    },
    "vimeo": {
      "name": "vimeo",
      "version": "1.0.0",
      "description": "Vimeo video hosting and streaming platform",
      "category": "media",
      "packageName": "mcp-server-vimeo",
      "npmDownloads": 7000,
      "repositoryUrl": "https://github.com/vimeo/mcp-server",
      "tools": {
        "upload_video": {
          "name": "upload_video",
          "description": "Upload video to Vimeo",
          "inputSchema": {
            "type": "object",
            "properties": {
              "file_path": {
                "type": "string",
                "description": "Video file path"
              },
              "name": {
                "type": "string",
                "description": "Video name"
              },
              "description": {
                "type": "string",
                "description": "Video description"
              },
              "privacy": {
                "type": "object",
                "description": "Privacy settings"
              }
            },
            "required": [
              "file_path",
              "name"
            ]
          }
        },
        "get_videos": {
          "name": "get_videos",
          "description": "Get user videos",
          "inputSchema": {
            "type": "object",
            "properties": {
              "per_page": {
                "type": "number",
                "description": "Videos per page",
                "default": 25
              },
              "sort": {
                "type": "string",
                "description": "Sort order"
              }
            }
          }
        }
      }
    },
    "zoom": {
      "name": "zoom",
      "version": "1.0.0",
      "description": "Zoom video conferencing and meeting management",
      "category": "communication",
      "packageName": "mcp-server-zoom",
      "npmDownloads": 11000,
      "repositoryUrl": "https://github.com/zoom/mcp-server",
      "tools": {
        "create_meeting": {
          "name": "create_meeting",
          "description": "Create Zoom meeting",
          "inputSchema": {
            "type": "object",
            "properties": {
              "topic": {
                "type": "string",
                "description": "Meeting topic"
              },
              "start_time": {
                "type": "string",
                "description": "Start time (ISO 8601)"
              },
              "duration": {
                "type": "number",
                "description": "Duration in minutes"
              },
              "password": {
                "type": "string",
                "description": "Meeting password"
              }
            },
            "required": [
              "topic"
            ]
          }
        },
        "list_meetings": {
          "name": "list_meetings",
          "description": "List user meetings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "scheduled",
                  "live",
                  "upcoming"
                ],
                "description": "Meeting type"
              },
              "page_size": {
                "type": "number",
                "description": "Page size",
                "default": 30
              }
            }
          }
        }
      }
    },
    "webex": {
      "name": "webex",
      "version": "1.0.0",
      "description": "Cisco WebEx video conferencing and collaboration",
      "category": "communication",
      "packageName": "mcp-server-webex",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/cisco/mcp-server-webex",
      "tools": {
        "create_meeting": {
          "name": "create_meeting",
          "description": "Create WebEx meeting",
          "inputSchema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Meeting title"
              },
              "start": {
                "type": "string",
                "description": "Start time (ISO 8601)"
              },
              "end": {
                "type": "string",
                "description": "End time (ISO 8601)"
              },
              "invitees": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Invitee emails"
              }
            },
            "required": [
              "title",
              "start",
              "end"
            ]
          }
        },
        "list_recordings": {
          "name": "list_recordings",
          "description": "List meeting recordings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "description": "Start date (ISO 8601)"
              },
              "to": {
                "type": "string",
                "description": "End date (ISO 8601)"
              },
              "max": {
                "type": "number",
                "description": "Max results",
                "default": 100
              }
            }
          }
        }
      }
    },
    "todoist": {
      "name": "todoist",
      "version": "1.0.0",
      "description": "Todoist task management and productivity platform",
      "category": "productivity",
      "packageName": "mcp-server-todoist",
      "npmDownloads": 10000,
      "repositoryUrl": "https://github.com/todoist/mcp-server",
      "tools": {
        "create_task": {
          "name": "create_task",
          "description": "Create Todoist task",
          "inputSchema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "Task content"
              },
              "project_id": {
                "type": "string",
                "description": "Project ID"
              },
              "due_date": {
                "type": "string",
                "description": "Due date"
              },
              "priority": {
                "type": "number",
                "enum": [
                  1,
                  2,
                  3,
                  4
                ],
                "description": "Task priority"
              }
            },
            "required": [
              "content"
            ]
          }
        },
        "get_tasks": {
          "name": "get_tasks",
          "description": "Get Todoist tasks",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_id": {
                "type": "string",
                "description": "Project ID filter"
              },
              "label": {
                "type": "string",
                "description": "Label filter"
              },
              "filter": {
                "type": "string",
                "description": "Task filter"
              }
            }
          }
        }
      }
    },
    "monday": {
      "name": "monday",
      "version": "1.0.0",
      "description": "Monday.com work operating system and project management",
      "category": "productivity",
      "packageName": "mcp-server-monday",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/monday/mcp-server",
      "tools": {
        "create_item": {
          "name": "create_item",
          "description": "Create Monday.com item",
          "inputSchema": {
            "type": "object",
            "properties": {
              "board_id": {
                "type": "string",
                "description": "Board ID"
              },
              "item_name": {
                "type": "string",
                "description": "Item name"
              },
              "column_values": {
                "type": "object",
                "description": "Column values"
              }
            },
            "required": [
              "board_id",
              "item_name"
            ]
          }
        },
        "get_boards": {
          "name": "get_boards",
          "description": "Get Monday.com boards",
          "inputSchema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "description": "Result limit",
                "default": 25
              },
              "page": {
                "type": "number",
                "description": "Page number",
                "default": 1
              }
            }
          }
        }
      }
    },
    "clickup": {
      "name": "clickup",
      "version": "1.0.0",
      "description": "ClickUp productivity and project management platform",
      "category": "productivity",
      "packageName": "mcp-server-clickup",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/clickup/mcp-server",
      "tools": {
        "create_task": {
          "name": "create_task",
          "description": "Create ClickUp task",
          "inputSchema": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "description": "List ID"
              },
              "name": {
                "type": "string",
                "description": "Task name"
              },
              "description": {
                "type": "string",
                "description": "Task description"
              },
              "assignees": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Assignee user IDs"
              }
            },
            "required": [
              "list_id",
              "name"
            ]
          }
        },
        "get_tasks": {
          "name": "get_tasks",
          "description": "Get ClickUp tasks",
          "inputSchema": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "description": "List ID"
              },
              "archived": {
                "type": "boolean",
                "description": "Include archived tasks",
                "default": false
              }
            },
            "required": [
              "list_id"
            ]
          }
        }
      }
    },
    "airtable-sync": {
      "name": "airtable-sync",
      "version": "1.0.0",
      "description": "Airtable synchronization and real-time data operations",
      "category": "database",
      "packageName": "mcp-server-airtable-sync",
      "npmDownloads": 6000,
      "repositoryUrl": "https://github.com/airtable/mcp-server-sync",
      "tools": {
        "sync_base": {
          "name": "sync_base",
          "description": "Synchronize Airtable base with external data",
          "inputSchema": {
            "type": "object",
            "properties": {
              "base_id": {
                "type": "string",
                "description": "Base ID"
              },
              "source_config": {
                "type": "object",
                "description": "Data source configuration"
              },
              "mapping": {
                "type": "object",
                "description": "Field mapping configuration"
              }
            },
            "required": [
              "base_id",
              "source_config"
            ]
          }
        },
        "webhook_create": {
          "name": "webhook_create",
          "description": "Create Airtable webhook",
          "inputSchema": {
            "type": "object",
            "properties": {
              "base_id": {
                "type": "string",
                "description": "Base ID"
              },
              "notification_url": {
                "type": "string",
                "description": "Webhook URL"
              },
              "specification": {
                "type": "object",
                "description": "Webhook specification"
              }
            },
            "required": [
              "base_id",
              "notification_url"
            ]
          }
        }
      }
    },
    "whatsapp": {
      "name": "whatsapp",
      "version": "1.0.0",
      "description": "WhatsApp Business API for messaging and customer communication",
      "category": "communication",
      "packageName": "mcp-server-whatsapp",
      "npmDownloads": 12000,
      "repositoryUrl": "https://github.com/whatsapp/mcp-server",
      "tools": {
        "send_message": {
          "name": "send_message",
          "description": "Send WhatsApp message",
          "inputSchema": {
            "type": "object",
            "properties": {
              "to": {
                "type": "string",
                "description": "Recipient phone number"
              },
              "text": {
                "type": "string",
                "description": "Message text"
              },
              "type": {
                "type": "string",
                "enum": [
                  "text",
                  "template"
                ],
                "description": "Message type",
                "default": "text"
              }
            },
            "required": [
              "to",
              "text"
            ]
          }
        },
        "send_template": {
          "name": "send_template",
          "description": "Send WhatsApp template message",
          "inputSchema": {
            "type": "object",
            "properties": {
              "to": {
                "type": "string",
                "description": "Recipient phone number"
              },
              "template": {
                "type": "object",
                "description": "Template configuration"
              }
            },
            "required": [
              "to",
              "template"
            ]
          }
        }
      }
    },
    "mailchimp": {
      "name": "mailchimp",
      "version": "1.0.0",
      "description": "Mailchimp email marketing and automation platform",
      "category": "marketing",
      "packageName": "mcp-server-mailchimp",
      "npmDownloads": 11000,
      "repositoryUrl": "https://github.com/mailchimp/mcp-server",
      "tools": {
        "add_member": {
          "name": "add_member",
          "description": "Add member to Mailchimp list",
          "inputSchema": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "description": "List ID"
              },
              "email": {
                "type": "string",
                "description": "Email address"
              },
              "status": {
                "type": "string",
                "enum": [
                  "subscribed",
                  "unsubscribed",
                  "cleaned",
                  "pending"
                ],
                "description": "Subscription status"
              },
              "merge_fields": {
                "type": "object",
                "description": "Merge fields"
              }
            },
            "required": [
              "list_id",
              "email",
              "status"
            ]
          }
        },
        "create_campaign": {
          "name": "create_campaign",
          "description": "Create Mailchimp campaign",
          "inputSchema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "regular",
                  "plaintext",
                  "absplit",
                  "rss",
                  "variate"
                ],
                "description": "Campaign type"
              },
              "recipients": {
                "type": "object",
                "description": "Campaign recipients"
              },
              "settings": {
                "type": "object",
                "description": "Campaign settings"
              }
            },
            "required": [
              "type",
              "recipients",
              "settings"
            ]
          }
        }
      }
    },
    "convertkit": {
      "name": "convertkit",
      "version": "1.0.0",
      "description": "ConvertKit email marketing platform for creators",
      "category": "marketing",
      "packageName": "mcp-server-convertkit",
      "npmDownloads": 5000,
      "repositoryUrl": "https://github.com/convertkit/mcp-server",
      "tools": {
        "add_subscriber": {
          "name": "add_subscriber",
          "description": "Add subscriber to ConvertKit",
          "inputSchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Email address"
              },
              "first_name": {
                "type": "string",
                "description": "First name"
              },
              "fields": {
                "type": "object",
                "description": "Custom fields"
              }
            },
            "required": [
              "email"
            ]
          }
        },
        "create_broadcast": {
          "name": "create_broadcast",
          "description": "Create ConvertKit broadcast",
          "inputSchema": {
            "type": "object",
            "properties": {
              "subject": {
                "type": "string",
                "description": "Email subject"
              },
              "content": {
                "type": "string",
                "description": "Email content"
              },
              "description": {
                "type": "string",
                "description": "Broadcast description"
              }
            },
            "required": [
              "subject",
              "content"
            ]
          }
        }
      }
    },
    "activecampaign": {
      "name": "activecampaign",
      "version": "1.0.0",
      "description": "ActiveCampaign customer experience automation platform",
      "category": "marketing",
      "packageName": "mcp-server-activecampaign",
      "npmDownloads": 7000,
      "repositoryUrl": "https://github.com/activecampaign/mcp-server",
      "tools": {
        "create_contact": {
          "name": "create_contact",
          "description": "Create ActiveCampaign contact",
          "inputSchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Contact email"
              },
              "first_name": {
                "type": "string",
                "description": "First name"
              },
              "last_name": {
                "type": "string",
                "description": "Last name"
              },
              "phone": {
                "type": "string",
                "description": "Phone number"
              }
            },
            "required": [
              "email"
            ]
          }
        },
        "create_automation": {
          "name": "create_automation",
          "description": "Create ActiveCampaign automation",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Automation name"
              },
              "trigger": {
                "type": "object",
                "description": "Trigger configuration"
              },
              "actions": {
                "type": "array",
                "description": "Automation actions"
              }
            },
            "required": [
              "name",
              "trigger"
            ]
          }
        }
      }
    },
    "pipedrive": {
      "name": "pipedrive",
      "version": "1.0.0",
      "description": "Pipedrive sales CRM and pipeline management",
      "category": "crm",
      "packageName": "mcp-server-pipedrive",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/pipedrive/mcp-server",
      "tools": {
        "create_deal": {
          "name": "create_deal",
          "description": "Create Pipedrive deal",
          "inputSchema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Deal title"
              },
              "value": {
                "type": "number",
                "description": "Deal value"
              },
              "currency": {
                "type": "string",
                "description": "Currency code",
                "default": "USD"
              },
              "person_id": {
                "type": "number",
                "description": "Associated person ID"
              }
            },
            "required": [
              "title"
            ]
          }
        },
        "create_person": {
          "name": "create_person",
          "description": "Create Pipedrive person",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Person name"
              },
              "email": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Email addresses"
              },
              "phone": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Phone numbers"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      }
    },
    "close": {
      "name": "close",
      "version": "1.0.0",
      "description": "Close sales CRM platform for SMBs",
      "category": "crm",
      "packageName": "mcp-server-close",
      "npmDownloads": 4000,
      "repositoryUrl": "https://github.com/close/mcp-server",
      "tools": {
        "create_lead": {
          "name": "create_lead",
          "description": "Create Close lead",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Lead name"
              },
              "description": {
                "type": "string",
                "description": "Lead description"
              },
              "contacts": {
                "type": "array",
                "description": "Lead contacts"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "create_opportunity": {
          "name": "create_opportunity",
          "description": "Create Close opportunity",
          "inputSchema": {
            "type": "object",
            "properties": {
              "lead_id": {
                "type": "string",
                "description": "Lead ID"
              },
              "status": {
                "type": "string",
                "description": "Opportunity status"
              },
              "value": {
                "type": "number",
                "description": "Opportunity value"
              },
              "value_period": {
                "type": "string",
                "enum": [
                  "one_time",
                  "monthly",
                  "annual"
                ],
                "description": "Value period"
              }
            },
            "required": [
              "lead_id",
              "status"
            ]
          }
        }
      }
    },
    "puppeteer": {
      "name": "puppeteer",
      "version": "1.2.0",
      "description": "Headless Chrome automation for web scraping and testing",
      "category": "browser-automation",
      "packageName": "mcp-server-puppeteer",
      "npmDownloads": 25000,
      "repositoryUrl": "https://github.com/puppeteer/mcp-server",
      "tools": {
        "navigate_page": {
          "name": "navigate_page",
          "description": "Navigate to a web page",
          "inputSchema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to navigate to"
              },
              "wait_for": {
                "type": "string",
                "description": "Selector to wait for"
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "click_element": {
          "name": "click_element",
          "description": "Click on a web element",
          "inputSchema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector"
              }
            },
            "required": [
              "selector"
            ]
          }
        },
        "take_screenshot": {
          "name": "take_screenshot",
          "description": "Take a screenshot of the page",
          "inputSchema": {
            "type": "object",
            "properties": {
              "full_page": {
                "type": "boolean",
                "description": "Capture full page"
              }
            }
          }
        }
      }
    },
    "playwright": {
      "name": "playwright",
      "version": "1.1.0",
      "description": "Cross-browser automation with Chromium, Firefox, and Safari",
      "category": "browser-automation",
      "packageName": "mcp-server-playwright",
      "npmDownloads": 18000,
      "repositoryUrl": "https://github.com/microsoft/mcp-server-playwright",
      "tools": {
        "create_context": {
          "name": "create_context",
          "description": "Create a new browser context",
          "inputSchema": {
            "type": "object",
            "properties": {
              "browser": {
                "type": "string",
                "enum": [
                  "chromium",
                  "firefox",
                  "webkit"
                ],
                "description": "Browser type"
              },
              "viewport": {
                "type": "object",
                "description": "Viewport dimensions"
              }
            }
          }
        },
        "run_script": {
          "name": "run_script",
          "description": "Execute JavaScript in browser",
          "inputSchema": {
            "type": "object",
            "properties": {
              "script": {
                "type": "string",
                "description": "JavaScript code to execute"
              }
            },
            "required": [
              "script"
            ]
          }
        }
      }
    },
    "selenium": {
      "name": "selenium",
      "version": "1.0.0",
      "description": "Web browser automation and testing framework",
      "category": "browser-automation",
      "packageName": "mcp-server-selenium",
      "npmDownloads": 22000,
      "repositoryUrl": "https://github.com/selenium/mcp-server",
      "tools": {
        "find_element": {
          "name": "find_element",
          "description": "Find web element using various strategies",
          "inputSchema": {
            "type": "object",
            "properties": {
              "by": {
                "type": "string",
                "enum": [
                  "id",
                  "class",
                  "xpath",
                  "css"
                ],
                "description": "Selection strategy"
              },
              "value": {
                "type": "string",
                "description": "Selector value"
              }
            },
            "required": [
              "by",
              "value"
            ]
          }
        },
        "send_keys": {
          "name": "send_keys",
          "description": "Send keystrokes to an element",
          "inputSchema": {
            "type": "object",
            "properties": {
              "element_id": {
                "type": "string",
                "description": "Element identifier"
              },
              "text": {
                "type": "string",
                "description": "Text to type"
              }
            },
            "required": [
              "element_id",
              "text"
            ]
          }
        }
      }
    },
    "browserstack": {
      "name": "browserstack",
      "version": "1.0.0",
      "description": "Cross-browser testing platform",
      "category": "browser-automation",
      "packageName": "mcp-server-browserstack",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/browserstack/mcp-server",
      "tools": {
        "start_session": {
          "name": "start_session",
          "description": "Start BrowserStack testing session",
          "inputSchema": {
            "type": "object",
            "properties": {
              "browser": {
                "type": "string",
                "description": "Browser name"
              },
              "browser_version": {
                "type": "string",
                "description": "Browser version"
              },
              "os": {
                "type": "string",
                "description": "Operating system"
              },
              "os_version": {
                "type": "string",
                "description": "OS version"
              }
            },
            "required": [
              "browser",
              "os"
            ]
          }
        }
      }
    },
    "scrapfly": {
      "name": "scrapfly",
      "version": "1.0.0",
      "description": "Web scraping API with anti-bot protection",
      "category": "web-scraping",
      "packageName": "mcp-server-scrapfly",
      "npmDownloads": 5000,
      "repositoryUrl": "https://github.com/scrapfly/mcp-server",
      "tools": {
        "scrape_page": {
          "name": "scrape_page",
          "description": "Scrape web page content",
          "inputSchema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to scrape"
              },
              "render_js": {
                "type": "boolean",
                "description": "Render JavaScript"
              },
              "proxy_pool": {
                "type": "string",
                "description": "Proxy pool to use"
              }
            },
            "required": [
              "url"
            ]
          }
        }
      }
    },
    "terraform-cloud": {
      "name": "terraform-cloud",
      "version": "1.0.0",
      "description": "HashiCorp Terraform Cloud infrastructure management",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-terraform-cloud",
      "npmDownloads": 12000,
      "repositoryUrl": "https://github.com/hashicorp/mcp-server-terraform-cloud",
      "tools": {
        "create_workspace": {
          "name": "create_workspace",
          "description": "Create Terraform Cloud workspace",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Workspace name"
              },
              "organization": {
                "type": "string",
                "description": "Organization name"
              },
              "vcs_repo": {
                "type": "object",
                "description": "VCS repository configuration"
              }
            },
            "required": [
              "name",
              "organization"
            ]
          }
        },
        "run_plan": {
          "name": "run_plan",
          "description": "Execute Terraform plan",
          "inputSchema": {
            "type": "object",
            "properties": {
              "workspace_id": {
                "type": "string",
                "description": "Workspace ID"
              },
              "message": {
                "type": "string",
                "description": "Plan message"
              }
            },
            "required": [
              "workspace_id"
            ]
          }
        }
      }
    },
    "consul": {
      "name": "consul",
      "version": "1.0.0",
      "description": "HashiCorp Consul service mesh and discovery",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-consul",
      "npmDownloads": 6000,
      "repositoryUrl": "https://github.com/hashicorp/mcp-server-consul",
      "tools": {
        "register_service": {
          "name": "register_service",
          "description": "Register service with Consul",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Service name"
              },
              "port": {
                "type": "number",
                "description": "Service port"
              },
              "tags": {
                "type": "array",
                "description": "Service tags"
              },
              "check": {
                "type": "object",
                "description": "Health check configuration"
              }
            },
            "required": [
              "name",
              "port"
            ]
          }
        }
      }
    },
    "vault": {
      "name": "vault",
      "version": "1.0.0",
      "description": "HashiCorp Vault secrets management",
      "category": "security",
      "packageName": "mcp-server-vault",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/hashicorp/mcp-server-vault",
      "tools": {
        "read_secret": {
          "name": "read_secret",
          "description": "Read secret from Vault",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Secret path"
              }
            },
            "required": [
              "path"
            ]
          }
        },
        "write_secret": {
          "name": "write_secret",
          "description": "Write secret to Vault",
          "inputSchema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Secret path"
              },
              "data": {
                "type": "object",
                "description": "Secret data"
              }
            },
            "required": [
              "path",
              "data"
            ]
          }
        }
      }
    },
    "nomad": {
      "name": "nomad",
      "version": "1.0.0",
      "description": "HashiCorp Nomad workload orchestration",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-nomad",
      "npmDownloads": 4000,
      "repositoryUrl": "https://github.com/hashicorp/mcp-server-nomad",
      "tools": {
        "submit_job": {
          "name": "submit_job",
          "description": "Submit job to Nomad cluster",
          "inputSchema": {
            "type": "object",
            "properties": {
              "job": {
                "type": "object",
                "description": "Job specification"
              }
            },
            "required": [
              "job"
            ]
          }
        }
      }
    },
    "digitalocean": {
      "name": "digitalocean",
      "version": "1.0.0",
      "description": "DigitalOcean cloud platform",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-digitalocean",
      "npmDownloads": 10000,
      "repositoryUrl": "https://github.com/digitalocean/mcp-server",
      "tools": {
        "create_droplet": {
          "name": "create_droplet",
          "description": "Create DigitalOcean droplet",
          "inputSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Droplet name"
              },
              "region": {
                "type": "string",
                "description": "Region"
              },
              "size": {
                "type": "string",
                "description": "Droplet size"
              },
              "image": {
                "type": "string",
                "description": "Image"
              }
            },
            "required": [
              "name",
              "region",
              "size",
              "image"
            ]
          }
        },
        "list_droplets": {
          "name": "list_droplets",
          "description": "List all droplets",
          "inputSchema": {
            "type": "object",
            "properties": {
              "tag_name": {
                "type": "string",
                "description": "Filter by tag"
              }
            }
          }
        }
      }
    },
    "linode": {
      "name": "linode",
      "version": "1.0.0",
      "description": "Linode cloud computing platform",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-linode",
      "npmDownloads": 7000,
      "repositoryUrl": "https://github.com/linode/mcp-server",
      "tools": {
        "create_instance": {
          "name": "create_instance",
          "description": "Create Linode instance",
          "inputSchema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Instance type"
              },
              "region": {
                "type": "string",
                "description": "Region"
              },
              "image": {
                "type": "string",
                "description": "Image"
              },
              "label": {
                "type": "string",
                "description": "Instance label"
              }
            },
            "required": [
              "type",
              "region",
              "image"
            ]
          }
        }
      }
    },
    "vultr": {
      "name": "vultr",
      "version": "1.0.0",
      "description": "Vultr cloud infrastructure",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-vultr",
      "npmDownloads": 5000,
      "repositoryUrl": "https://github.com/vultr/mcp-server",
      "tools": {
        "deploy_server": {
          "name": "deploy_server",
          "description": "Deploy Vultr server instance",
          "inputSchema": {
            "type": "object",
            "properties": {
              "region": {
                "type": "string",
                "description": "Server region"
              },
              "plan": {
                "type": "string",
                "description": "Server plan"
              },
              "os_id": {
                "type": "number",
                "description": "Operating system ID"
              }
            },
            "required": [
              "region",
              "plan",
              "os_id"
            ]
          }
        }
      }
    },
    "redis": {
      "name": "redis",
      "version": "1.2.0",
      "description": "Redis in-memory data structure store",
      "category": "database",
      "packageName": "mcp-server-redis",
      "npmDownloads": 20000,
      "repositoryUrl": "https://github.com/redis/mcp-server",
      "tools": {
        "set_key": {
          "name": "set_key",
          "description": "Set Redis key-value pair",
          "inputSchema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Redis key"
              },
              "value": {
                "type": "string",
                "description": "Value to store"
              },
              "ex": {
                "type": "number",
                "description": "Expiration in seconds"
              }
            },
            "required": [
              "key",
              "value"
            ]
          }
        },
        "get_key": {
          "name": "get_key",
          "description": "Get value by Redis key",
          "inputSchema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Redis key"
              }
            },
            "required": [
              "key"
            ]
          }
        },
        "delete_key": {
          "name": "delete_key",
          "description": "Delete Redis key",
          "inputSchema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Redis key to delete"
              }
            },
            "required": [
              "key"
            ]
          }
        }
      }
    },
    "memcached": {
      "name": "memcached",
      "version": "1.0.0",
      "description": "Memcached distributed memory caching system",
      "category": "database",
      "packageName": "mcp-server-memcached",
      "npmDownloads": 8000,
      "repositoryUrl": "https://github.com/memcached/mcp-server",
      "tools": {
        "cache_set": {
          "name": "cache_set",
          "description": "Store data in Memcached",
          "inputSchema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Cache key"
              },
              "value": {
                "type": "string",
                "description": "Data to cache"
              },
              "exptime": {
                "type": "number",
                "description": "Expiration time in seconds"
              }
            },
            "required": [
              "key",
              "value"
            ]
          }
        },
        "cache_get": {
          "name": "cache_get",
          "description": "Retrieve data from Memcached",
          "inputSchema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Cache key"
              }
            },
            "required": [
              "key"
            ]
          }
        }
      }
    },
    "cassandra": {
      "name": "cassandra",
      "version": "1.0.0",
      "description": "Apache Cassandra distributed NoSQL database",
      "category": "database",
      "packageName": "mcp-server-cassandra",
      "npmDownloads": 6000,
      "repositoryUrl": "https://github.com/apache/mcp-server-cassandra",
      "tools": {
        "execute_cql": {
          "name": "execute_cql",
          "description": "Execute CQL query",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "CQL query to execute"
              },
              "keyspace": {
                "type": "string",
                "description": "Keyspace to use"
              }
            },
            "required": [
              "query"
            ]
          }
        },
        "create_keyspace": {
          "name": "create_keyspace",
          "description": "Create Cassandra keyspace",
          "inputSchema": {
            "type": "object",
            "properties": {
              "keyspace": {
                "type": "string",
                "description": "Keyspace name"
              },
              "replication_factor": {
                "type": "number",
                "description": "Replication factor"
              }
            },
            "required": [
              "keyspace"
            ]
          }
        }
      }
    },
    "influxdb": {
      "name": "influxdb",
      "version": "1.0.0",
      "description": "InfluxDB time series database",
      "category": "database",
      "packageName": "mcp-server-influxdb",
      "npmDownloads": 9000,
      "repositoryUrl": "https://github.com/influxdata/mcp-server",
      "tools": {
        "write_points": {
          "name": "write_points",
          "description": "Write time series data points",
          "inputSchema": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Database name"
              },
              "points": {
                "type": "array",
                "description": "Data points to write"
              }
            },
            "required": [
              "database",
              "points"
            ]
          }
        },
        "query_data": {
          "name": "query_data",
          "description": "Query time series data",
          "inputSchema": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "description": "Database name"
              },
              "query": {
                "type": "string",
                "description": "InfluxQL query"
              }
            },
            "required": [
              "database",
              "query"
            ]
          }
        }
      }
    },
    "timescaledb": {
      "name": "timescaledb",
      "version": "1.0.0",
      "description": "TimescaleDB time-series extension for PostgreSQL",
      "category": "database",
      "packageName": "mcp-server-timescaledb",
      "npmDownloads": 4000,
      "repositoryUrl": "https://github.com/timescale/mcp-server",
      "tools": {
        "create_hypertable": {
          "name": "create_hypertable",
          "description": "Create TimescaleDB hypertable",
          "inputSchema": {
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "description": "Table name"
              },
              "time_column": {
                "type": "string",
                "description": "Time column name"
              }
            },
            "required": [
              "table_name",
              "time_column"
            ]
          }
        }
      }
    },
    "twitter-api-v2": {
      "name": "twitter-api-v2",
      "version": "3.8.3",
      "description": "Twitter Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-twitter-api-v2",
      "npmDownloads": 14277,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-twitter-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with twitter-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from twitter-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to twitter-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "facebook-graph-api": {
      "name": "facebook-graph-api",
      "version": "1.3.6",
      "description": "Facebook Graph Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-facebook-graph-api",
      "npmDownloads": 29368,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-facebook-graph-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with facebook-graph-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from facebook-graph-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to facebook-graph-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "instagram-basic-display": {
      "name": "instagram-basic-display",
      "version": "2.3.1",
      "description": "Instagram Basic Display integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-instagram-basic-display",
      "npmDownloads": 19790,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-instagram-basic-display",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with instagram-basic-display API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from instagram-basic-display",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to instagram-basic-display",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "linkedin-marketing-api": {
      "name": "linkedin-marketing-api",
      "version": "3.9.7",
      "description": "Linkedin Marketing Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-linkedin-marketing-api",
      "npmDownloads": 41532,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-linkedin-marketing-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with linkedin-marketing-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from linkedin-marketing-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to linkedin-marketing-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "tiktok-business-api": {
      "name": "tiktok-business-api",
      "version": "2.9.9",
      "description": "Tiktok Business Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-tiktok-business-api",
      "npmDownloads": 27710,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-tiktok-business-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with tiktok-business-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from tiktok-business-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to tiktok-business-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "youtube-data-api-v3": {
      "name": "youtube-data-api-v3",
      "version": "1.6.12",
      "description": "Youtube Data Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-youtube-data-api-v3",
      "npmDownloads": 5561,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-youtube-data-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with youtube-data-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from youtube-data-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to youtube-data-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "reddit-rest-api": {
      "name": "reddit-rest-api",
      "version": "2.5.0",
      "description": "Reddit Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-reddit-rest-api",
      "npmDownloads": 13936,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-reddit-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with reddit-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from reddit-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to reddit-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "discord-bot-api": {
      "name": "discord-bot-api",
      "version": "3.9.1",
      "description": "Discord Bot Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-discord-bot-api",
      "npmDownloads": 21263,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-discord-bot-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with discord-bot-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from discord-bot-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to discord-bot-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "telegram-bot-api": {
      "name": "telegram-bot-api",
      "version": "1.6.0",
      "description": "Telegram Bot Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-telegram-bot-api",
      "npmDownloads": 17805,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-telegram-bot-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with telegram-bot-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from telegram-bot-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to telegram-bot-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "whatsapp-business-api": {
      "name": "whatsapp-business-api",
      "version": "3.6.16",
      "description": "Whatsapp Business Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-whatsapp-business-api",
      "npmDownloads": 28152,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-whatsapp-business-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with whatsapp-business-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from whatsapp-business-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to whatsapp-business-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "snapchat-marketing-api": {
      "name": "snapchat-marketing-api",
      "version": "3.8.1",
      "description": "Snapchat Marketing Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-snapchat-marketing-api",
      "npmDownloads": 5316,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-snapchat-marketing-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with snapchat-marketing-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from snapchat-marketing-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to snapchat-marketing-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "pinterest-api-v5": {
      "name": "pinterest-api-v5",
      "version": "2.3.19",
      "description": "Pinterest Api V5 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-pinterest-api-v5",
      "npmDownloads": 28531,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-pinterest-api-v5",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with pinterest-api-v5 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from pinterest-api-v5",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to pinterest-api-v5",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mastodon-rest-api": {
      "name": "mastodon-rest-api",
      "version": "3.9.18",
      "description": "Mastodon Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mastodon-rest-api",
      "npmDownloads": 12331,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mastodon-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mastodon-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mastodon-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mastodon-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "threads-meta-api": {
      "name": "threads-meta-api",
      "version": "2.1.14",
      "description": "Threads Meta Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-threads-meta-api",
      "npmDownloads": 25340,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-threads-meta-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with threads-meta-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from threads-meta-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to threads-meta-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "bluesky-at-protocol": {
      "name": "bluesky-at-protocol",
      "version": "2.8.16",
      "description": "Bluesky At Protocol integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-bluesky-at-protocol",
      "npmDownloads": 22885,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-bluesky-at-protocol",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with bluesky-at-protocol API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from bluesky-at-protocol",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to bluesky-at-protocol",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "tumblr-api-v2": {
      "name": "tumblr-api-v2",
      "version": "3.7.13",
      "description": "Tumblr Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-tumblr-api-v2",
      "npmDownloads": 38058,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-tumblr-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with tumblr-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from tumblr-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to tumblr-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "flickr-rest-api": {
      "name": "flickr-rest-api",
      "version": "1.8.5",
      "description": "Flickr Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-flickr-rest-api",
      "npmDownloads": 34425,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-flickr-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with flickr-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from flickr-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to flickr-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "vk-api": {
      "name": "vk-api",
      "version": "1.8.5",
      "description": "Vk Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-vk-api",
      "npmDownloads": 22314,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-vk-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with vk-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from vk-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to vk-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "weibo-open-api": {
      "name": "weibo-open-api",
      "version": "1.1.12",
      "description": "Weibo Open Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-weibo-open-api",
      "npmDownloads": 33160,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-weibo-open-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with weibo-open-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from weibo-open-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to weibo-open-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "line-messaging-api": {
      "name": "line-messaging-api",
      "version": "3.8.15",
      "description": "Line Messaging Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-line-messaging-api",
      "npmDownloads": 20232,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-line-messaging-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with line-messaging-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from line-messaging-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to line-messaging-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "viber-rest-api": {
      "name": "viber-rest-api",
      "version": "2.6.9",
      "description": "Viber Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-viber-rest-api",
      "npmDownloads": 33835,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-viber-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with viber-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from viber-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to viber-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "wechat-open-api": {
      "name": "wechat-open-api",
      "version": "3.7.17",
      "description": "Wechat Open Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-wechat-open-api",
      "npmDownloads": 34882,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-wechat-open-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with wechat-open-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from wechat-open-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to wechat-open-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "kakaotalk-api": {
      "name": "kakaotalk-api",
      "version": "2.9.19",
      "description": "Kakaotalk Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-kakaotalk-api",
      "npmDownloads": 33026,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-kakaotalk-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with kakaotalk-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from kakaotalk-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to kakaotalk-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "clubhouse-api": {
      "name": "clubhouse-api",
      "version": "1.6.15",
      "description": "Clubhouse Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-clubhouse-api",
      "npmDownloads": 9959,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-clubhouse-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with clubhouse-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from clubhouse-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to clubhouse-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "twitter-spaces-api": {
      "name": "twitter-spaces-api",
      "version": "3.9.10",
      "description": "Twitter Spaces Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-twitter-spaces-api",
      "npmDownloads": 29197,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-twitter-spaces-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with twitter-spaces-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from twitter-spaces-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to twitter-spaces-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "twitch-helix-api": {
      "name": "twitch-helix-api",
      "version": "1.9.15",
      "description": "Twitch Helix Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-twitch-helix-api",
      "npmDownloads": 35027,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-twitch-helix-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with twitch-helix-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from twitch-helix-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to twitch-helix-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mixer-interactive-api": {
      "name": "mixer-interactive-api",
      "version": "3.6.19",
      "description": "Mixer Interactive Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mixer-interactive-api",
      "npmDownloads": 19694,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mixer-interactive-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mixer-interactive-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mixer-interactive-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mixer-interactive-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "periscope-producer-api": {
      "name": "periscope-producer-api",
      "version": "1.0.0",
      "description": "Periscope Producer Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-periscope-producer-api",
      "npmDownloads": 28444,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-periscope-producer-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with periscope-producer-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from periscope-producer-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to periscope-producer-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "facebook-live-api": {
      "name": "facebook-live-api",
      "version": "3.3.0",
      "description": "Facebook Live Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-facebook-live-api",
      "npmDownloads": 28442,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-facebook-live-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with facebook-live-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from facebook-live-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to facebook-live-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "instagram-live-api": {
      "name": "instagram-live-api",
      "version": "1.4.14",
      "description": "Instagram Live Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-instagram-live-api",
      "npmDownloads": 18897,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-instagram-live-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with instagram-live-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from instagram-live-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to instagram-live-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "youtube-live-streaming": {
      "name": "youtube-live-streaming",
      "version": "2.5.11",
      "description": "Youtube Live Streaming integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-youtube-live-streaming",
      "npmDownloads": 22352,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-youtube-live-streaming",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with youtube-live-streaming API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from youtube-live-streaming",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to youtube-live-streaming",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "tiktok-live-api": {
      "name": "tiktok-live-api",
      "version": "2.5.1",
      "description": "Tiktok Live Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-tiktok-live-api",
      "npmDownloads": 19171,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-tiktok-live-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with tiktok-live-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from tiktok-live-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to tiktok-live-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "discord-stage-api": {
      "name": "discord-stage-api",
      "version": "3.5.11",
      "description": "Discord Stage Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-discord-stage-api",
      "npmDownloads": 26222,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-discord-stage-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with discord-stage-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from discord-stage-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to discord-stage-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "telegram-channels-api": {
      "name": "telegram-channels-api",
      "version": "2.3.14",
      "description": "Telegram Channels Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-telegram-channels-api",
      "npmDownloads": 28399,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-telegram-channels-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with telegram-channels-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from telegram-channels-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to telegram-channels-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "signal-messenger-api": {
      "name": "signal-messenger-api",
      "version": "2.3.12",
      "description": "Signal Messenger Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-signal-messenger-api",
      "npmDownloads": 11229,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-signal-messenger-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with signal-messenger-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from signal-messenger-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to signal-messenger-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "element-matrix-api": {
      "name": "element-matrix-api",
      "version": "1.2.14",
      "description": "Element Matrix Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-element-matrix-api",
      "npmDownloads": 30893,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-element-matrix-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with element-matrix-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from element-matrix-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to element-matrix-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "rocket-chat-rest-api": {
      "name": "rocket-chat-rest-api",
      "version": "1.3.15",
      "description": "Rocket Chat Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-rocket-chat-rest-api",
      "npmDownloads": 20275,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-rocket-chat-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with rocket-chat-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from rocket-chat-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to rocket-chat-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mattermost-api-v4": {
      "name": "mattermost-api-v4",
      "version": "3.7.18",
      "description": "Mattermost Api V4 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mattermost-api-v4",
      "npmDownloads": 24499,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mattermost-api-v4",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mattermost-api-v4 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mattermost-api-v4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mattermost-api-v4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "zulip-rest-api": {
      "name": "zulip-rest-api",
      "version": "1.7.7",
      "description": "Zulip Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-zulip-rest-api",
      "npmDownloads": 14346,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-zulip-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with zulip-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from zulip-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to zulip-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "riot-matrix-api": {
      "name": "riot-matrix-api",
      "version": "1.9.11",
      "description": "Riot Matrix Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-riot-matrix-api",
      "npmDownloads": 18957,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-riot-matrix-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with riot-matrix-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from riot-matrix-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to riot-matrix-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "paypal-rest-api": {
      "name": "paypal-rest-api",
      "version": "3.8.17",
      "description": "Paypal Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-paypal-rest-api",
      "npmDownloads": 9068,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-paypal-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with paypal-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from paypal-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to paypal-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "square-payments-api": {
      "name": "square-payments-api",
      "version": "2.9.18",
      "description": "Square Payments Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-square-payments-api",
      "npmDownloads": 9602,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-square-payments-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with square-payments-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from square-payments-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to square-payments-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "razorpay-standard-api": {
      "name": "razorpay-standard-api",
      "version": "3.0.6",
      "description": "Razorpay Standard Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-razorpay-standard-api",
      "npmDownloads": 18559,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-razorpay-standard-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with razorpay-standard-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from razorpay-standard-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to razorpay-standard-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "adyen-checkout-api": {
      "name": "adyen-checkout-api",
      "version": "3.5.17",
      "description": "Adyen Checkout Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-adyen-checkout-api",
      "npmDownloads": 22464,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-adyen-checkout-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with adyen-checkout-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from adyen-checkout-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to adyen-checkout-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "braintree-graphql-api": {
      "name": "braintree-graphql-api",
      "version": "3.6.16",
      "description": "Braintree Graphql Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-braintree-graphql-api",
      "npmDownloads": 20539,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-braintree-graphql-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with braintree-graphql-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from braintree-graphql-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to braintree-graphql-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "klarna-payments-api": {
      "name": "klarna-payments-api",
      "version": "1.0.8",
      "description": "Klarna Payments Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-klarna-payments-api",
      "npmDownloads": 23095,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-klarna-payments-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with klarna-payments-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from klarna-payments-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to klarna-payments-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "coinbase-commerce-api": {
      "name": "coinbase-commerce-api",
      "version": "3.9.14",
      "description": "Coinbase Commerce Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-coinbase-commerce-api",
      "npmDownloads": 5973,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-coinbase-commerce-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with coinbase-commerce-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from coinbase-commerce-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to coinbase-commerce-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "bitpay-rest-api": {
      "name": "bitpay-rest-api",
      "version": "2.5.7",
      "description": "Bitpay Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-bitpay-rest-api",
      "npmDownloads": 5507,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-bitpay-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with bitpay-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from bitpay-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to bitpay-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "alipay-global-api": {
      "name": "alipay-global-api",
      "version": "3.3.12",
      "description": "Alipay Global Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-alipay-global-api",
      "npmDownloads": 11775,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-alipay-global-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with alipay-global-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from alipay-global-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to alipay-global-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "wechat-pay-api": {
      "name": "wechat-pay-api",
      "version": "2.1.9",
      "description": "Wechat Pay Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-wechat-pay-api",
      "npmDownloads": 26607,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-wechat-pay-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with wechat-pay-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from wechat-pay-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to wechat-pay-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "apple-pay-js-api": {
      "name": "apple-pay-js-api",
      "version": "2.8.14",
      "description": "Apple Pay Js Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-apple-pay-js-api",
      "npmDownloads": 17515,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-apple-pay-js-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with apple-pay-js-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from apple-pay-js-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to apple-pay-js-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "google-pay-api": {
      "name": "google-pay-api",
      "version": "1.8.1",
      "description": "Google Pay Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-google-pay-api",
      "npmDownloads": 19866,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-google-pay-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with google-pay-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from google-pay-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to google-pay-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "samsung-pay-web-api": {
      "name": "samsung-pay-web-api",
      "version": "2.5.18",
      "description": "Samsung Pay Web Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-samsung-pay-web-api",
      "npmDownloads": 25135,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-samsung-pay-web-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with samsung-pay-web-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from samsung-pay-web-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to samsung-pay-web-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "venmo-api": {
      "name": "venmo-api",
      "version": "2.2.5",
      "description": "Venmo Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-venmo-api",
      "npmDownloads": 21903,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-venmo-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with venmo-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from venmo-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to venmo-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "zelle-api": {
      "name": "zelle-api",
      "version": "2.4.16",
      "description": "Zelle Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-zelle-api",
      "npmDownloads": 17714,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-zelle-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with zelle-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from zelle-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to zelle-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "worldpay-json-api": {
      "name": "worldpay-json-api",
      "version": "1.3.0",
      "description": "Worldpay Json Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-worldpay-json-api",
      "npmDownloads": 25617,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-worldpay-json-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with worldpay-json-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from worldpay-json-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to worldpay-json-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "2checkout-rest-api": {
      "name": "2checkout-rest-api",
      "version": "2.5.7",
      "description": "2checkout Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-2checkout-rest-api",
      "npmDownloads": 4625,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-2checkout-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with 2checkout-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from 2checkout-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to 2checkout-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "authorize-net-api": {
      "name": "authorize-net-api",
      "version": "3.4.3",
      "description": "Authorize Net Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-authorize-net-api",
      "npmDownloads": 24004,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-authorize-net-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with authorize-net-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from authorize-net-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to authorize-net-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "cybersource-rest-api": {
      "name": "cybersource-rest-api",
      "version": "2.8.10",
      "description": "Cybersource Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-cybersource-rest-api",
      "npmDownloads": 28439,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-cybersource-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with cybersource-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from cybersource-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to cybersource-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mollie-api-v2": {
      "name": "mollie-api-v2",
      "version": "3.5.16",
      "description": "Mollie Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mollie-api-v2",
      "npmDownloads": 20097,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mollie-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mollie-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mollie-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mollie-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "payu-money-api": {
      "name": "payu-money-api",
      "version": "3.3.1",
      "description": "Payu Money Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-payu-money-api",
      "npmDownloads": 11253,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-payu-money-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with payu-money-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from payu-money-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to payu-money-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "pagseguro-rest-api": {
      "name": "pagseguro-rest-api",
      "version": "2.4.6",
      "description": "Pagseguro Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-pagseguro-rest-api",
      "npmDownloads": 19416,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-pagseguro-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with pagseguro-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from pagseguro-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to pagseguro-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mercadopago-api": {
      "name": "mercadopago-api",
      "version": "3.6.2",
      "description": "Mercadopago Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mercadopago-api",
      "npmDownloads": 17041,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mercadopago-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mercadopago-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mercadopago-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mercadopago-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "pix-payment-api": {
      "name": "pix-payment-api",
      "version": "2.4.14",
      "description": "Pix Payment Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-pix-payment-api",
      "npmDownloads": 10051,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-pix-payment-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with pix-payment-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from pix-payment-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to pix-payment-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "boleto-banking-api": {
      "name": "boleto-banking-api",
      "version": "1.0.8",
      "description": "Boleto Banking Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-boleto-banking-api",
      "npmDownloads": 15733,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-boleto-banking-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with boleto-banking-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from boleto-banking-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to boleto-banking-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "ideal-payments-api": {
      "name": "ideal-payments-api",
      "version": "2.2.6",
      "description": "Ideal Payments Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-ideal-payments-api",
      "npmDownloads": 28606,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-ideal-payments-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with ideal-payments-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from ideal-payments-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to ideal-payments-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "sofort-banking-api": {
      "name": "sofort-banking-api",
      "version": "2.3.6",
      "description": "Sofort Banking Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-sofort-banking-api",
      "npmDownloads": 25630,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-sofort-banking-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with sofort-banking-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from sofort-banking-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to sofort-banking-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "giropay-api": {
      "name": "giropay-api",
      "version": "2.7.14",
      "description": "Giropay Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-giropay-api",
      "npmDownloads": 19788,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-giropay-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with giropay-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from giropay-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to giropay-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "eps-payments-api": {
      "name": "eps-payments-api",
      "version": "2.7.6",
      "description": "Eps Payments Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-eps-payments-api",
      "npmDownloads": 4603,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-eps-payments-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with eps-payments-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from eps-payments-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to eps-payments-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "bancontact-api": {
      "name": "bancontact-api",
      "version": "3.2.3",
      "description": "Bancontact Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-bancontact-api",
      "npmDownloads": 22155,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-bancontact-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with bancontact-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from bancontact-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to bancontact-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "przelewy24-rest-api": {
      "name": "przelewy24-rest-api",
      "version": "1.2.6",
      "description": "Przelewy24 Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-przelewy24-rest-api",
      "npmDownloads": 4551,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-przelewy24-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with przelewy24-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from przelewy24-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to przelewy24-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "multibanco-api": {
      "name": "multibanco-api",
      "version": "1.5.2",
      "description": "Multibanco Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-multibanco-api",
      "npmDownloads": 25267,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-multibanco-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with multibanco-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from multibanco-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to multibanco-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mybank-api": {
      "name": "mybank-api",
      "version": "2.3.6",
      "description": "Mybank Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mybank-api",
      "npmDownloads": 14218,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mybank-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mybank-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mybank-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mybank-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "trustly-select-api": {
      "name": "trustly-select-api",
      "version": "3.1.15",
      "description": "Trustly Select Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-trustly-select-api",
      "npmDownloads": 21081,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-trustly-select-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with trustly-select-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from trustly-select-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to trustly-select-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "skrill-mqi-api": {
      "name": "skrill-mqi-api",
      "version": "1.6.10",
      "description": "Skrill Mqi Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-skrill-mqi-api",
      "npmDownloads": 14945,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-skrill-mqi-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with skrill-mqi-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from skrill-mqi-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to skrill-mqi-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "sendgrid-mail-api-v3": {
      "name": "sendgrid-mail-api-v3",
      "version": "1.3.7",
      "description": "Sendgrid Mail Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-sendgrid-mail-api-v3",
      "npmDownloads": 13150,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-sendgrid-mail-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with sendgrid-mail-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from sendgrid-mail-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to sendgrid-mail-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mailchimp-marketing-api-v3": {
      "name": "mailchimp-marketing-api-v3",
      "version": "1.2.8",
      "description": "Mailchimp Marketing Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mailchimp-marketing-api-v3",
      "npmDownloads": 14624,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mailchimp-marketing-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mailchimp-marketing-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mailchimp-marketing-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mailchimp-marketing-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "constant-contact-v3": {
      "name": "constant-contact-v3",
      "version": "3.9.8",
      "description": "Constant Contact V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-constant-contact-v3",
      "npmDownloads": 23138,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-constant-contact-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with constant-contact-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from constant-contact-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to constant-contact-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mailgun-api-v4": {
      "name": "mailgun-api-v4",
      "version": "1.6.10",
      "description": "Mailgun Api V4 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mailgun-api-v4",
      "npmDownloads": 7159,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mailgun-api-v4",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mailgun-api-v4 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mailgun-api-v4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mailgun-api-v4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "postmark-api": {
      "name": "postmark-api",
      "version": "3.9.12",
      "description": "Postmark Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-postmark-api",
      "npmDownloads": 22784,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-postmark-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with postmark-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from postmark-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to postmark-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "amazon-ses-v2": {
      "name": "amazon-ses-v2",
      "version": "2.6.13",
      "description": "Amazon Ses V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-amazon-ses-v2",
      "npmDownloads": 16880,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-amazon-ses-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with amazon-ses-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from amazon-ses-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to amazon-ses-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mandrill-api": {
      "name": "mandrill-api",
      "version": "3.9.12",
      "description": "Mandrill Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mandrill-api",
      "npmDownloads": 10078,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mandrill-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mandrill-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mandrill-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mandrill-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "campaign-monitor-v3": {
      "name": "campaign-monitor-v3",
      "version": "2.9.10",
      "description": "Campaign Monitor V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-campaign-monitor-v3",
      "npmDownloads": 10261,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-campaign-monitor-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with campaign-monitor-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from campaign-monitor-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to campaign-monitor-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "aweber-rest-api": {
      "name": "aweber-rest-api",
      "version": "2.1.0",
      "description": "Aweber Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-aweber-rest-api",
      "npmDownloads": 21343,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-aweber-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with aweber-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from aweber-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to aweber-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "getresponse-api-v3": {
      "name": "getresponse-api-v3",
      "version": "2.4.0",
      "description": "Getresponse Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-getresponse-api-v3",
      "npmDownloads": 13112,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-getresponse-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with getresponse-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from getresponse-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to getresponse-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "zoom-api-v2": {
      "name": "zoom-api-v2",
      "version": "2.4.11",
      "description": "Zoom Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-zoom-api-v2",
      "npmDownloads": 14102,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-zoom-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with zoom-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from zoom-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to zoom-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "microsoft-teams-graph-api": {
      "name": "microsoft-teams-graph-api",
      "version": "3.0.17",
      "description": "Microsoft Teams Graph Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-microsoft-teams-graph-api",
      "npmDownloads": 11562,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-microsoft-teams-graph-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with microsoft-teams-graph-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from microsoft-teams-graph-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to microsoft-teams-graph-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "slack-web-api": {
      "name": "slack-web-api",
      "version": "3.9.17",
      "description": "Slack Web Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-slack-web-api",
      "npmDownloads": 18441,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-slack-web-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with slack-web-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from slack-web-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to slack-web-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "generic-webhooks-handler": {
      "name": "generic-webhooks-handler",
      "version": "1.5.5",
      "description": "Generic Webhooks Handler integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-generic-webhooks-handler",
      "npmDownloads": 21604,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-generic-webhooks-handler",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with generic-webhooks-handler API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from generic-webhooks-handler",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to generic-webhooks-handler",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "pusher-channels-http-api": {
      "name": "pusher-channels-http-api",
      "version": "2.1.3",
      "description": "Pusher Channels Http Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-pusher-channels-http-api",
      "npmDownloads": 20933,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-pusher-channels-http-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with pusher-channels-http-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from pusher-channels-http-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to pusher-channels-http-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "pubnub-rest-api-v2": {
      "name": "pubnub-rest-api-v2",
      "version": "3.1.0",
      "description": "Pubnub Rest Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-pubnub-rest-api-v2",
      "npmDownloads": 22903,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-pubnub-rest-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with pubnub-rest-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from pubnub-rest-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to pubnub-rest-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "ably-rest-api": {
      "name": "ably-rest-api",
      "version": "1.8.16",
      "description": "Ably Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-ably-rest-api",
      "npmDownloads": 13613,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-ably-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with ably-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from ably-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to ably-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "socket-io-client-api": {
      "name": "socket-io-client-api",
      "version": "1.0.10",
      "description": "Socket Io Client Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-socket-io-client-api",
      "npmDownloads": 19611,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-socket-io-client-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with socket-io-client-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from socket-io-client-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to socket-io-client-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "signalr-core-api": {
      "name": "signalr-core-api",
      "version": "3.3.2",
      "description": "Signalr Core Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-signalr-core-api",
      "npmDownloads": 11679,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-signalr-core-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with signalr-core-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from signalr-core-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to signalr-core-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "firebase-cloud-messaging-v1": {
      "name": "firebase-cloud-messaging-v1",
      "version": "2.6.10",
      "description": "Firebase Cloud Messaging V1 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-firebase-cloud-messaging-v1",
      "npmDownloads": 14849,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-firebase-cloud-messaging-v1",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with firebase-cloud-messaging-v1 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from firebase-cloud-messaging-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to firebase-cloud-messaging-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "onesignal-rest-api": {
      "name": "onesignal-rest-api",
      "version": "3.2.9",
      "description": "Onesignal Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-onesignal-rest-api",
      "npmDownloads": 15613,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-onesignal-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with onesignal-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from onesignal-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to onesignal-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "pushbullet-api-v2": {
      "name": "pushbullet-api-v2",
      "version": "2.0.18",
      "description": "Pushbullet Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-pushbullet-api-v2",
      "npmDownloads": 11671,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-pushbullet-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with pushbullet-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from pushbullet-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to pushbullet-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "pushover-rest-api": {
      "name": "pushover-rest-api",
      "version": "1.1.12",
      "description": "Pushover Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-pushover-rest-api",
      "npmDownloads": 19427,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-pushover-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with pushover-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from pushover-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to pushover-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "urban-airship-api-v3": {
      "name": "urban-airship-api-v3",
      "version": "3.9.2",
      "description": "Urban Airship Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-urban-airship-api-v3",
      "npmDownloads": 21061,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-urban-airship-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with urban-airship-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from urban-airship-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to urban-airship-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "batch-push-api": {
      "name": "batch-push-api",
      "version": "2.7.9",
      "description": "Batch Push Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-batch-push-api",
      "npmDownloads": 16765,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-batch-push-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with batch-push-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from batch-push-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to batch-push-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "braze-rest-api": {
      "name": "braze-rest-api",
      "version": "3.8.6",
      "description": "Braze Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-braze-rest-api",
      "npmDownloads": 10132,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-braze-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with braze-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from braze-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to braze-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "leanplum-rest-api": {
      "name": "leanplum-rest-api",
      "version": "1.2.11",
      "description": "Leanplum Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-leanplum-rest-api",
      "npmDownloads": 7543,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-leanplum-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with leanplum-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from leanplum-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to leanplum-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mixpanel-ingestion-api": {
      "name": "mixpanel-ingestion-api",
      "version": "3.2.15",
      "description": "Mixpanel Ingestion Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mixpanel-ingestion-api",
      "npmDownloads": 21527,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mixpanel-ingestion-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mixpanel-ingestion-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mixpanel-ingestion-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mixpanel-ingestion-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "amplitude-http-api-v2": {
      "name": "amplitude-http-api-v2",
      "version": "2.0.12",
      "description": "Amplitude Http Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-amplitude-http-api-v2",
      "npmDownloads": 15431,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-amplitude-http-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with amplitude-http-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from amplitude-http-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to amplitude-http-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "segment-http-tracking-api": {
      "name": "segment-http-tracking-api",
      "version": "2.6.1",
      "description": "Segment Http Tracking Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-segment-http-tracking-api",
      "npmDownloads": 13157,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-segment-http-tracking-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with segment-http-tracking-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from segment-http-tracking-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to segment-http-tracking-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "customer-io-track-api": {
      "name": "customer-io-track-api",
      "version": "1.0.17",
      "description": "Customer Io Track Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-customer-io-track-api",
      "npmDownloads": 3858,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-customer-io-track-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with customer-io-track-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from customer-io-track-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to customer-io-track-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "sendbird-platform-api": {
      "name": "sendbird-platform-api",
      "version": "1.6.19",
      "description": "Sendbird Platform Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-sendbird-platform-api",
      "npmDownloads": 16892,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-sendbird-platform-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with sendbird-platform-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from sendbird-platform-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to sendbird-platform-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "stream-chat-api": {
      "name": "stream-chat-api",
      "version": "3.7.16",
      "description": "Stream Chat Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-stream-chat-api",
      "npmDownloads": 10182,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-stream-chat-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with stream-chat-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from stream-chat-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to stream-chat-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "getstream-api-v1": {
      "name": "getstream-api-v1",
      "version": "1.7.16",
      "description": "Getstream Api V1 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-getstream-api-v1",
      "npmDownloads": 13763,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-getstream-api-v1",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with getstream-api-v1 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from getstream-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to getstream-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "cometchat-rest-api": {
      "name": "cometchat-rest-api",
      "version": "2.2.14",
      "description": "Cometchat Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-cometchat-rest-api",
      "npmDownloads": 6908,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-cometchat-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with cometchat-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from cometchat-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to cometchat-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "firebase-realtime-db-api": {
      "name": "firebase-realtime-db-api",
      "version": "1.2.18",
      "description": "Firebase Realtime Db Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-firebase-realtime-db-api",
      "npmDownloads": 16048,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-firebase-realtime-db-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with firebase-realtime-db-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from firebase-realtime-db-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to firebase-realtime-db-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "chatfuel-json-api": {
      "name": "chatfuel-json-api",
      "version": "1.7.15",
      "description": "Chatfuel Json Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-chatfuel-json-api",
      "npmDownloads": 4295,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-chatfuel-json-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with chatfuel-json-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from chatfuel-json-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to chatfuel-json-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "manychat-api": {
      "name": "manychat-api",
      "version": "1.8.8",
      "description": "Manychat Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-manychat-api",
      "npmDownloads": 11845,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-manychat-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with manychat-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from manychat-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to manychat-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "microsoft-bot-framework": {
      "name": "microsoft-bot-framework",
      "version": "3.2.17",
      "description": "Microsoft Bot Framework integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-microsoft-bot-framework",
      "npmDownloads": 19150,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-microsoft-bot-framework",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with microsoft-bot-framework API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from microsoft-bot-framework",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to microsoft-bot-framework",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "dialogflow-rest-api": {
      "name": "dialogflow-rest-api",
      "version": "2.0.12",
      "description": "Dialogflow Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-dialogflow-rest-api",
      "npmDownloads": 16467,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-dialogflow-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with dialogflow-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from dialogflow-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to dialogflow-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "wit-ai-http-api": {
      "name": "wit-ai-http-api",
      "version": "3.8.0",
      "description": "Wit Ai Http Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-wit-ai-http-api",
      "npmDownloads": 12692,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-wit-ai-http-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with wit-ai-http-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from wit-ai-http-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to wit-ai-http-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "luis-authoring-api": {
      "name": "luis-authoring-api",
      "version": "2.9.2",
      "description": "Luis Authoring Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-luis-authoring-api",
      "npmDownloads": 13469,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-luis-authoring-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with luis-authoring-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from luis-authoring-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to luis-authoring-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "watson-assistant-v2": {
      "name": "watson-assistant-v2",
      "version": "1.3.4",
      "description": "Watson Assistant V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-watson-assistant-v2",
      "npmDownloads": 6367,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-watson-assistant-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with watson-assistant-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from watson-assistant-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to watson-assistant-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "rasa-http-api": {
      "name": "rasa-http-api",
      "version": "1.9.12",
      "description": "Rasa Http Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-rasa-http-api",
      "npmDownloads": 2655,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-rasa-http-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with rasa-http-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from rasa-http-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to rasa-http-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "botpress-converse-api": {
      "name": "botpress-converse-api",
      "version": "2.4.17",
      "description": "Botpress Converse Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-botpress-converse-api",
      "npmDownloads": 6647,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-botpress-converse-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with botpress-converse-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from botpress-converse-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to botpress-converse-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "landbot-webhook-api": {
      "name": "landbot-webhook-api",
      "version": "1.0.6",
      "description": "Landbot Webhook Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-landbot-webhook-api",
      "npmDownloads": 17987,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-landbot-webhook-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with landbot-webhook-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from landbot-webhook-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to landbot-webhook-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "generic-chatbot-api": {
      "name": "generic-chatbot-api",
      "version": "1.0.8",
      "description": "Generic Chatbot Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-generic-chatbot-api",
      "npmDownloads": 3247,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-generic-chatbot-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with generic-chatbot-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from generic-chatbot-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to generic-chatbot-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "voiceflow-dialog-api": {
      "name": "voiceflow-dialog-api",
      "version": "1.3.7",
      "description": "Voiceflow Dialog Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-voiceflow-dialog-api",
      "npmDownloads": 8800,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-voiceflow-dialog-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with voiceflow-dialog-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from voiceflow-dialog-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to voiceflow-dialog-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "botsify-api": {
      "name": "botsify-api",
      "version": "2.5.3",
      "description": "Botsify Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-botsify-api",
      "npmDownloads": 6377,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-botsify-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with botsify-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from botsify-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to botsify-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "pandorabots-aiaas": {
      "name": "pandorabots-aiaas",
      "version": "2.5.18",
      "description": "Pandorabots Aiaas integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-pandorabots-aiaas",
      "npmDownloads": 12375,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-pandorabots-aiaas",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with pandorabots-aiaas API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from pandorabots-aiaas",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to pandorabots-aiaas",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "shopify-admin-api-2024": {
      "name": "shopify-admin-api-2024",
      "version": "2.3.12",
      "description": "Shopify Admin Api 2024 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-shopify-admin-api-2024",
      "npmDownloads": 8697,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-shopify-admin-api-2024",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with shopify-admin-api-2024 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from shopify-admin-api-2024",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to shopify-admin-api-2024",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "woocommerce-rest-api-v3": {
      "name": "woocommerce-rest-api-v3",
      "version": "1.6.5",
      "description": "Woocommerce Rest Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-woocommerce-rest-api-v3",
      "npmDownloads": 10406,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-woocommerce-rest-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with woocommerce-rest-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from woocommerce-rest-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to woocommerce-rest-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "magento-rest-api-2-4": {
      "name": "magento-rest-api-2-4",
      "version": "1.9.5",
      "description": "Magento Rest Api 2 4 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-magento-rest-api-2-4",
      "npmDownloads": 12602,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-magento-rest-api-2-4",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with magento-rest-api-2-4 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from magento-rest-api-2-4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to magento-rest-api-2-4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "bigcommerce-stores-api-v3": {
      "name": "bigcommerce-stores-api-v3",
      "version": "1.6.19",
      "description": "Bigcommerce Stores Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-bigcommerce-stores-api-v3",
      "npmDownloads": 9800,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-bigcommerce-stores-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with bigcommerce-stores-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from bigcommerce-stores-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to bigcommerce-stores-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "prestashop-webservice-api": {
      "name": "prestashop-webservice-api",
      "version": "2.1.7",
      "description": "Prestashop Webservice Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-prestashop-webservice-api",
      "npmDownloads": 14779,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-prestashop-webservice-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with prestashop-webservice-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from prestashop-webservice-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to prestashop-webservice-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "opencart-rest-api": {
      "name": "opencart-rest-api",
      "version": "1.2.17",
      "description": "Opencart Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-opencart-rest-api",
      "npmDownloads": 5662,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-opencart-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with opencart-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from opencart-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to opencart-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "drupal-commerce-api": {
      "name": "drupal-commerce-api",
      "version": "2.0.13",
      "description": "Drupal Commerce Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-drupal-commerce-api",
      "npmDownloads": 8057,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-drupal-commerce-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with drupal-commerce-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from drupal-commerce-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to drupal-commerce-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "spree-commerce-api-v2": {
      "name": "spree-commerce-api-v2",
      "version": "3.5.1",
      "description": "Spree Commerce Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-spree-commerce-api-v2",
      "npmDownloads": 13400,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-spree-commerce-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with spree-commerce-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from spree-commerce-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to spree-commerce-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "solidus-rest-api": {
      "name": "solidus-rest-api",
      "version": "2.3.2",
      "description": "Solidus Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-solidus-rest-api",
      "npmDownloads": 5364,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-solidus-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with solidus-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from solidus-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to solidus-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "sylius-shop-api": {
      "name": "sylius-shop-api",
      "version": "3.8.19",
      "description": "Sylius Shop Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-sylius-shop-api",
      "npmDownloads": 3065,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-sylius-shop-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with sylius-shop-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from sylius-shop-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to sylius-shop-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "amazon-sp-api-2021": {
      "name": "amazon-sp-api-2021",
      "version": "1.2.13",
      "description": "Amazon Sp Api 2021 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-amazon-sp-api-2021",
      "npmDownloads": 8521,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-amazon-sp-api-2021",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with amazon-sp-api-2021 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from amazon-sp-api-2021",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to amazon-sp-api-2021",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "ebay-rest-buy-api": {
      "name": "ebay-rest-buy-api",
      "version": "2.1.13",
      "description": "Ebay Rest Buy Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-ebay-rest-buy-api",
      "npmDownloads": 12792,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-ebay-rest-buy-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with ebay-rest-buy-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from ebay-rest-buy-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to ebay-rest-buy-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "etsy-open-api-v3": {
      "name": "etsy-open-api-v3",
      "version": "3.5.6",
      "description": "Etsy Open Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-etsy-open-api-v3",
      "npmDownloads": 10714,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-etsy-open-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with etsy-open-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from etsy-open-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to etsy-open-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "alibaba-trade-api": {
      "name": "alibaba-trade-api",
      "version": "2.5.2",
      "description": "Alibaba Trade Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-alibaba-trade-api",
      "npmDownloads": 4180,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-alibaba-trade-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with alibaba-trade-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from alibaba-trade-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to alibaba-trade-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "aliexpress-affiliate-api": {
      "name": "aliexpress-affiliate-api",
      "version": "3.5.4",
      "description": "Aliexpress Affiliate Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-aliexpress-affiliate-api",
      "npmDownloads": 8268,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-aliexpress-affiliate-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with aliexpress-affiliate-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from aliexpress-affiliate-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to aliexpress-affiliate-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "walmart-marketplace-api-v3": {
      "name": "walmart-marketplace-api-v3",
      "version": "3.7.13",
      "description": "Walmart Marketplace Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-walmart-marketplace-api-v3",
      "npmDownloads": 11884,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-walmart-marketplace-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with walmart-marketplace-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from walmart-marketplace-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to walmart-marketplace-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "target-partner-api": {
      "name": "target-partner-api",
      "version": "2.0.13",
      "description": "Target Partner Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-target-partner-api",
      "npmDownloads": 12169,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-target-partner-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with target-partner-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from target-partner-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to target-partner-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "bestbuy-products-api": {
      "name": "bestbuy-products-api",
      "version": "1.6.7",
      "description": "Bestbuy Products Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-bestbuy-products-api",
      "npmDownloads": 3529,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-bestbuy-products-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with bestbuy-products-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from bestbuy-products-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to bestbuy-products-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "newegg-marketplace-api": {
      "name": "newegg-marketplace-api",
      "version": "3.9.8",
      "description": "Newegg Marketplace Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-newegg-marketplace-api",
      "npmDownloads": 7820,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-newegg-marketplace-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with newegg-marketplace-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from newegg-marketplace-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to newegg-marketplace-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "overstock-partner-api": {
      "name": "overstock-partner-api",
      "version": "2.6.15",
      "description": "Overstock Partner Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-overstock-partner-api",
      "npmDownloads": 12737,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-overstock-partner-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with overstock-partner-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from overstock-partner-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to overstock-partner-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "rakuten-advertising-api": {
      "name": "rakuten-advertising-api",
      "version": "2.6.15",
      "description": "Rakuten Advertising Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-rakuten-advertising-api",
      "npmDownloads": 2968,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-rakuten-advertising-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with rakuten-advertising-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from rakuten-advertising-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to rakuten-advertising-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mercari-api-jp": {
      "name": "mercari-api-jp",
      "version": "3.9.4",
      "description": "Mercari Api Jp integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mercari-api-jp",
      "npmDownloads": 12914,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mercari-api-jp",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mercari-api-jp API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mercari-api-jp",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mercari-api-jp",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "poshmark-api": {
      "name": "poshmark-api",
      "version": "2.9.1",
      "description": "Poshmark Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-poshmark-api",
      "npmDownloads": 8500,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-poshmark-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with poshmark-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from poshmark-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to poshmark-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "depop-api": {
      "name": "depop-api",
      "version": "2.5.2",
      "description": "Depop Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-depop-api",
      "npmDownloads": 6916,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-depop-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with depop-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from depop-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to depop-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "vinted-api": {
      "name": "vinted-api",
      "version": "2.8.4",
      "description": "Vinted Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-vinted-api",
      "npmDownloads": 8430,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-vinted-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with vinted-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from vinted-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to vinted-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "reverb-api-v3": {
      "name": "reverb-api-v3",
      "version": "1.4.10",
      "description": "Reverb Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-reverb-api-v3",
      "npmDownloads": 6272,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-reverb-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with reverb-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from reverb-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to reverb-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "discogs-api-v2": {
      "name": "discogs-api-v2",
      "version": "3.3.8",
      "description": "Discogs Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-discogs-api-v2",
      "npmDownloads": 4863,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-discogs-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with discogs-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from discogs-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to discogs-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "cardmarket-api-2-0": {
      "name": "cardmarket-api-2-0",
      "version": "1.4.11",
      "description": "Cardmarket Api 2 0 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-cardmarket-api-2-0",
      "npmDownloads": 13016,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-cardmarket-api-2-0",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with cardmarket-api-2-0 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from cardmarket-api-2-0",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to cardmarket-api-2-0",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "tcgplayer-api-v1": {
      "name": "tcgplayer-api-v1",
      "version": "3.2.3",
      "description": "Tcgplayer Api V1 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-tcgplayer-api-v1",
      "npmDownloads": 7157,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-tcgplayer-api-v1",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with tcgplayer-api-v1 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from tcgplayer-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to tcgplayer-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "stockx-public-api": {
      "name": "stockx-public-api",
      "version": "1.3.4",
      "description": "Stockx Public Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-stockx-public-api",
      "npmDownloads": 6276,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-stockx-public-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with stockx-public-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from stockx-public-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to stockx-public-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "goat-api": {
      "name": "goat-api",
      "version": "3.0.2",
      "description": "Goat Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-goat-api",
      "npmDownloads": 9052,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-goat-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with goat-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from goat-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to goat-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "grailed-api": {
      "name": "grailed-api",
      "version": "2.8.18",
      "description": "Grailed Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-grailed-api",
      "npmDownloads": 1957,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-grailed-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with grailed-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from grailed-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to grailed-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "vestiaire-collective-api": {
      "name": "vestiaire-collective-api",
      "version": "1.9.18",
      "description": "Vestiaire Collective Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-vestiaire-collective-api",
      "npmDownloads": 3006,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-vestiaire-collective-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with vestiaire-collective-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from vestiaire-collective-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to vestiaire-collective-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "therealreal-api": {
      "name": "therealreal-api",
      "version": "3.2.11",
      "description": "Therealreal Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-therealreal-api",
      "npmDownloads": 12460,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-therealreal-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with therealreal-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from therealreal-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to therealreal-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "fashionphile-api": {
      "name": "fashionphile-api",
      "version": "2.2.1",
      "description": "Fashionphile Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-fashionphile-api",
      "npmDownloads": 2546,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-fashionphile-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with fashionphile-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from fashionphile-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to fashionphile-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "openweathermap-api-2-5": {
      "name": "openweathermap-api-2-5",
      "version": "2.6.1",
      "description": "Openweathermap Api 2 5 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-openweathermap-api-2-5",
      "npmDownloads": 11506,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-openweathermap-api-2-5",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with openweathermap-api-2-5 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from openweathermap-api-2-5",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to openweathermap-api-2-5",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "weatherapi-com-v1": {
      "name": "weatherapi-com-v1",
      "version": "3.0.11",
      "description": "Weatherapi Com V1 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-weatherapi-com-v1",
      "npmDownloads": 13277,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-weatherapi-com-v1",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with weatherapi-com-v1 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from weatherapi-com-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to weatherapi-com-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "accuweather-locations-api": {
      "name": "accuweather-locations-api",
      "version": "3.5.10",
      "description": "Accuweather Locations Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-accuweather-locations-api",
      "npmDownloads": 8944,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-accuweather-locations-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with accuweather-locations-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from accuweather-locations-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to accuweather-locations-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "weatherstack-rest-api": {
      "name": "weatherstack-rest-api",
      "version": "1.8.2",
      "description": "Weatherstack Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-weatherstack-rest-api",
      "npmDownloads": 8298,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-weatherstack-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with weatherstack-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from weatherstack-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to weatherstack-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "tomorrow-io-weather-api": {
      "name": "tomorrow-io-weather-api",
      "version": "2.3.3",
      "description": "Tomorrow Io Weather Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-tomorrow-io-weather-api",
      "npmDownloads": 7190,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-tomorrow-io-weather-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with tomorrow-io-weather-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from tomorrow-io-weather-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to tomorrow-io-weather-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "google-maps-platform-api": {
      "name": "google-maps-platform-api",
      "version": "2.8.5",
      "description": "Google Maps Platform Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-google-maps-platform-api",
      "npmDownloads": 3427,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-google-maps-platform-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with google-maps-platform-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from google-maps-platform-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to google-maps-platform-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mapbox-api-v1": {
      "name": "mapbox-api-v1",
      "version": "2.7.7",
      "description": "Mapbox Api V1 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mapbox-api-v1",
      "npmDownloads": 12002,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mapbox-api-v1",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mapbox-api-v1 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mapbox-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mapbox-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "here-rest-api-v8": {
      "name": "here-rest-api-v8",
      "version": "2.4.1",
      "description": "Here Rest Api V8 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-here-rest-api-v8",
      "npmDownloads": 12681,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-here-rest-api-v8",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with here-rest-api-v8 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from here-rest-api-v8",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to here-rest-api-v8",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "tomtom-maps-api-v1": {
      "name": "tomtom-maps-api-v1",
      "version": "1.8.5",
      "description": "Tomtom Maps Api V1 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-tomtom-maps-api-v1",
      "npmDownloads": 12905,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-tomtom-maps-api-v1",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with tomtom-maps-api-v1 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from tomtom-maps-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to tomtom-maps-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "foursquare-places-api-v3": {
      "name": "foursquare-places-api-v3",
      "version": "2.9.13",
      "description": "Foursquare Places Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-foursquare-places-api-v3",
      "npmDownloads": 4619,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-foursquare-places-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with foursquare-places-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from foursquare-places-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to foursquare-places-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "yelp-fusion-api-v3": {
      "name": "yelp-fusion-api-v3",
      "version": "2.7.5",
      "description": "Yelp Fusion Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-yelp-fusion-api-v3",
      "npmDownloads": 4053,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-yelp-fusion-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with yelp-fusion-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from yelp-fusion-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to yelp-fusion-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "tripadvisor-content-api": {
      "name": "tripadvisor-content-api",
      "version": "2.7.8",
      "description": "Tripadvisor Content Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-tripadvisor-content-api",
      "npmDownloads": 7048,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-tripadvisor-content-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with tripadvisor-content-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from tripadvisor-content-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to tripadvisor-content-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "booking-com-api": {
      "name": "booking-com-api",
      "version": "2.9.10",
      "description": "Booking Com Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-booking-com-api",
      "npmDownloads": 5175,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-booking-com-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with booking-com-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from booking-com-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to booking-com-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "airbnb-api": {
      "name": "airbnb-api",
      "version": "3.9.9",
      "description": "Airbnb Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-airbnb-api",
      "npmDownloads": 2119,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-airbnb-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with airbnb-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from airbnb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to airbnb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "expedia-partner-api": {
      "name": "expedia-partner-api",
      "version": "1.1.10",
      "description": "Expedia Partner Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-expedia-partner-api",
      "npmDownloads": 9937,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-expedia-partner-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with expedia-partner-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from expedia-partner-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to expedia-partner-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "google-translate-api-v3": {
      "name": "google-translate-api-v3",
      "version": "3.5.19",
      "description": "Google Translate Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-google-translate-api-v3",
      "npmDownloads": 7110,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-google-translate-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with google-translate-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from google-translate-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to google-translate-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "azure-translator-text-api": {
      "name": "azure-translator-text-api",
      "version": "1.0.15",
      "description": "Azure Translator Text Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-azure-translator-text-api",
      "npmDownloads": 4678,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-azure-translator-text-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with azure-translator-text-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from azure-translator-text-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to azure-translator-text-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "deepl-api-v2": {
      "name": "deepl-api-v2",
      "version": "2.4.6",
      "description": "Deepl Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-deepl-api-v2",
      "npmDownloads": 6701,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-deepl-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with deepl-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from deepl-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to deepl-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "yandex-translate-api-v1-5": {
      "name": "yandex-translate-api-v1-5",
      "version": "2.8.17",
      "description": "Yandex Translate Api V1 5 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-yandex-translate-api-v1-5",
      "npmDownloads": 4859,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-yandex-translate-api-v1-5",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with yandex-translate-api-v1-5 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from yandex-translate-api-v1-5",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to yandex-translate-api-v1-5",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "amazon-translate-api": {
      "name": "amazon-translate-api",
      "version": "2.0.1",
      "description": "Amazon Translate Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-amazon-translate-api",
      "npmDownloads": 11853,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-amazon-translate-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with amazon-translate-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from amazon-translate-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to amazon-translate-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "google-analytics-reporting-api-v4": {
      "name": "google-analytics-reporting-api-v4",
      "version": "1.1.9",
      "description": "Google Analytics Reporting Api V4 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-google-analytics-reporting-api-v4",
      "npmDownloads": 1682,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-google-analytics-reporting-api-v4",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with google-analytics-reporting-api-v4 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from google-analytics-reporting-api-v4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to google-analytics-reporting-api-v4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "adobe-analytics-api-2-0": {
      "name": "adobe-analytics-api-2-0",
      "version": "1.3.3",
      "description": "Adobe Analytics Api 2 0 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-adobe-analytics-api-2-0",
      "npmDownloads": 3640,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-adobe-analytics-api-2-0",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with adobe-analytics-api-2-0 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from adobe-analytics-api-2-0",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to adobe-analytics-api-2-0",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "mixpanel-export-api": {
      "name": "mixpanel-export-api",
      "version": "1.3.10",
      "description": "Mixpanel Export Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-mixpanel-export-api",
      "npmDownloads": 9715,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-mixpanel-export-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with mixpanel-export-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from mixpanel-export-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to mixpanel-export-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "amplitude-export-api": {
      "name": "amplitude-export-api",
      "version": "3.3.16",
      "description": "Amplitude Export Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-amplitude-export-api",
      "npmDownloads": 8420,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-amplitude-export-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with amplitude-export-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from amplitude-export-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to amplitude-export-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "segment-config-api": {
      "name": "segment-config-api",
      "version": "1.7.6",
      "description": "Segment Config Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-segment-config-api",
      "npmDownloads": 7462,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-segment-config-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with segment-config-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from segment-config-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to segment-config-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "hotjar-api": {
      "name": "hotjar-api",
      "version": "2.9.3",
      "description": "Hotjar Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-hotjar-api",
      "npmDownloads": 2604,
      "repositoryUrl": "https://github.com/observability/mcp-server-hotjar-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from hotjar-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List hotjar-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fullstory-rest-api": {
      "name": "fullstory-rest-api",
      "version": "3.4.7",
      "description": "Fullstory Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-fullstory-rest-api",
      "npmDownloads": 3767,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-fullstory-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with fullstory-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from fullstory-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to fullstory-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "logrocket-api": {
      "name": "logrocket-api",
      "version": "2.0.2",
      "description": "Logrocket Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-logrocket-api",
      "npmDownloads": 12137,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-logrocket-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with logrocket-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from logrocket-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to logrocket-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "sentry-api-0": {
      "name": "sentry-api-0",
      "version": "1.2.15",
      "description": "Sentry Api 0 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-sentry-api-0",
      "npmDownloads": 12227,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-sentry-api-0",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with sentry-api-0 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from sentry-api-0",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to sentry-api-0",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "bugsnag-data-access-api": {
      "name": "bugsnag-data-access-api",
      "version": "2.7.19",
      "description": "Bugsnag Data Access Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-bugsnag-data-access-api",
      "npmDownloads": 5322,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-bugsnag-data-access-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with bugsnag-data-access-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from bugsnag-data-access-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to bugsnag-data-access-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "rollbar-api-v1": {
      "name": "rollbar-api-v1",
      "version": "3.6.7",
      "description": "Rollbar Api V1 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-rollbar-api-v1",
      "npmDownloads": 10975,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-rollbar-api-v1",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with rollbar-api-v1 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from rollbar-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to rollbar-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "airbrake-api-v4": {
      "name": "airbrake-api-v4",
      "version": "2.3.1",
      "description": "Airbrake Api V4 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-airbrake-api-v4",
      "npmDownloads": 3763,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-airbrake-api-v4",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with airbrake-api-v4 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from airbrake-api-v4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to airbrake-api-v4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "honeybadger-api-v2": {
      "name": "honeybadger-api-v2",
      "version": "3.4.7",
      "description": "Honeybadger Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-honeybadger-api-v2",
      "npmDownloads": 5768,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-honeybadger-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with honeybadger-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from honeybadger-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to honeybadger-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "raygun-api-v3": {
      "name": "raygun-api-v3",
      "version": "2.3.19",
      "description": "Raygun Api V3 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-raygun-api-v3",
      "npmDownloads": 2390,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-raygun-api-v3",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with raygun-api-v3 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from raygun-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to raygun-api-v3",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "trackjs-api": {
      "name": "trackjs-api",
      "version": "3.6.5",
      "description": "Trackjs Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-trackjs-api",
      "npmDownloads": 6347,
      "repositoryUrl": "https://github.com/observability/mcp-server-trackjs-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from trackjs-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List trackjs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "newrelic-rest-api-v2": {
      "name": "newrelic-rest-api-v2",
      "version": "2.0.10",
      "description": "Newrelic Rest Api V2 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-newrelic-rest-api-v2",
      "npmDownloads": 3379,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-newrelic-rest-api-v2",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with newrelic-rest-api-v2 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from newrelic-rest-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to newrelic-rest-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "datadog-api-v1": {
      "name": "datadog-api-v1",
      "version": "3.8.1",
      "description": "Datadog Api V1 integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-datadog-api-v1",
      "npmDownloads": 4534,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-datadog-api-v1",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with datadog-api-v1 API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from datadog-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to datadog-api-v1",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "splunk-rest-api": {
      "name": "splunk-rest-api",
      "version": "1.3.4",
      "description": "Splunk Rest Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-splunk-rest-api",
      "npmDownloads": 6752,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-splunk-rest-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with splunk-rest-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from splunk-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to splunk-rest-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "elasticsearch-rest-api-high-level": {
      "name": "elasticsearch-rest-api-high-level",
      "version": "3.7.1",
      "description": "Elasticsearch Rest Api High Level integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-elasticsearch-rest-api-high-level",
      "npmDownloads": 1973,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-elasticsearch-rest-api-high-level",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with elasticsearch-rest-api-high-level API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from elasticsearch-rest-api-high-level",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to elasticsearch-rest-api-high-level",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "logstash-http-input-api": {
      "name": "logstash-http-input-api",
      "version": "3.0.14",
      "description": "Logstash Http Input Api integration server",
      "category": "api-integrations",
      "packageName": "mcp-server-logstash-http-input-api",
      "npmDownloads": 11579,
      "repositoryUrl": "https://github.com/api-integrations/mcp-server-logstash-http-input-api",
      "tools": {
        "authenticate": {
          "name": "authenticate",
          "description": "Authenticate with logstash-http-input-api API",
          "inputSchema": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string",
                "description": "API key for authentication"
              },
              "secret": {
                "type": "string",
                "description": "API secret (if required)"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "get_data": {
          "name": "get_data",
          "description": "Retrieve data from logstash-http-input-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "params": {
                "type": "object",
                "description": "Query parameters"
              }
            },
            "required": [
              "endpoint"
            ]
          }
        },
        "post_data": {
          "name": "post_data",
          "description": "Send data to logstash-http-input-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "API endpoint"
              },
              "data": {
                "type": "object",
                "description": "Data to send"
              }
            },
            "required": [
              "endpoint",
              "data"
            ]
          }
        }
      }
    },
    "gitlab-api-v4": {
      "name": "gitlab-api-v4",
      "version": "1.7.7",
      "description": "Gitlab Api V4 integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-gitlab-api-v4",
      "npmDownloads": 22566,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-gitlab-api-v4",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute gitlab-api-v4 command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get gitlab-api-v4 status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure gitlab-api-v4 settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "bitbucket-rest-api-2-0": {
      "name": "bitbucket-rest-api-2-0",
      "version": "2.8.7",
      "description": "Bitbucket Rest Api 2 0 integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-bitbucket-rest-api-2-0",
      "npmDownloads": 31234,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-bitbucket-rest-api-2-0",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute bitbucket-rest-api-2-0 command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get bitbucket-rest-api-2-0 status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure bitbucket-rest-api-2-0 settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "azure-devops-rest-api-6-0": {
      "name": "azure-devops-rest-api-6-0",
      "version": "2.2.9",
      "description": "Azure Devops Rest Api 6 0 integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-azure-devops-rest-api-6-0",
      "npmDownloads": 15007,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-azure-devops-rest-api-6-0",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute azure-devops-rest-api-6-0 command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get azure-devops-rest-api-6-0 status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure azure-devops-rest-api-6-0 settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "sourcetree-automation-api": {
      "name": "sourcetree-automation-api",
      "version": "1.7.14",
      "description": "Sourcetree Automation Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-sourcetree-automation-api",
      "npmDownloads": 28421,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-sourcetree-automation-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute sourcetree-automation-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get sourcetree-automation-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure sourcetree-automation-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "gitkraken-cli-api": {
      "name": "gitkraken-cli-api",
      "version": "3.9.0",
      "description": "Gitkraken Cli Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-gitkraken-cli-api",
      "npmDownloads": 11591,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-gitkraken-cli-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute gitkraken-cli-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get gitkraken-cli-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure gitkraken-cli-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "fork-git-client-api": {
      "name": "fork-git-client-api",
      "version": "2.2.2",
      "description": "Fork Git Client Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-fork-git-client-api",
      "npmDownloads": 3686,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-fork-git-client-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute fork-git-client-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get fork-git-client-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure fork-git-client-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "tower-git-client-api": {
      "name": "tower-git-client-api",
      "version": "3.4.7",
      "description": "Tower Git Client Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-tower-git-client-api",
      "npmDownloads": 25001,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-tower-git-client-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute tower-git-client-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get tower-git-client-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure tower-git-client-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "smartgit-rest-api": {
      "name": "smartgit-rest-api",
      "version": "1.9.13",
      "description": "Smartgit Rest Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-smartgit-rest-api",
      "npmDownloads": 17930,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-smartgit-rest-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute smartgit-rest-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get smartgit-rest-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure smartgit-rest-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "git-bash-integration-api": {
      "name": "git-bash-integration-api",
      "version": "3.6.1",
      "description": "Git Bash Integration Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-git-bash-integration-api",
      "npmDownloads": 16442,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-git-bash-integration-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute git-bash-integration-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get git-bash-integration-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure git-bash-integration-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "git-gui-automation-api": {
      "name": "git-gui-automation-api",
      "version": "1.7.18",
      "description": "Git Gui Automation Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-git-gui-automation-api",
      "npmDownloads": 13882,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-git-gui-automation-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute git-gui-automation-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get git-gui-automation-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure git-gui-automation-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "mercurial-hg-web-api": {
      "name": "mercurial-hg-web-api",
      "version": "2.7.3",
      "description": "Mercurial Hg Web Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-mercurial-hg-web-api",
      "npmDownloads": 22494,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-mercurial-hg-web-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute mercurial-hg-web-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get mercurial-hg-web-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure mercurial-hg-web-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "subversion-svn-rest-api": {
      "name": "subversion-svn-rest-api",
      "version": "3.7.13",
      "description": "Subversion Svn Rest Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-subversion-svn-rest-api",
      "npmDownloads": 32382,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-subversion-svn-rest-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute subversion-svn-rest-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get subversion-svn-rest-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure subversion-svn-rest-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "perforce-helix-rest-api": {
      "name": "perforce-helix-rest-api",
      "version": "3.7.7",
      "description": "Perforce Helix Rest Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-perforce-helix-rest-api",
      "npmDownloads": 20569,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-perforce-helix-rest-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute perforce-helix-rest-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get perforce-helix-rest-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure perforce-helix-rest-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "bazaar-bzr-web-api": {
      "name": "bazaar-bzr-web-api",
      "version": "1.0.3",
      "description": "Bazaar Bzr Web Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-bazaar-bzr-web-api",
      "npmDownloads": 11424,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-bazaar-bzr-web-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute bazaar-bzr-web-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get bazaar-bzr-web-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure bazaar-bzr-web-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "fossil-scm-rest-api": {
      "name": "fossil-scm-rest-api",
      "version": "2.6.3",
      "description": "Fossil Scm Rest Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-fossil-scm-rest-api",
      "npmDownloads": 7975,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-fossil-scm-rest-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute fossil-scm-rest-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get fossil-scm-rest-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure fossil-scm-rest-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "darcs-vcs-api": {
      "name": "darcs-vcs-api",
      "version": "2.3.9",
      "description": "Darcs Vcs Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-darcs-vcs-api",
      "npmDownloads": 22904,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-darcs-vcs-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute darcs-vcs-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get darcs-vcs-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure darcs-vcs-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "monotone-vcs-api": {
      "name": "monotone-vcs-api",
      "version": "1.3.0",
      "description": "Monotone Vcs Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-monotone-vcs-api",
      "npmDownloads": 31034,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-monotone-vcs-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute monotone-vcs-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get monotone-vcs-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure monotone-vcs-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "cvs-web-api": {
      "name": "cvs-web-api",
      "version": "1.5.10",
      "description": "Cvs Web Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-cvs-web-api",
      "npmDownloads": 22734,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-cvs-web-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute cvs-web-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get cvs-web-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure cvs-web-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "rcs-api": {
      "name": "rcs-api",
      "version": "2.2.3",
      "description": "Rcs Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-rcs-api",
      "npmDownloads": 28799,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-rcs-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute rcs-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get rcs-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure rcs-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "sccs-api": {
      "name": "sccs-api",
      "version": "3.0.5",
      "description": "Sccs Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-sccs-api",
      "npmDownloads": 3099,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-sccs-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute sccs-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get sccs-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure sccs-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "gitea-api-v1": {
      "name": "gitea-api-v1",
      "version": "1.5.5",
      "description": "Gitea Api V1 integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-gitea-api-v1",
      "npmDownloads": 5256,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-gitea-api-v1",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute gitea-api-v1 command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get gitea-api-v1 status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure gitea-api-v1 settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "forgejo-api-v1": {
      "name": "forgejo-api-v1",
      "version": "1.2.4",
      "description": "Forgejo Api V1 integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-forgejo-api-v1",
      "npmDownloads": 7864,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-forgejo-api-v1",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute forgejo-api-v1 command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get forgejo-api-v1 status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure forgejo-api-v1 settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "codeberg-gitea-api": {
      "name": "codeberg-gitea-api",
      "version": "2.8.10",
      "description": "Codeberg Gitea Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-codeberg-gitea-api",
      "npmDownloads": 29485,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-codeberg-gitea-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute codeberg-gitea-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get codeberg-gitea-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure codeberg-gitea-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "sourceforge-allura-api": {
      "name": "sourceforge-allura-api",
      "version": "2.5.19",
      "description": "Sourceforge Allura Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-sourceforge-allura-api",
      "npmDownloads": 27685,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-sourceforge-allura-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute sourceforge-allura-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get sourceforge-allura-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure sourceforge-allura-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "launchpad-web-api-1-0": {
      "name": "launchpad-web-api-1-0",
      "version": "2.7.18",
      "description": "Launchpad Web Api 1 0 integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-launchpad-web-api-1-0",
      "npmDownloads": 17363,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-launchpad-web-api-1-0",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute launchpad-web-api-1-0 command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get launchpad-web-api-1-0 status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure launchpad-web-api-1-0 settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "webpack-cli-api": {
      "name": "webpack-cli-api",
      "version": "1.0.9",
      "description": "Webpack Cli Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-webpack-cli-api",
      "npmDownloads": 13767,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-webpack-cli-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute webpack-cli-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get webpack-cli-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure webpack-cli-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "vite-build-api": {
      "name": "vite-build-api",
      "version": "2.9.0",
      "description": "Vite Build Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-vite-build-api",
      "npmDownloads": 9590,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-vite-build-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute vite-build-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get vite-build-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure vite-build-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "rollup-plugin-api": {
      "name": "rollup-plugin-api",
      "version": "1.6.9",
      "description": "Rollup Plugin Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-rollup-plugin-api",
      "npmDownloads": 15112,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-rollup-plugin-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute rollup-plugin-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get rollup-plugin-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure rollup-plugin-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "parcel-bundler-api": {
      "name": "parcel-bundler-api",
      "version": "2.7.5",
      "description": "Parcel Bundler Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-parcel-bundler-api",
      "npmDownloads": 4731,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-parcel-bundler-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute parcel-bundler-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get parcel-bundler-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure parcel-bundler-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "snowpack-build-api": {
      "name": "snowpack-build-api",
      "version": "1.8.7",
      "description": "Snowpack Build Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-snowpack-build-api",
      "npmDownloads": 11043,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-snowpack-build-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute snowpack-build-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get snowpack-build-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure snowpack-build-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "esbuild-api-0-14": {
      "name": "esbuild-api-0-14",
      "version": "1.6.9",
      "description": "Esbuild Api 0 14 integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-esbuild-api-0-14",
      "npmDownloads": 3245,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-esbuild-api-0-14",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute esbuild-api-0-14 command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get esbuild-api-0-14 status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure esbuild-api-0-14 settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "swc-core-api": {
      "name": "swc-core-api",
      "version": "3.2.18",
      "description": "Swc Core Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-swc-core-api",
      "npmDownloads": 23801,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-swc-core-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute swc-core-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get swc-core-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure swc-core-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "turbopack-api": {
      "name": "turbopack-api",
      "version": "1.8.10",
      "description": "Turbopack Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-turbopack-api",
      "npmDownloads": 21568,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-turbopack-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute turbopack-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get turbopack-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure turbopack-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "rome-tools-api": {
      "name": "rome-tools-api",
      "version": "1.6.19",
      "description": "Rome Tools Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-rome-tools-api",
      "npmDownloads": 15320,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-rome-tools-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute rome-tools-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get rome-tools-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure rome-tools-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "babel-core-api": {
      "name": "babel-core-api",
      "version": "2.7.11",
      "description": "Babel Core Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-babel-core-api",
      "npmDownloads": 11269,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-babel-core-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute babel-core-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get babel-core-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure babel-core-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "gradle-tooling-api": {
      "name": "gradle-tooling-api",
      "version": "1.9.17",
      "description": "Gradle Tooling Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-gradle-tooling-api",
      "npmDownloads": 25773,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-gradle-tooling-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute gradle-tooling-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get gradle-tooling-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure gradle-tooling-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "maven-embedder-api": {
      "name": "maven-embedder-api",
      "version": "3.5.12",
      "description": "Maven Embedder Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-maven-embedder-api",
      "npmDownloads": 3652,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-maven-embedder-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute maven-embedder-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get maven-embedder-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure maven-embedder-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "apache-ant-api": {
      "name": "apache-ant-api",
      "version": "1.1.12",
      "description": "Apache Ant Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-apache-ant-api",
      "npmDownloads": 17284,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-apache-ant-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute apache-ant-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get apache-ant-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure apache-ant-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "sbt-server-api": {
      "name": "sbt-server-api",
      "version": "2.6.3",
      "description": "Sbt Server Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-sbt-server-api",
      "npmDownloads": 25548,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-sbt-server-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute sbt-server-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get sbt-server-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure sbt-server-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "leiningen-api": {
      "name": "leiningen-api",
      "version": "2.1.4",
      "description": "Leiningen Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-leiningen-api",
      "npmDownloads": 24132,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-leiningen-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute leiningen-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get leiningen-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure leiningen-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "cargo-metadata-api": {
      "name": "cargo-metadata-api",
      "version": "1.7.8",
      "description": "Cargo Metadata Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-cargo-metadata-api",
      "npmDownloads": 14439,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-cargo-metadata-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute cargo-metadata-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get cargo-metadata-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure cargo-metadata-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "go-build-api": {
      "name": "go-build-api",
      "version": "2.8.17",
      "description": "Go Build Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-go-build-api",
      "npmDownloads": 11001,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-go-build-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute go-build-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get go-build-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure go-build-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "make-automation-api": {
      "name": "make-automation-api",
      "version": "1.7.11",
      "description": "Make Automation Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-make-automation-api",
      "npmDownloads": 4992,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-make-automation-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute make-automation-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get make-automation-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure make-automation-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "cmake-server-api": {
      "name": "cmake-server-api",
      "version": "2.8.15",
      "description": "Cmake Server Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-cmake-server-api",
      "npmDownloads": 15286,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-cmake-server-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute cmake-server-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get cmake-server-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure cmake-server-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "ninja-build-api": {
      "name": "ninja-build-api",
      "version": "3.1.9",
      "description": "Ninja Build Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-ninja-build-api",
      "npmDownloads": 21374,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-ninja-build-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute ninja-build-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get ninja-build-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure ninja-build-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "bazel-remote-api": {
      "name": "bazel-remote-api",
      "version": "3.8.2",
      "description": "Bazel Remote Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-bazel-remote-api",
      "npmDownloads": 2622,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-bazel-remote-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute bazel-remote-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get bazel-remote-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure bazel-remote-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "buck-build-api": {
      "name": "buck-build-api",
      "version": "3.4.14",
      "description": "Buck Build Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-buck-build-api",
      "npmDownloads": 13596,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-buck-build-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute buck-build-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get buck-build-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure buck-build-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "pants-engine-api": {
      "name": "pants-engine-api",
      "version": "3.5.13",
      "description": "Pants Engine Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-pants-engine-api",
      "npmDownloads": 13361,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-pants-engine-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute pants-engine-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get pants-engine-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure pants-engine-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "poetry-core-api": {
      "name": "poetry-core-api",
      "version": "1.6.16",
      "description": "Poetry Core Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-poetry-core-api",
      "npmDownloads": 22413,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-poetry-core-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute poetry-core-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get poetry-core-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure poetry-core-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "pipenv-api": {
      "name": "pipenv-api",
      "version": "2.4.7",
      "description": "Pipenv Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-pipenv-api",
      "npmDownloads": 20026,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-pipenv-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute pipenv-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get pipenv-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure pipenv-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "conda-build-api": {
      "name": "conda-build-api",
      "version": "3.2.14",
      "description": "Conda Build Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-conda-build-api",
      "npmDownloads": 5965,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-conda-build-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute conda-build-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get conda-build-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure conda-build-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "meson-build-api": {
      "name": "meson-build-api",
      "version": "2.9.4",
      "description": "Meson Build Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-meson-build-api",
      "npmDownloads": 5134,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-meson-build-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute meson-build-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get meson-build-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure meson-build-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "waf-build-api": {
      "name": "waf-build-api",
      "version": "3.3.12",
      "description": "Waf Build Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-waf-build-api",
      "npmDownloads": 14193,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-waf-build-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute waf-build-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get waf-build-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure waf-build-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "tup-build-api": {
      "name": "tup-build-api",
      "version": "1.7.5",
      "description": "Tup Build Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-tup-build-api",
      "npmDownloads": 15896,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-tup-build-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute tup-build-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get tup-build-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure tup-build-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "redo-build-api": {
      "name": "redo-build-api",
      "version": "3.7.5",
      "description": "Redo Build Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-redo-build-api",
      "npmDownloads": 16353,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-redo-build-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute redo-build-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get redo-build-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure redo-build-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "jest-runner-api": {
      "name": "jest-runner-api",
      "version": "2.9.18",
      "description": "Jest Runner Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-jest-runner-api",
      "npmDownloads": 15866,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-jest-runner-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute jest-runner-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get jest-runner-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure jest-runner-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "mocha-programmatic-api": {
      "name": "mocha-programmatic-api",
      "version": "2.8.1",
      "description": "Mocha Programmatic Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-mocha-programmatic-api",
      "npmDownloads": 19064,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-mocha-programmatic-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute mocha-programmatic-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get mocha-programmatic-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure mocha-programmatic-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "jasmine-core-api": {
      "name": "jasmine-core-api",
      "version": "1.4.11",
      "description": "Jasmine Core Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-jasmine-core-api",
      "npmDownloads": 2956,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-jasmine-core-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute jasmine-core-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get jasmine-core-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure jasmine-core-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "karma-server-api": {
      "name": "karma-server-api",
      "version": "2.6.9",
      "description": "Karma Server Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-karma-server-api",
      "npmDownloads": 6876,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-karma-server-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute karma-server-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get karma-server-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure karma-server-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "protractor-api": {
      "name": "protractor-api",
      "version": "1.8.15",
      "description": "Protractor Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-protractor-api",
      "npmDownloads": 11715,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-protractor-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute protractor-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get protractor-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure protractor-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "webdriverio-api": {
      "name": "webdriverio-api",
      "version": "3.3.10",
      "description": "Webdriverio Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-webdriverio-api",
      "npmDownloads": 20973,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-webdriverio-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute webdriverio-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get webdriverio-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure webdriverio-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "appium-base-driver-api": {
      "name": "appium-base-driver-api",
      "version": "1.1.9",
      "description": "Appium Base Driver Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-appium-base-driver-api",
      "npmDownloads": 19073,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-appium-base-driver-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute appium-base-driver-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get appium-base-driver-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure appium-base-driver-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "detox-api": {
      "name": "detox-api",
      "version": "2.6.7",
      "description": "Detox Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-detox-api",
      "npmDownloads": 4529,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-detox-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute detox-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get detox-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure detox-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "espresso-core-api": {
      "name": "espresso-core-api",
      "version": "1.5.7",
      "description": "Espresso Core Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-espresso-core-api",
      "npmDownloads": 8111,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-espresso-core-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute espresso-core-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get espresso-core-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure espresso-core-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "xctest-framework-api": {
      "name": "xctest-framework-api",
      "version": "2.5.15",
      "description": "Xctest Framework Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-xctest-framework-api",
      "npmDownloads": 13054,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-xctest-framework-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute xctest-framework-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get xctest-framework-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure xctest-framework-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "junit-platform-api": {
      "name": "junit-platform-api",
      "version": "2.0.13",
      "description": "Junit Platform Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-junit-platform-api",
      "npmDownloads": 15408,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-junit-platform-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute junit-platform-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get junit-platform-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure junit-platform-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "testng-api": {
      "name": "testng-api",
      "version": "1.0.9",
      "description": "Testng Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-testng-api",
      "npmDownloads": 6624,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-testng-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute testng-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get testng-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure testng-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "pytest-api": {
      "name": "pytest-api",
      "version": "3.9.5",
      "description": "Pytest Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-pytest-api",
      "npmDownloads": 10932,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-pytest-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute pytest-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get pytest-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure pytest-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "unittest-api": {
      "name": "unittest-api",
      "version": "2.7.16",
      "description": "Unittest Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-unittest-api",
      "npmDownloads": 13436,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-unittest-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute unittest-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get unittest-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure unittest-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "nose2-api": {
      "name": "nose2-api",
      "version": "3.9.0",
      "description": "Nose2 Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-nose2-api",
      "npmDownloads": 14548,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-nose2-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute nose2-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get nose2-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure nose2-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "rspec-core-api": {
      "name": "rspec-core-api",
      "version": "1.1.15",
      "description": "Rspec Core Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-rspec-core-api",
      "npmDownloads": 7599,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-rspec-core-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute rspec-core-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get rspec-core-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure rspec-core-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "minitest-api": {
      "name": "minitest-api",
      "version": "2.2.15",
      "description": "Minitest Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-minitest-api",
      "npmDownloads": 1722,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-minitest-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute minitest-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get minitest-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure minitest-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "cucumber-ruby-api": {
      "name": "cucumber-ruby-api",
      "version": "2.2.2",
      "description": "Cucumber Ruby Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-cucumber-ruby-api",
      "npmDownloads": 11850,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-cucumber-ruby-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute cucumber-ruby-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get cucumber-ruby-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure cucumber-ruby-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "behave-api": {
      "name": "behave-api",
      "version": "2.2.17",
      "description": "Behave Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-behave-api",
      "npmDownloads": 8873,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-behave-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute behave-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get behave-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure behave-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "specflow-api": {
      "name": "specflow-api",
      "version": "2.7.4",
      "description": "Specflow Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-specflow-api",
      "npmDownloads": 3771,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-specflow-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute specflow-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get specflow-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure specflow-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "nunit-framework-api": {
      "name": "nunit-framework-api",
      "version": "1.4.4",
      "description": "Nunit Framework Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-nunit-framework-api",
      "npmDownloads": 14222,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-nunit-framework-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute nunit-framework-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get nunit-framework-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure nunit-framework-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "xunit-core-api": {
      "name": "xunit-core-api",
      "version": "3.7.1",
      "description": "Xunit Core Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-xunit-core-api",
      "npmDownloads": 1642,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-xunit-core-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute xunit-core-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get xunit-core-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure xunit-core-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "mstest-framework-api": {
      "name": "mstest-framework-api",
      "version": "3.3.15",
      "description": "Mstest Framework Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-mstest-framework-api",
      "npmDownloads": 9292,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-mstest-framework-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute mstest-framework-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get mstest-framework-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure mstest-framework-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "phpunit-framework-api": {
      "name": "phpunit-framework-api",
      "version": "3.2.8",
      "description": "Phpunit Framework Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-phpunit-framework-api",
      "npmDownloads": 3965,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-phpunit-framework-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute phpunit-framework-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get phpunit-framework-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure phpunit-framework-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "pest-php-api": {
      "name": "pest-php-api",
      "version": "3.0.13",
      "description": "Pest Php Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-pest-php-api",
      "npmDownloads": 9020,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-pest-php-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute pest-php-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get pest-php-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure pest-php-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "go-testing-api": {
      "name": "go-testing-api",
      "version": "1.6.2",
      "description": "Go Testing Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-go-testing-api",
      "npmDownloads": 13536,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-go-testing-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute go-testing-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get go-testing-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure go-testing-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "cargo-nextest-api": {
      "name": "cargo-nextest-api",
      "version": "1.1.17",
      "description": "Cargo Nextest Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-cargo-nextest-api",
      "npmDownloads": 4107,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-cargo-nextest-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute cargo-nextest-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get cargo-nextest-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure cargo-nextest-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "crystal-spec-api": {
      "name": "crystal-spec-api",
      "version": "2.7.2",
      "description": "Crystal Spec Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-crystal-spec-api",
      "npmDownloads": 14462,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-crystal-spec-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute crystal-spec-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get crystal-spec-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure crystal-spec-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "deno-test-api": {
      "name": "deno-test-api",
      "version": "1.2.15",
      "description": "Deno Test Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-deno-test-api",
      "npmDownloads": 3181,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-deno-test-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute deno-test-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get deno-test-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure deno-test-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "vitest-api": {
      "name": "vitest-api",
      "version": "3.6.2",
      "description": "Vitest Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-vitest-api",
      "npmDownloads": 13859,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-vitest-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute vitest-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get vitest-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure vitest-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "ava-test-api": {
      "name": "ava-test-api",
      "version": "2.0.18",
      "description": "Ava Test Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-ava-test-api",
      "npmDownloads": 10233,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-ava-test-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute ava-test-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get ava-test-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure ava-test-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "tape-test-api": {
      "name": "tape-test-api",
      "version": "1.2.19",
      "description": "Tape Test Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-tape-test-api",
      "npmDownloads": 11654,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-tape-test-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute tape-test-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get tape-test-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure tape-test-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "qunit-api": {
      "name": "qunit-api",
      "version": "1.9.9",
      "description": "Qunit Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-qunit-api",
      "npmDownloads": 1773,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-qunit-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute qunit-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get qunit-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure qunit-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "chai-api": {
      "name": "chai-api",
      "version": "2.8.4",
      "description": "Chai Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-chai-api",
      "npmDownloads": 2553,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-chai-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute chai-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get chai-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure chai-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "sinon-api": {
      "name": "sinon-api",
      "version": "2.4.19",
      "description": "Sinon Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-sinon-api",
      "npmDownloads": 5285,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-sinon-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute sinon-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get sinon-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure sinon-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "yarn-berry-api": {
      "name": "yarn-berry-api",
      "version": "3.5.9",
      "description": "Yarn Berry Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-yarn-berry-api",
      "npmDownloads": 11524,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-yarn-berry-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute yarn-berry-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get yarn-berry-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure yarn-berry-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "pnpm-cli-api": {
      "name": "pnpm-cli-api",
      "version": "1.0.5",
      "description": "Pnpm Cli Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-pnpm-cli-api",
      "npmDownloads": 12308,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-pnpm-cli-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute pnpm-cli-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get pnpm-cli-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure pnpm-cli-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "pip-api": {
      "name": "pip-api",
      "version": "1.5.1",
      "description": "Pip Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-pip-api",
      "npmDownloads": 8402,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-pip-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute pip-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get pip-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure pip-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "pipx-api": {
      "name": "pipx-api",
      "version": "3.5.17",
      "description": "Pipx Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-pipx-api",
      "npmDownloads": 5849,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-pipx-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute pipx-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get pipx-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure pipx-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "conda-api": {
      "name": "conda-api",
      "version": "1.2.11",
      "description": "Conda Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-conda-api",
      "npmDownloads": 8197,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-conda-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute conda-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get conda-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure conda-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "composer-api": {
      "name": "composer-api",
      "version": "1.5.0",
      "description": "Composer Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-composer-api",
      "npmDownloads": 11095,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-composer-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute composer-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get composer-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure composer-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "packagist-api": {
      "name": "packagist-api",
      "version": "1.6.0",
      "description": "Packagist Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-packagist-api",
      "npmDownloads": 1998,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-packagist-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute packagist-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get packagist-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure packagist-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "nuget-server-api": {
      "name": "nuget-server-api",
      "version": "1.1.17",
      "description": "Nuget Server Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-nuget-server-api",
      "npmDownloads": 11489,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-nuget-server-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute nuget-server-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get nuget-server-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure nuget-server-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "chocolatey-api": {
      "name": "chocolatey-api",
      "version": "3.7.17",
      "description": "Chocolatey Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-chocolatey-api",
      "npmDownloads": 1058,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-chocolatey-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute chocolatey-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get chocolatey-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure chocolatey-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "scoop-api": {
      "name": "scoop-api",
      "version": "1.9.11",
      "description": "Scoop Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-scoop-api",
      "npmDownloads": 9665,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-scoop-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute scoop-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get scoop-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure scoop-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "homebrew-api": {
      "name": "homebrew-api",
      "version": "1.2.15",
      "description": "Homebrew Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-homebrew-api",
      "npmDownloads": 1439,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-homebrew-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute homebrew-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get homebrew-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure homebrew-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "macports-api": {
      "name": "macports-api",
      "version": "3.7.12",
      "description": "Macports Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-macports-api",
      "npmDownloads": 6234,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-macports-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute macports-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get macports-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure macports-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "apt-api": {
      "name": "apt-api",
      "version": "1.8.1",
      "description": "Apt Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-apt-api",
      "npmDownloads": 5423,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-apt-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute apt-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get apt-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure apt-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "yum-api": {
      "name": "yum-api",
      "version": "2.5.7",
      "description": "Yum Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-yum-api",
      "npmDownloads": 10567,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-yum-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute yum-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get yum-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure yum-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "dnf-api": {
      "name": "dnf-api",
      "version": "1.3.3",
      "description": "Dnf Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-dnf-api",
      "npmDownloads": 4129,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-dnf-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute dnf-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get dnf-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure dnf-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "zypper-api": {
      "name": "zypper-api",
      "version": "1.1.17",
      "description": "Zypper Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-zypper-api",
      "npmDownloads": 5180,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-zypper-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute zypper-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get zypper-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure zypper-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "pacman-api": {
      "name": "pacman-api",
      "version": "3.3.12",
      "description": "Pacman Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-pacman-api",
      "npmDownloads": 10285,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-pacman-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute pacman-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get pacman-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure pacman-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "portage-api": {
      "name": "portage-api",
      "version": "2.8.11",
      "description": "Portage Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-portage-api",
      "npmDownloads": 9465,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-portage-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute portage-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get portage-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure portage-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "pkgsrc-api": {
      "name": "pkgsrc-api",
      "version": "2.2.8",
      "description": "Pkgsrc Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-pkgsrc-api",
      "npmDownloads": 1151,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-pkgsrc-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute pkgsrc-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get pkgsrc-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure pkgsrc-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "opkg-api": {
      "name": "opkg-api",
      "version": "3.3.3",
      "description": "Opkg Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-opkg-api",
      "npmDownloads": 8435,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-opkg-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute opkg-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get opkg-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure opkg-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "rubygems-api": {
      "name": "rubygems-api",
      "version": "2.8.8",
      "description": "Rubygems Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-rubygems-api",
      "npmDownloads": 3278,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-rubygems-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute rubygems-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get rubygems-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure rubygems-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "bundler-api": {
      "name": "bundler-api",
      "version": "2.0.19",
      "description": "Bundler Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-bundler-api",
      "npmDownloads": 8924,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-bundler-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute bundler-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get bundler-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure bundler-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "crates-io-api": {
      "name": "crates-io-api",
      "version": "3.5.12",
      "description": "Crates Io Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-crates-io-api",
      "npmDownloads": 3832,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-crates-io-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute crates-io-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get crates-io-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure crates-io-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "hex-pm-api": {
      "name": "hex-pm-api",
      "version": "3.7.10",
      "description": "Hex Pm Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-hex-pm-api",
      "npmDownloads": 7813,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-hex-pm-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute hex-pm-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get hex-pm-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure hex-pm-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "dub-registry-api": {
      "name": "dub-registry-api",
      "version": "3.4.9",
      "description": "Dub Registry Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-dub-registry-api",
      "npmDownloads": 5743,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-dub-registry-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute dub-registry-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get dub-registry-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure dub-registry-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "vscode-extensions-api": {
      "name": "vscode-extensions-api",
      "version": "2.2.0",
      "description": "Vscode Extensions Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-vscode-extensions-api",
      "npmDownloads": 6914,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-vscode-extensions-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute vscode-extensions-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get vscode-extensions-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure vscode-extensions-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "intellij-platform-api": {
      "name": "intellij-platform-api",
      "version": "1.2.4",
      "description": "Intellij Platform Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-intellij-platform-api",
      "npmDownloads": 6021,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-intellij-platform-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute intellij-platform-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get intellij-platform-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure intellij-platform-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "pycharm-api": {
      "name": "pycharm-api",
      "version": "2.6.2",
      "description": "Pycharm Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-pycharm-api",
      "npmDownloads": 6162,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-pycharm-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute pycharm-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get pycharm-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure pycharm-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "webstorm-api": {
      "name": "webstorm-api",
      "version": "1.0.18",
      "description": "Webstorm Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-webstorm-api",
      "npmDownloads": 4540,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-webstorm-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute webstorm-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get webstorm-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure webstorm-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "phpstorm-api": {
      "name": "phpstorm-api",
      "version": "3.6.3",
      "description": "Phpstorm Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-phpstorm-api",
      "npmDownloads": 1485,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-phpstorm-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute phpstorm-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get phpstorm-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure phpstorm-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "rubymine-api": {
      "name": "rubymine-api",
      "version": "2.6.7",
      "description": "Rubymine Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-rubymine-api",
      "npmDownloads": 3681,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-rubymine-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute rubymine-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get rubymine-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure rubymine-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "clion-api": {
      "name": "clion-api",
      "version": "1.6.9",
      "description": "Clion Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-clion-api",
      "npmDownloads": 4808,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-clion-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute clion-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get clion-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure clion-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "datagrip-api": {
      "name": "datagrip-api",
      "version": "3.2.5",
      "description": "Datagrip Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-datagrip-api",
      "npmDownloads": 8040,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-datagrip-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute datagrip-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get datagrip-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure datagrip-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "rider-api": {
      "name": "rider-api",
      "version": "2.1.4",
      "description": "Rider Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-rider-api",
      "npmDownloads": 6147,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-rider-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute rider-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get rider-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure rider-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "goland-api": {
      "name": "goland-api",
      "version": "2.8.16",
      "description": "Goland Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-goland-api",
      "npmDownloads": 8433,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-goland-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute goland-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get goland-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure goland-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "vim-api": {
      "name": "vim-api",
      "version": "1.0.13",
      "description": "Vim Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-vim-api",
      "npmDownloads": 1662,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-vim-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute vim-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get vim-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure vim-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "neovim-api": {
      "name": "neovim-api",
      "version": "3.7.0",
      "description": "Neovim Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-neovim-api",
      "npmDownloads": 7714,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-neovim-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute neovim-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get neovim-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure neovim-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "emacs-lisp-api": {
      "name": "emacs-lisp-api",
      "version": "2.1.9",
      "description": "Emacs Lisp Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-emacs-lisp-api",
      "npmDownloads": 9539,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-emacs-lisp-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute emacs-lisp-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get emacs-lisp-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure emacs-lisp-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "spacemacs-api": {
      "name": "spacemacs-api",
      "version": "3.7.8",
      "description": "Spacemacs Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-spacemacs-api",
      "npmDownloads": 2790,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-spacemacs-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute spacemacs-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get spacemacs-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure spacemacs-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "doom-emacs-api": {
      "name": "doom-emacs-api",
      "version": "3.1.19",
      "description": "Doom Emacs Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-doom-emacs-api",
      "npmDownloads": 4169,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-doom-emacs-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute doom-emacs-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get doom-emacs-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure doom-emacs-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "atom-api": {
      "name": "atom-api",
      "version": "1.9.2",
      "description": "Atom Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-atom-api",
      "npmDownloads": 4907,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-atom-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute atom-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get atom-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure atom-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "sublime-text-api": {
      "name": "sublime-text-api",
      "version": "2.1.5",
      "description": "Sublime Text Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-sublime-text-api",
      "npmDownloads": 7099,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-sublime-text-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute sublime-text-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get sublime-text-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure sublime-text-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "notepadplusplus-api": {
      "name": "notepadplusplus-api",
      "version": "1.0.8",
      "description": "Notepadplusplus Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-notepadplusplus-api",
      "npmDownloads": 9510,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-notepadplusplus-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute notepadplusplus-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get notepadplusplus-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure notepadplusplus-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "brackets-api": {
      "name": "brackets-api",
      "version": "2.2.4",
      "description": "Brackets Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-brackets-api",
      "npmDownloads": 5876,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-brackets-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute brackets-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get brackets-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure brackets-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "bluefish-api": {
      "name": "bluefish-api",
      "version": "1.3.19",
      "description": "Bluefish Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-bluefish-api",
      "npmDownloads": 5238,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-bluefish-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute bluefish-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get bluefish-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure bluefish-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "komodo-api": {
      "name": "komodo-api",
      "version": "1.2.6",
      "description": "Komodo Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-komodo-api",
      "npmDownloads": 7161,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-komodo-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute komodo-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get komodo-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure komodo-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "aptana-api": {
      "name": "aptana-api",
      "version": "3.4.10",
      "description": "Aptana Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-aptana-api",
      "npmDownloads": 2332,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-aptana-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute aptana-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get aptana-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure aptana-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "eclipse-platform-api": {
      "name": "eclipse-platform-api",
      "version": "1.4.2",
      "description": "Eclipse Platform Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-eclipse-platform-api",
      "npmDownloads": 8143,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-eclipse-platform-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute eclipse-platform-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get eclipse-platform-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure eclipse-platform-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "netbeans-api": {
      "name": "netbeans-api",
      "version": "2.6.18",
      "description": "Netbeans Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-netbeans-api",
      "npmDownloads": 4634,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-netbeans-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute netbeans-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get netbeans-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure netbeans-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "codeblocks-api": {
      "name": "codeblocks-api",
      "version": "2.1.3",
      "description": "Codeblocks Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-codeblocks-api",
      "npmDownloads": 4672,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-codeblocks-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute codeblocks-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get codeblocks-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure codeblocks-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "devcpp-api": {
      "name": "devcpp-api",
      "version": "1.0.18",
      "description": "Devcpp Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-devcpp-api",
      "npmDownloads": 1160,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-devcpp-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute devcpp-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get devcpp-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure devcpp-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "bloodshed-api": {
      "name": "bloodshed-api",
      "version": "2.9.8",
      "description": "Bloodshed Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-bloodshed-api",
      "npmDownloads": 1308,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-bloodshed-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute bloodshed-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get bloodshed-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure bloodshed-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "qtcreator-api": {
      "name": "qtcreator-api",
      "version": "3.9.9",
      "description": "Qtcreator Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-qtcreator-api",
      "npmDownloads": 1989,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-qtcreator-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute qtcreator-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get qtcreator-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure qtcreator-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "xcode-api": {
      "name": "xcode-api",
      "version": "1.1.11",
      "description": "Xcode Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-xcode-api",
      "npmDownloads": 6193,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-xcode-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute xcode-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get xcode-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure xcode-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "android-studio-api": {
      "name": "android-studio-api",
      "version": "1.9.16",
      "description": "Android Studio Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-android-studio-api",
      "npmDownloads": 1482,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-android-studio-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute android-studio-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get android-studio-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure android-studio-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "flutter-tools-api": {
      "name": "flutter-tools-api",
      "version": "2.7.11",
      "description": "Flutter Tools Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-flutter-tools-api",
      "npmDownloads": 9143,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-flutter-tools-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute flutter-tools-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get flutter-tools-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure flutter-tools-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "unity-editor-api": {
      "name": "unity-editor-api",
      "version": "2.9.5",
      "description": "Unity Editor Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-unity-editor-api",
      "npmDownloads": 8957,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-unity-editor-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute unity-editor-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get unity-editor-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure unity-editor-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "unreal-automation-api": {
      "name": "unreal-automation-api",
      "version": "1.8.4",
      "description": "Unreal Automation Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-unreal-automation-api",
      "npmDownloads": 8345,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-unreal-automation-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute unreal-automation-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get unreal-automation-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure unreal-automation-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "godot-api": {
      "name": "godot-api",
      "version": "1.9.19",
      "description": "Godot Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-godot-api",
      "npmDownloads": 7912,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-godot-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute godot-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get godot-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure godot-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "blender-python-api": {
      "name": "blender-python-api",
      "version": "3.4.17",
      "description": "Blender Python Api integration server",
      "category": "developer-tools",
      "packageName": "mcp-server-blender-python-api",
      "npmDownloads": 3930,
      "repositoryUrl": "https://github.com/dev-tools/mcp-server-blender-python-api",
      "tools": {
        "execute": {
          "name": "execute",
          "description": "Execute blender-python-api command",
          "inputSchema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "get_status": {
          "name": "get_status",
          "description": "Get blender-python-api status",
          "inputSchema": {
            "type": "object",
            "properties": {
              "project_path": {
                "type": "string",
                "description": "Project path"
              }
            }
          }
        },
        "configure": {
          "name": "configure",
          "description": "Configure blender-python-api settings",
          "inputSchema": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "description": "Configuration object"
              }
            },
            "required": [
              "config"
            ]
          }
        }
      }
    },
    "aws-ec2-api": {
      "name": "aws-ec2-api",
      "version": "1.6.10",
      "description": "Aws Ec2 Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-ec2-api",
      "npmDownloads": 17229,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-ec2-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-ec2-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-ec2-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-ec2-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-s3-api": {
      "name": "aws-s3-api",
      "version": "3.0.14",
      "description": "Aws S3 Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-s3-api",
      "npmDownloads": 10298,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-s3-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-s3-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-s3-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-s3-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-lambda-api": {
      "name": "aws-lambda-api",
      "version": "1.8.13",
      "description": "Aws Lambda Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-lambda-api",
      "npmDownloads": 10214,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-lambda-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-lambda-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-lambda-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-lambda-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-rds-api": {
      "name": "aws-rds-api",
      "version": "2.7.10",
      "description": "Aws Rds Api integration server",
      "category": "database",
      "packageName": "mcp-server-aws-rds-api",
      "npmDownloads": 14626,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-aws-rds-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to aws-rds-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on aws-rds-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup aws-rds-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "aws-cloudfront-api": {
      "name": "aws-cloudfront-api",
      "version": "2.5.16",
      "description": "Aws Cloudfront Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-aws-cloudfront-api",
      "npmDownloads": 750,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-aws-cloudfront-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aws-cloudfront-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aws-cloudfront-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "aws-route53-api": {
      "name": "aws-route53-api",
      "version": "3.7.5",
      "description": "Aws Route53 Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-route53-api",
      "npmDownloads": 20066,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-route53-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-route53-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-route53-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-route53-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-iam-api": {
      "name": "aws-iam-api",
      "version": "1.5.0",
      "description": "Aws Iam Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-iam-api",
      "npmDownloads": 27675,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-iam-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-iam-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-iam-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-iam-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-vpc-api": {
      "name": "aws-vpc-api",
      "version": "2.3.13",
      "description": "Aws Vpc Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-vpc-api",
      "npmDownloads": 14314,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-vpc-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-vpc-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-vpc-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-vpc-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-cloudwatch-api": {
      "name": "aws-cloudwatch-api",
      "version": "3.1.15",
      "description": "Aws Cloudwatch Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-cloudwatch-api",
      "npmDownloads": 24979,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-cloudwatch-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-cloudwatch-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-cloudwatch-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-cloudwatch-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-sns-api": {
      "name": "aws-sns-api",
      "version": "2.3.12",
      "description": "Aws Sns Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-sns-api",
      "npmDownloads": 18863,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-sns-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-sns-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-sns-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-sns-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-sqs-api": {
      "name": "aws-sqs-api",
      "version": "3.0.13",
      "description": "Aws Sqs Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-sqs-api",
      "npmDownloads": 7792,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-sqs-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-sqs-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-sqs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-sqs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-dynamodb-api": {
      "name": "aws-dynamodb-api",
      "version": "3.4.14",
      "description": "Aws Dynamodb Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-dynamodb-api",
      "npmDownloads": 15297,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-dynamodb-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-dynamodb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-dynamodb-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-dynamodb-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-elasticsearch-service-api": {
      "name": "aws-elasticsearch-service-api",
      "version": "2.4.4",
      "description": "Aws Elasticsearch Service Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-elasticsearch-service-api",
      "npmDownloads": 3678,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-elasticsearch-service-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-elasticsearch-service-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-elasticsearch-service-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-elasticsearch-service-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-kinesis-api": {
      "name": "aws-kinesis-api",
      "version": "2.0.17",
      "description": "Aws Kinesis Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-kinesis-api",
      "npmDownloads": 6786,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-kinesis-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-kinesis-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-kinesis-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-kinesis-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-redshift-api": {
      "name": "aws-redshift-api",
      "version": "2.3.14",
      "description": "Aws Redshift Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-redshift-api",
      "npmDownloads": 17883,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-redshift-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-redshift-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-redshift-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-redshift-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-cloudformation-api": {
      "name": "aws-cloudformation-api",
      "version": "3.4.13",
      "description": "Aws Cloudformation Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-cloudformation-api",
      "npmDownloads": 5852,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-cloudformation-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-cloudformation-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-cloudformation-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-cloudformation-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-elasticbeanstalk-api": {
      "name": "aws-elasticbeanstalk-api",
      "version": "2.4.3",
      "description": "Aws Elasticbeanstalk Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-elasticbeanstalk-api",
      "npmDownloads": 5269,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-elasticbeanstalk-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-elasticbeanstalk-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-elasticbeanstalk-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-elasticbeanstalk-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-ecs-api": {
      "name": "aws-ecs-api",
      "version": "2.9.1",
      "description": "Aws Ecs Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-ecs-api",
      "npmDownloads": 18416,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-ecs-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-ecs-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-ecs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-ecs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-eks-api": {
      "name": "aws-eks-api",
      "version": "1.8.16",
      "description": "Aws Eks Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-eks-api",
      "npmDownloads": 19639,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-eks-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-eks-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-eks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-eks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-fargate-api": {
      "name": "aws-fargate-api",
      "version": "2.6.3",
      "description": "Aws Fargate Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-fargate-api",
      "npmDownloads": 5457,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-fargate-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-fargate-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-fargate-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-fargate-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-apigateway-api": {
      "name": "aws-apigateway-api",
      "version": "1.3.6",
      "description": "Aws Apigateway Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-apigateway-api",
      "npmDownloads": 16497,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-apigateway-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-apigateway-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-apigateway-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-apigateway-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-cognito-api": {
      "name": "aws-cognito-api",
      "version": "1.5.16",
      "description": "Aws Cognito Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-aws-cognito-api",
      "npmDownloads": 9097,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-aws-cognito-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aws-cognito-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aws-cognito-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "aws-secretsmanager-api": {
      "name": "aws-secretsmanager-api",
      "version": "3.7.12",
      "description": "Aws Secretsmanager Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-secretsmanager-api",
      "npmDownloads": 16785,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-secretsmanager-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-secretsmanager-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-secretsmanager-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-secretsmanager-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-ssm-api": {
      "name": "aws-ssm-api",
      "version": "3.8.4",
      "description": "Aws Ssm Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-ssm-api",
      "npmDownloads": 18532,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-ssm-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-ssm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-ssm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-ssm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-xray-api": {
      "name": "aws-xray-api",
      "version": "3.4.8",
      "description": "Aws Xray Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-aws-xray-api",
      "npmDownloads": 11744,
      "repositoryUrl": "https://github.com/observability/mcp-server-aws-xray-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aws-xray-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aws-xray-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "aws-cloudtrail-api": {
      "name": "aws-cloudtrail-api",
      "version": "3.8.8",
      "description": "Aws Cloudtrail Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-cloudtrail-api",
      "npmDownloads": 14349,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-cloudtrail-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-cloudtrail-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-cloudtrail-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-cloudtrail-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-config-api": {
      "name": "aws-config-api",
      "version": "3.5.15",
      "description": "Aws Config Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-aws-config-api",
      "npmDownloads": 1074,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-aws-config-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aws-config-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aws-config-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "aws-guardduty-api": {
      "name": "aws-guardduty-api",
      "version": "3.7.1",
      "description": "Aws Guardduty Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-guardduty-api",
      "npmDownloads": 21854,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-guardduty-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-guardduty-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-guardduty-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-guardduty-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-inspector-api": {
      "name": "aws-inspector-api",
      "version": "2.5.5",
      "description": "Aws Inspector Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-inspector-api",
      "npmDownloads": 4973,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-inspector-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-inspector-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-inspector-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-inspector-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-macie-api": {
      "name": "aws-macie-api",
      "version": "3.7.5",
      "description": "Aws Macie Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-macie-api",
      "npmDownloads": 8485,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-macie-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-macie-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-macie-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-macie-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-wafv2-api": {
      "name": "aws-wafv2-api",
      "version": "3.3.1",
      "description": "Aws Wafv2 Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-wafv2-api",
      "npmDownloads": 4528,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-wafv2-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-wafv2-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-wafv2-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-wafv2-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-shield-api": {
      "name": "aws-shield-api",
      "version": "2.5.0",
      "description": "Aws Shield Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-shield-api",
      "npmDownloads": 7931,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-shield-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-shield-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-shield-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-shield-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-acm-api": {
      "name": "aws-acm-api",
      "version": "2.8.9",
      "description": "Aws Acm Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-acm-api",
      "npmDownloads": 14017,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-acm-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-acm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-acm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-acm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-kms-api": {
      "name": "aws-kms-api",
      "version": "3.1.5",
      "description": "Aws Kms Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-kms-api",
      "npmDownloads": 2998,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-kms-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-kms-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-kms-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-kms-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-cloudhsm-api": {
      "name": "aws-cloudhsm-api",
      "version": "1.1.2",
      "description": "Aws Cloudhsm Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-cloudhsm-api",
      "npmDownloads": 14341,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-cloudhsm-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-cloudhsm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-cloudhsm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-cloudhsm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-batch-api": {
      "name": "aws-batch-api",
      "version": "3.4.10",
      "description": "Aws Batch Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-batch-api",
      "npmDownloads": 14272,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-batch-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-batch-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-batch-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-batch-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-glue-api": {
      "name": "aws-glue-api",
      "version": "1.8.17",
      "description": "Aws Glue Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-glue-api",
      "npmDownloads": 15929,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-glue-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-glue-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-glue-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-glue-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-emr-api": {
      "name": "aws-emr-api",
      "version": "3.5.16",
      "description": "Aws Emr Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-emr-api",
      "npmDownloads": 16801,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-emr-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-emr-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-emr-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-emr-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-athena-api": {
      "name": "aws-athena-api",
      "version": "2.6.4",
      "description": "Aws Athena Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-athena-api",
      "npmDownloads": 11221,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-athena-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-athena-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-athena-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-athena-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-quicksight-api": {
      "name": "aws-quicksight-api",
      "version": "3.3.16",
      "description": "Aws Quicksight Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-aws-quicksight-api",
      "npmDownloads": 838,
      "repositoryUrl": "https://github.com/observability/mcp-server-aws-quicksight-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aws-quicksight-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aws-quicksight-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gcp-compute-api": {
      "name": "gcp-compute-api",
      "version": "3.2.2",
      "description": "Gcp Compute Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-compute-api",
      "npmDownloads": 3477,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-compute-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-compute-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-compute-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-compute-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-storage-api": {
      "name": "gcp-storage-api",
      "version": "2.6.12",
      "description": "Gcp Storage Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-storage-api",
      "npmDownloads": 13906,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-storage-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-storage-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-storage-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-storage-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-functions-api": {
      "name": "gcp-functions-api",
      "version": "1.5.16",
      "description": "Gcp Functions Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-functions-api",
      "npmDownloads": 3881,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-functions-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-functions-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-functions-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-functions-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-sql-api": {
      "name": "gcp-sql-api",
      "version": "2.9.16",
      "description": "Gcp Sql Api integration server",
      "category": "database",
      "packageName": "mcp-server-gcp-sql-api",
      "npmDownloads": 7766,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-gcp-sql-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to gcp-sql-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on gcp-sql-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup gcp-sql-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "gcp-gke-api": {
      "name": "gcp-gke-api",
      "version": "2.9.3",
      "description": "Gcp Gke Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-gke-api",
      "npmDownloads": 12581,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-gke-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-gke-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-gke-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-gke-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-appengine-api": {
      "name": "gcp-appengine-api",
      "version": "1.2.4",
      "description": "Gcp Appengine Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-appengine-api",
      "npmDownloads": 17662,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-appengine-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-appengine-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-appengine-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-appengine-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-run-api": {
      "name": "gcp-run-api",
      "version": "3.1.18",
      "description": "Gcp Run Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-run-api",
      "npmDownloads": 8889,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-run-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-run-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-run-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-run-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-bigquery-api": {
      "name": "gcp-bigquery-api",
      "version": "1.0.0",
      "description": "Gcp Bigquery Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-bigquery-api",
      "npmDownloads": 4566,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-bigquery-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-bigquery-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-bigquery-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-bigquery-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-bigtable-api": {
      "name": "gcp-bigtable-api",
      "version": "1.0.0",
      "description": "Gcp Bigtable Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-bigtable-api",
      "npmDownloads": 9523,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-bigtable-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-bigtable-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-bigtable-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-bigtable-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-datastore-api": {
      "name": "gcp-datastore-api",
      "version": "3.4.13",
      "description": "Gcp Datastore Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-datastore-api",
      "npmDownloads": 5039,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-datastore-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-datastore-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-datastore-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-datastore-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-pubsub-api": {
      "name": "gcp-pubsub-api",
      "version": "3.9.11",
      "description": "Gcp Pubsub Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-pubsub-api",
      "npmDownloads": 4490,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-pubsub-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-pubsub-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-pubsub-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-pubsub-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-cdn-api": {
      "name": "gcp-cdn-api",
      "version": "3.0.17",
      "description": "Gcp Cdn Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-gcp-cdn-api",
      "npmDownloads": 907,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-gcp-cdn-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from gcp-cdn-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List gcp-cdn-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gcp-dns-api": {
      "name": "gcp-dns-api",
      "version": "2.2.4",
      "description": "Gcp Dns Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-dns-api",
      "npmDownloads": 10209,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-dns-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-dns-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-dns-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-dns-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-iam-api": {
      "name": "gcp-iam-api",
      "version": "1.7.6",
      "description": "Gcp Iam Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-iam-api",
      "npmDownloads": 7232,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-iam-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-iam-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-iam-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-iam-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-logging-api": {
      "name": "gcp-logging-api",
      "version": "2.0.12",
      "description": "Gcp Logging Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-gcp-logging-api",
      "npmDownloads": 1826,
      "repositoryUrl": "https://github.com/observability/mcp-server-gcp-logging-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from gcp-logging-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List gcp-logging-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gcp-monitoring-api": {
      "name": "gcp-monitoring-api",
      "version": "2.2.17",
      "description": "Gcp Monitoring Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-monitoring-api",
      "npmDownloads": 15261,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-monitoring-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-monitoring-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-monitoring-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-monitoring-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-trace-api": {
      "name": "gcp-trace-api",
      "version": "3.4.16",
      "description": "Gcp Trace Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-gcp-trace-api",
      "npmDownloads": 10042,
      "repositoryUrl": "https://github.com/observability/mcp-server-gcp-trace-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from gcp-trace-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List gcp-trace-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gcp-debugger-api": {
      "name": "gcp-debugger-api",
      "version": "2.8.15",
      "description": "Gcp Debugger Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-debugger-api",
      "npmDownloads": 3372,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-debugger-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-debugger-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-debugger-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-debugger-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-profiler-api": {
      "name": "gcp-profiler-api",
      "version": "1.7.10",
      "description": "Gcp Profiler Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-profiler-api",
      "npmDownloads": 6958,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-profiler-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-profiler-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-profiler-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-profiler-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-build-api": {
      "name": "gcp-build-api",
      "version": "2.5.17",
      "description": "Gcp Build Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-build-api",
      "npmDownloads": 2820,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-build-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-build-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-build-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-build-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-registry-api": {
      "name": "gcp-registry-api",
      "version": "3.0.15",
      "description": "Gcp Registry Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-registry-api",
      "npmDownloads": 7932,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-registry-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-registry-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-registry-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-registry-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-artifact-api": {
      "name": "gcp-artifact-api",
      "version": "1.8.6",
      "description": "Gcp Artifact Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-artifact-api",
      "npmDownloads": 3139,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-artifact-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-artifact-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-artifact-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-artifact-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-scheduler-api": {
      "name": "gcp-scheduler-api",
      "version": "3.3.6",
      "description": "Gcp Scheduler Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-scheduler-api",
      "npmDownloads": 13933,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-scheduler-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-scheduler-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-scheduler-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-scheduler-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-tasks-api": {
      "name": "gcp-tasks-api",
      "version": "2.7.8",
      "description": "Gcp Tasks Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-tasks-api",
      "npmDownloads": 12487,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-tasks-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-tasks-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-tasks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-tasks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "gcp-dataflow-api": {
      "name": "gcp-dataflow-api",
      "version": "3.7.3",
      "description": "Gcp Dataflow Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-gcp-dataflow-api",
      "npmDownloads": 8731,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-gcp-dataflow-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using gcp-dataflow-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor gcp-dataflow-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale gcp-dataflow-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-vm-api": {
      "name": "azure-vm-api",
      "version": "2.6.6",
      "description": "Azure Vm Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-vm-api",
      "npmDownloads": 6372,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-vm-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-vm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-vm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-vm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-storage-api": {
      "name": "azure-storage-api",
      "version": "3.2.13",
      "description": "Azure Storage Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-storage-api",
      "npmDownloads": 9194,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-storage-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-storage-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-storage-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-storage-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-functions-api": {
      "name": "azure-functions-api",
      "version": "3.2.18",
      "description": "Azure Functions Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-functions-api",
      "npmDownloads": 5351,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-functions-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-functions-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-functions-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-functions-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-sql-api": {
      "name": "azure-sql-api",
      "version": "3.4.13",
      "description": "Azure Sql Api integration server",
      "category": "database",
      "packageName": "mcp-server-azure-sql-api",
      "npmDownloads": 4875,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-azure-sql-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to azure-sql-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on azure-sql-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup azure-sql-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "azure-cosmosdb-api": {
      "name": "azure-cosmosdb-api",
      "version": "2.1.10",
      "description": "Azure Cosmosdb Api integration server",
      "category": "database",
      "packageName": "mcp-server-azure-cosmosdb-api",
      "npmDownloads": 5659,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-azure-cosmosdb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to azure-cosmosdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on azure-cosmosdb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup azure-cosmosdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "azure-aks-api": {
      "name": "azure-aks-api",
      "version": "3.9.5",
      "description": "Azure Aks Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-aks-api",
      "npmDownloads": 12037,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-aks-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-aks-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-aks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-aks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-appservice-api": {
      "name": "azure-appservice-api",
      "version": "2.6.0",
      "description": "Azure Appservice Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-appservice-api",
      "npmDownloads": 8889,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-appservice-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-appservice-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-appservice-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-appservice-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-containerinstances-api": {
      "name": "azure-containerinstances-api",
      "version": "3.1.7",
      "description": "Azure Containerinstances Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-containerinstances-api",
      "npmDownloads": 7395,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-containerinstances-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-containerinstances-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-containerinstances-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-containerinstances-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-servicebus-api": {
      "name": "azure-servicebus-api",
      "version": "2.8.19",
      "description": "Azure Servicebus Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-servicebus-api",
      "npmDownloads": 1723,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-servicebus-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-servicebus-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-servicebus-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-servicebus-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-eventhubs-api": {
      "name": "azure-eventhubs-api",
      "version": "1.4.9",
      "description": "Azure Eventhubs Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-eventhubs-api",
      "npmDownloads": 6900,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-eventhubs-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-eventhubs-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-eventhubs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-eventhubs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-activedirectory-api": {
      "name": "azure-activedirectory-api",
      "version": "3.8.7",
      "description": "Azure Activedirectory Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-activedirectory-api",
      "npmDownloads": 10806,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-activedirectory-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-activedirectory-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-activedirectory-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-activedirectory-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-keyvault-api": {
      "name": "azure-keyvault-api",
      "version": "1.4.3",
      "description": "Azure Keyvault Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-keyvault-api",
      "npmDownloads": 3279,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-keyvault-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-keyvault-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-keyvault-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-keyvault-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-monitor-api": {
      "name": "azure-monitor-api",
      "version": "2.8.8",
      "description": "Azure Monitor Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-monitor-api",
      "npmDownloads": 7766,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-monitor-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-monitor-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-monitor-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-monitor-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-insights-api": {
      "name": "azure-insights-api",
      "version": "3.5.6",
      "description": "Azure Insights Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-azure-insights-api",
      "npmDownloads": 10265,
      "repositoryUrl": "https://github.com/observability/mcp-server-azure-insights-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from azure-insights-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List azure-insights-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "azure-loganalytics-api": {
      "name": "azure-loganalytics-api",
      "version": "3.7.9",
      "description": "Azure Loganalytics Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-loganalytics-api",
      "npmDownloads": 7154,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-loganalytics-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-loganalytics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-loganalytics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-loganalytics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-security-api": {
      "name": "azure-security-api",
      "version": "1.6.5",
      "description": "Azure Security Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-security-api",
      "npmDownloads": 6418,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-security-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-security-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-security-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-security-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-sentinel-api": {
      "name": "azure-sentinel-api",
      "version": "2.3.16",
      "description": "Azure Sentinel Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-sentinel-api",
      "npmDownloads": 5799,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-sentinel-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-sentinel-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-sentinel-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-sentinel-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-policy-api": {
      "name": "azure-policy-api",
      "version": "1.1.14",
      "description": "Azure Policy Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-azure-policy-api",
      "npmDownloads": 2538,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-azure-policy-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from azure-policy-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List azure-policy-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "azure-resourcemanager-api": {
      "name": "azure-resourcemanager-api",
      "version": "2.2.18",
      "description": "Azure Resourcemanager Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-resourcemanager-api",
      "npmDownloads": 8576,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-resourcemanager-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-resourcemanager-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-resourcemanager-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-resourcemanager-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-devops-api": {
      "name": "azure-devops-api",
      "version": "2.1.11",
      "description": "Azure Devops Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-devops-api",
      "npmDownloads": 7414,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-devops-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-devops-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-devops-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-devops-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-containerregistry-api": {
      "name": "azure-containerregistry-api",
      "version": "2.0.2",
      "description": "Azure Containerregistry Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-containerregistry-api",
      "npmDownloads": 3833,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-containerregistry-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-containerregistry-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-containerregistry-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-containerregistry-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-cdn-api": {
      "name": "azure-cdn-api",
      "version": "1.9.13",
      "description": "Azure Cdn Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-azure-cdn-api",
      "npmDownloads": 2217,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-azure-cdn-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from azure-cdn-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List azure-cdn-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "azure-trafficmanager-api": {
      "name": "azure-trafficmanager-api",
      "version": "2.4.2",
      "description": "Azure Trafficmanager Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-trafficmanager-api",
      "npmDownloads": 3870,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-trafficmanager-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-trafficmanager-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-trafficmanager-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-trafficmanager-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-loadbalancer-api": {
      "name": "azure-loadbalancer-api",
      "version": "3.6.9",
      "description": "Azure Loadbalancer Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-loadbalancer-api",
      "npmDownloads": 707,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-loadbalancer-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-loadbalancer-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-loadbalancer-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-loadbalancer-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "azure-vpngateway-api": {
      "name": "azure-vpngateway-api",
      "version": "2.1.8",
      "description": "Azure Vpngateway Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-azure-vpngateway-api",
      "npmDownloads": 6805,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-azure-vpngateway-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using azure-vpngateway-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor azure-vpngateway-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale azure-vpngateway-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "digitalocean-api-v2": {
      "name": "digitalocean-api-v2",
      "version": "3.6.5",
      "description": "Digitalocean Api V2 integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-digitalocean-api-v2",
      "npmDownloads": 6526,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-digitalocean-api-v2",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using digitalocean-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor digitalocean-api-v2 resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale digitalocean-api-v2 resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "linode-api-v4": {
      "name": "linode-api-v4",
      "version": "1.3.18",
      "description": "Linode Api V4 integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-linode-api-v4",
      "npmDownloads": 7076,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-linode-api-v4",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using linode-api-v4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor linode-api-v4 resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale linode-api-v4 resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "vultr-api-v2": {
      "name": "vultr-api-v2",
      "version": "3.9.8",
      "description": "Vultr Api V2 integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-vultr-api-v2",
      "npmDownloads": 8230,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-vultr-api-v2",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using vultr-api-v2",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor vultr-api-v2 resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale vultr-api-v2 resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "hetzner-cloud-api": {
      "name": "hetzner-cloud-api",
      "version": "3.5.8",
      "description": "Hetzner Cloud Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-hetzner-cloud-api",
      "npmDownloads": 7174,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-hetzner-cloud-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using hetzner-cloud-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor hetzner-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale hetzner-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "ovh-api": {
      "name": "ovh-api",
      "version": "1.9.17",
      "description": "Ovh Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-ovh-api",
      "npmDownloads": 1350,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-ovh-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using ovh-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor ovh-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale ovh-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "scaleway-api": {
      "name": "scaleway-api",
      "version": "3.2.10",
      "description": "Scaleway Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-scaleway-api",
      "npmDownloads": 5688,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-scaleway-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using scaleway-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor scaleway-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale scaleway-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "upcloud-api": {
      "name": "upcloud-api",
      "version": "2.9.8",
      "description": "Upcloud Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-upcloud-api",
      "npmDownloads": 6496,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-upcloud-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using upcloud-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor upcloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale upcloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "rackspace-api": {
      "name": "rackspace-api",
      "version": "3.5.14",
      "description": "Rackspace Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-rackspace-api",
      "npmDownloads": 7448,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-rackspace-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using rackspace-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor rackspace-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale rackspace-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "ibm-cloud-api": {
      "name": "ibm-cloud-api",
      "version": "1.6.11",
      "description": "Ibm Cloud Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-ibm-cloud-api",
      "npmDownloads": 5748,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-ibm-cloud-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using ibm-cloud-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor ibm-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale ibm-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "oracle-cloud-api": {
      "name": "oracle-cloud-api",
      "version": "2.4.4",
      "description": "Oracle Cloud Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-oracle-cloud-api",
      "npmDownloads": 3148,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-oracle-cloud-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using oracle-cloud-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor oracle-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale oracle-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "alibaba-cloud-api": {
      "name": "alibaba-cloud-api",
      "version": "1.4.16",
      "description": "Alibaba Cloud Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-alibaba-cloud-api",
      "npmDownloads": 2673,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-alibaba-cloud-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using alibaba-cloud-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor alibaba-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale alibaba-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "tencent-cloud-api": {
      "name": "tencent-cloud-api",
      "version": "1.7.17",
      "description": "Tencent Cloud Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-tencent-cloud-api",
      "npmDownloads": 8437,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-tencent-cloud-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using tencent-cloud-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor tencent-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale tencent-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "huawei-cloud-api": {
      "name": "huawei-cloud-api",
      "version": "1.4.0",
      "description": "Huawei Cloud Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-huawei-cloud-api",
      "npmDownloads": 8078,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-huawei-cloud-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using huawei-cloud-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor huawei-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale huawei-cloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "cloudflare-api-v4": {
      "name": "cloudflare-api-v4",
      "version": "2.2.1",
      "description": "Cloudflare Api V4 integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-cloudflare-api-v4",
      "npmDownloads": 4836,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-cloudflare-api-v4",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using cloudflare-api-v4",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor cloudflare-api-v4 resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale cloudflare-api-v4 resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "fastly-api": {
      "name": "fastly-api",
      "version": "1.8.16",
      "description": "Fastly Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-fastly-api",
      "npmDownloads": 2776,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-fastly-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fastly-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fastly-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "netlify-api": {
      "name": "netlify-api",
      "version": "1.6.17",
      "description": "Netlify Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-netlify-api",
      "npmDownloads": 1881,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-netlify-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using netlify-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor netlify-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale netlify-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "vercel-api": {
      "name": "vercel-api",
      "version": "3.5.19",
      "description": "Vercel Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-vercel-api",
      "npmDownloads": 6169,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-vercel-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using vercel-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor vercel-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale vercel-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "heroku-platform-api": {
      "name": "heroku-platform-api",
      "version": "2.6.18",
      "description": "Heroku Platform Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-heroku-platform-api",
      "npmDownloads": 8087,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-heroku-platform-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using heroku-platform-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor heroku-platform-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale heroku-platform-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "railway-api": {
      "name": "railway-api",
      "version": "1.8.19",
      "description": "Railway Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-railway-api",
      "npmDownloads": 2881,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-railway-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using railway-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor railway-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale railway-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "render-api": {
      "name": "render-api",
      "version": "3.6.12",
      "description": "Render Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-render-api",
      "npmDownloads": 6344,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-render-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using render-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor render-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale render-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "fly-io-api": {
      "name": "fly-io-api",
      "version": "1.0.10",
      "description": "Fly Io Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-fly-io-api",
      "npmDownloads": 4437,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-fly-io-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using fly-io-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor fly-io-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale fly-io-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "supabase-api": {
      "name": "supabase-api",
      "version": "3.5.15",
      "description": "Supabase Api integration server",
      "category": "database",
      "packageName": "mcp-server-supabase-api",
      "npmDownloads": 11640,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-supabase-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to supabase-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on supabase-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup supabase-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "planetscale-api": {
      "name": "planetscale-api",
      "version": "1.1.19",
      "description": "Planetscale Api integration server",
      "category": "database",
      "packageName": "mcp-server-planetscale-api",
      "npmDownloads": 3209,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-planetscale-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to planetscale-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on planetscale-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup planetscale-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "neon-api": {
      "name": "neon-api",
      "version": "1.3.11",
      "description": "Neon Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-neon-api",
      "npmDownloads": 7990,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-neon-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using neon-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor neon-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale neon-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "aws-amplify-api": {
      "name": "aws-amplify-api",
      "version": "3.1.5",
      "description": "Aws Amplify Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-aws-amplify-api",
      "npmDownloads": 1361,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-aws-amplify-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using aws-amplify-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor aws-amplify-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale aws-amplify-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "firebase-api": {
      "name": "firebase-api",
      "version": "2.2.2",
      "description": "Firebase Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-firebase-api",
      "npmDownloads": 7881,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-firebase-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using firebase-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor firebase-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale firebase-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "backblaze-b2-api": {
      "name": "backblaze-b2-api",
      "version": "2.9.9",
      "description": "Backblaze B2 Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-backblaze-b2-api",
      "npmDownloads": 1145,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-backblaze-b2-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using backblaze-b2-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor backblaze-b2-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale backblaze-b2-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "wasabi-api": {
      "name": "wasabi-api",
      "version": "2.9.1",
      "description": "Wasabi Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-wasabi-api",
      "npmDownloads": 2658,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-wasabi-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using wasabi-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor wasabi-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale wasabi-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "spaces-api": {
      "name": "spaces-api",
      "version": "1.8.3",
      "description": "Spaces Api integration server",
      "category": "cloud-infrastructure",
      "packageName": "mcp-server-spaces-api",
      "npmDownloads": 5478,
      "repositoryUrl": "https://github.com/cloud-infrastructure/mcp-server-spaces-api",
      "tools": {
        "deploy": {
          "name": "deploy",
          "description": "Deploy using spaces-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_type": {
                "type": "string",
                "description": "Resource type"
              },
              "config": {
                "type": "object",
                "description": "Deployment configuration"
              }
            },
            "required": [
              "resource_type",
              "config"
            ]
          }
        },
        "monitor": {
          "name": "monitor",
          "description": "Monitor spaces-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics"
              }
            },
            "required": [
              "resource_id"
            ]
          }
        },
        "scale": {
          "name": "scale",
          "description": "Scale spaces-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "resource_id": {
                "type": "string",
                "description": "Resource ID"
              },
              "target": {
                "type": "number",
                "description": "Target capacity"
              }
            },
            "required": [
              "resource_id",
              "target"
            ]
          }
        }
      }
    },
    "mysql-api": {
      "name": "mysql-api",
      "version": "3.7.19",
      "description": "Mysql Api integration server",
      "category": "database",
      "packageName": "mcp-server-mysql-api",
      "npmDownloads": 3654,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-mysql-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to mysql-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on mysql-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup mysql-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "postgresql-api": {
      "name": "postgresql-api",
      "version": "1.3.16",
      "description": "Postgresql Api integration server",
      "category": "database",
      "packageName": "mcp-server-postgresql-api",
      "npmDownloads": 4145,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-postgresql-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to postgresql-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on postgresql-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup postgresql-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "mariadb-api": {
      "name": "mariadb-api",
      "version": "3.9.11",
      "description": "Mariadb Api integration server",
      "category": "database",
      "packageName": "mcp-server-mariadb-api",
      "npmDownloads": 20622,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-mariadb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to mariadb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on mariadb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup mariadb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "mssql-api": {
      "name": "mssql-api",
      "version": "3.0.7",
      "description": "Mssql Api integration server",
      "category": "database",
      "packageName": "mcp-server-mssql-api",
      "npmDownloads": 3792,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-mssql-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to mssql-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on mssql-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup mssql-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "oracle-api": {
      "name": "oracle-api",
      "version": "1.0.15",
      "description": "Oracle Api integration server",
      "category": "database",
      "packageName": "mcp-server-oracle-api",
      "npmDownloads": 22718,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-oracle-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to oracle-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on oracle-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup oracle-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "sqlite-api": {
      "name": "sqlite-api",
      "version": "2.9.2",
      "description": "Sqlite Api integration server",
      "category": "database",
      "packageName": "mcp-server-sqlite-api",
      "npmDownloads": 1955,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-sqlite-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to sqlite-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on sqlite-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup sqlite-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "cockroachdb-api": {
      "name": "cockroachdb-api",
      "version": "1.5.12",
      "description": "Cockroachdb Api integration server",
      "category": "database",
      "packageName": "mcp-server-cockroachdb-api",
      "npmDownloads": 13493,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-cockroachdb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to cockroachdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on cockroachdb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup cockroachdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "yugabytedb-api": {
      "name": "yugabytedb-api",
      "version": "1.6.11",
      "description": "Yugabytedb Api integration server",
      "category": "database",
      "packageName": "mcp-server-yugabytedb-api",
      "npmDownloads": 15436,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-yugabytedb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to yugabytedb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on yugabytedb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup yugabytedb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "neon-postgres-api": {
      "name": "neon-postgres-api",
      "version": "2.2.12",
      "description": "Neon Postgres Api integration server",
      "category": "database",
      "packageName": "mcp-server-neon-postgres-api",
      "npmDownloads": 18305,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-neon-postgres-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to neon-postgres-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on neon-postgres-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup neon-postgres-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "railway-postgres-api": {
      "name": "railway-postgres-api",
      "version": "1.5.2",
      "description": "Railway Postgres Api integration server",
      "category": "database",
      "packageName": "mcp-server-railway-postgres-api",
      "npmDownloads": 7308,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-railway-postgres-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to railway-postgres-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on railway-postgres-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup railway-postgres-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "render-postgres-api": {
      "name": "render-postgres-api",
      "version": "1.7.8",
      "description": "Render Postgres Api integration server",
      "category": "database",
      "packageName": "mcp-server-render-postgres-api",
      "npmDownloads": 8774,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-render-postgres-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to render-postgres-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on render-postgres-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup render-postgres-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "heroku-postgres-api": {
      "name": "heroku-postgres-api",
      "version": "1.9.2",
      "description": "Heroku Postgres Api integration server",
      "category": "database",
      "packageName": "mcp-server-heroku-postgres-api",
      "npmDownloads": 12237,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-heroku-postgres-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to heroku-postgres-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on heroku-postgres-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup heroku-postgres-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "digitalocean-databases-api": {
      "name": "digitalocean-databases-api",
      "version": "1.7.15",
      "description": "Digitalocean Databases Api integration server",
      "category": "database",
      "packageName": "mcp-server-digitalocean-databases-api",
      "npmDownloads": 3449,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-digitalocean-databases-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to digitalocean-databases-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on digitalocean-databases-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup digitalocean-databases-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "timescaledb-api": {
      "name": "timescaledb-api",
      "version": "3.1.18",
      "description": "Timescaledb Api integration server",
      "category": "database",
      "packageName": "mcp-server-timescaledb-api",
      "npmDownloads": 13200,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-timescaledb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to timescaledb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on timescaledb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup timescaledb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "citusdata-api": {
      "name": "citusdata-api",
      "version": "2.8.2",
      "description": "Citusdata Api integration server",
      "category": "database",
      "packageName": "mcp-server-citusdata-api",
      "npmDownloads": 12573,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-citusdata-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to citusdata-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on citusdata-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup citusdata-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "snowflake-api": {
      "name": "snowflake-api",
      "version": "1.4.5",
      "description": "Snowflake Api integration server",
      "category": "database",
      "packageName": "mcp-server-snowflake-api",
      "npmDownloads": 8022,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-snowflake-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to snowflake-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on snowflake-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup snowflake-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "bigquery-api": {
      "name": "bigquery-api",
      "version": "1.2.3",
      "description": "Bigquery Api integration server",
      "category": "database",
      "packageName": "mcp-server-bigquery-api",
      "npmDownloads": 12082,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-bigquery-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to bigquery-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on bigquery-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup bigquery-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "redshift-api": {
      "name": "redshift-api",
      "version": "1.7.11",
      "description": "Redshift Api integration server",
      "category": "database",
      "packageName": "mcp-server-redshift-api",
      "npmDownloads": 9471,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-redshift-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to redshift-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on redshift-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup redshift-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "clickhouse-api": {
      "name": "clickhouse-api",
      "version": "2.9.12",
      "description": "Clickhouse Api integration server",
      "category": "database",
      "packageName": "mcp-server-clickhouse-api",
      "npmDownloads": 10030,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-clickhouse-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to clickhouse-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on clickhouse-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup clickhouse-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "vertica-api": {
      "name": "vertica-api",
      "version": "3.5.15",
      "description": "Vertica Api integration server",
      "category": "database",
      "packageName": "mcp-server-vertica-api",
      "npmDownloads": 8038,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-vertica-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to vertica-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on vertica-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup vertica-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "teradata-api": {
      "name": "teradata-api",
      "version": "1.5.16",
      "description": "Teradata Api integration server",
      "category": "database",
      "packageName": "mcp-server-teradata-api",
      "npmDownloads": 3741,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-teradata-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to teradata-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on teradata-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup teradata-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "sap-hana-api": {
      "name": "sap-hana-api",
      "version": "3.0.12",
      "description": "Sap Hana Api integration server",
      "category": "database",
      "packageName": "mcp-server-sap-hana-api",
      "npmDownloads": 5786,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-sap-hana-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to sap-hana-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on sap-hana-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup sap-hana-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "db2-api": {
      "name": "db2-api",
      "version": "1.0.11",
      "description": "Db2 Api integration server",
      "category": "database",
      "packageName": "mcp-server-db2-api",
      "npmDownloads": 14034,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-db2-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to db2-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on db2-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup db2-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "informix-api": {
      "name": "informix-api",
      "version": "2.4.14",
      "description": "Informix Api integration server",
      "category": "database",
      "packageName": "mcp-server-informix-api",
      "npmDownloads": 13198,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-informix-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to informix-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on informix-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup informix-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "sybase-api": {
      "name": "sybase-api",
      "version": "3.5.8",
      "description": "Sybase Api integration server",
      "category": "database",
      "packageName": "mcp-server-sybase-api",
      "npmDownloads": 15302,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-sybase-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to sybase-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on sybase-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup sybase-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "mongodb-api": {
      "name": "mongodb-api",
      "version": "1.1.18",
      "description": "Mongodb Api integration server",
      "category": "database",
      "packageName": "mcp-server-mongodb-api",
      "npmDownloads": 9164,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-mongodb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to mongodb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on mongodb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup mongodb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "redis-api": {
      "name": "redis-api",
      "version": "2.1.16",
      "description": "Redis Api integration server",
      "category": "database",
      "packageName": "mcp-server-redis-api",
      "npmDownloads": 14293,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-redis-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to redis-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on redis-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup redis-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "cassandra-api": {
      "name": "cassandra-api",
      "version": "3.8.14",
      "description": "Cassandra Api integration server",
      "category": "database",
      "packageName": "mcp-server-cassandra-api",
      "npmDownloads": 10236,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-cassandra-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to cassandra-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on cassandra-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup cassandra-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "couchbase-api": {
      "name": "couchbase-api",
      "version": "1.2.9",
      "description": "Couchbase Api integration server",
      "category": "database",
      "packageName": "mcp-server-couchbase-api",
      "npmDownloads": 6185,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-couchbase-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to couchbase-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on couchbase-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup couchbase-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "couchdb-api": {
      "name": "couchdb-api",
      "version": "1.6.12",
      "description": "Couchdb Api integration server",
      "category": "database",
      "packageName": "mcp-server-couchdb-api",
      "npmDownloads": 13530,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-couchdb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to couchdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on couchdb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup couchdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "neo4j-api": {
      "name": "neo4j-api",
      "version": "3.7.15",
      "description": "Neo4j Api integration server",
      "category": "database",
      "packageName": "mcp-server-neo4j-api",
      "npmDownloads": 12029,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-neo4j-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to neo4j-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on neo4j-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup neo4j-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "arangodb-api": {
      "name": "arangodb-api",
      "version": "1.9.12",
      "description": "Arangodb Api integration server",
      "category": "database",
      "packageName": "mcp-server-arangodb-api",
      "npmDownloads": 1201,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-arangodb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to arangodb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on arangodb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup arangodb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "orientdb-api": {
      "name": "orientdb-api",
      "version": "2.1.19",
      "description": "Orientdb Api integration server",
      "category": "database",
      "packageName": "mcp-server-orientdb-api",
      "npmDownloads": 2471,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-orientdb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to orientdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on orientdb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup orientdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "amazon-dynamodb-api": {
      "name": "amazon-dynamodb-api",
      "version": "3.1.8",
      "description": "Amazon Dynamodb Api integration server",
      "category": "database",
      "packageName": "mcp-server-amazon-dynamodb-api",
      "npmDownloads": 9005,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-amazon-dynamodb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to amazon-dynamodb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on amazon-dynamodb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup amazon-dynamodb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "google-firestore-api": {
      "name": "google-firestore-api",
      "version": "2.6.5",
      "description": "Google Firestore Api integration server",
      "category": "database",
      "packageName": "mcp-server-google-firestore-api",
      "npmDownloads": 10354,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-google-firestore-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to google-firestore-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on google-firestore-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup google-firestore-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "rethinkdb-api": {
      "name": "rethinkdb-api",
      "version": "2.4.0",
      "description": "Rethinkdb Api integration server",
      "category": "database",
      "packageName": "mcp-server-rethinkdb-api",
      "npmDownloads": 7927,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-rethinkdb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to rethinkdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on rethinkdb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup rethinkdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "amazon-documentdb-api": {
      "name": "amazon-documentdb-api",
      "version": "1.0.6",
      "description": "Amazon Documentdb Api integration server",
      "category": "database",
      "packageName": "mcp-server-amazon-documentdb-api",
      "npmDownloads": 6039,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-amazon-documentdb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to amazon-documentdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on amazon-documentdb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup amazon-documentdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "azure-table-api": {
      "name": "azure-table-api",
      "version": "1.8.8",
      "description": "Azure Table Api integration server",
      "category": "database",
      "packageName": "mcp-server-azure-table-api",
      "npmDownloads": 835,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-azure-table-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to azure-table-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on azure-table-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup azure-table-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "google-bigtable-api": {
      "name": "google-bigtable-api",
      "version": "1.6.16",
      "description": "Google Bigtable Api integration server",
      "category": "database",
      "packageName": "mcp-server-google-bigtable-api",
      "npmDownloads": 2183,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-google-bigtable-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to google-bigtable-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on google-bigtable-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup google-bigtable-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "amazon-keyspaces-api": {
      "name": "amazon-keyspaces-api",
      "version": "2.9.1",
      "description": "Amazon Keyspaces Api integration server",
      "category": "database",
      "packageName": "mcp-server-amazon-keyspaces-api",
      "npmDownloads": 10534,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-amazon-keyspaces-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to amazon-keyspaces-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on amazon-keyspaces-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup amazon-keyspaces-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "datastax-astra-api": {
      "name": "datastax-astra-api",
      "version": "1.6.19",
      "description": "Datastax Astra Api integration server",
      "category": "database",
      "packageName": "mcp-server-datastax-astra-api",
      "npmDownloads": 8110,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-datastax-astra-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to datastax-astra-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on datastax-astra-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup datastax-astra-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "scylladb-api": {
      "name": "scylladb-api",
      "version": "3.3.9",
      "description": "Scylladb Api integration server",
      "category": "database",
      "packageName": "mcp-server-scylladb-api",
      "npmDownloads": 9293,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-scylladb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to scylladb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on scylladb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup scylladb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "riak-api": {
      "name": "riak-api",
      "version": "2.4.15",
      "description": "Riak Api integration server",
      "category": "database",
      "packageName": "mcp-server-riak-api",
      "npmDownloads": 9455,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-riak-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to riak-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on riak-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup riak-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "voldemort-api": {
      "name": "voldemort-api",
      "version": "2.1.2",
      "description": "Voldemort Api integration server",
      "category": "database",
      "packageName": "mcp-server-voldemort-api",
      "npmDownloads": 6660,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-voldemort-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to voldemort-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on voldemort-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup voldemort-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "amazon-neptune-api": {
      "name": "amazon-neptune-api",
      "version": "1.3.18",
      "description": "Amazon Neptune Api integration server",
      "category": "database",
      "packageName": "mcp-server-amazon-neptune-api",
      "npmDownloads": 6789,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-amazon-neptune-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to amazon-neptune-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on amazon-neptune-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup amazon-neptune-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "tigergraph-api": {
      "name": "tigergraph-api",
      "version": "3.7.18",
      "description": "Tigergraph Api integration server",
      "category": "database",
      "packageName": "mcp-server-tigergraph-api",
      "npmDownloads": 1918,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-tigergraph-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to tigergraph-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on tigergraph-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup tigergraph-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "dgraph-api": {
      "name": "dgraph-api",
      "version": "2.4.8",
      "description": "Dgraph Api integration server",
      "category": "database",
      "packageName": "mcp-server-dgraph-api",
      "npmDownloads": 7313,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-dgraph-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to dgraph-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on dgraph-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup dgraph-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "janusgraph-api": {
      "name": "janusgraph-api",
      "version": "2.2.1",
      "description": "Janusgraph Api integration server",
      "category": "database",
      "packageName": "mcp-server-janusgraph-api",
      "npmDownloads": 6669,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-janusgraph-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to janusgraph-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on janusgraph-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup janusgraph-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "amazon-qldb-api": {
      "name": "amazon-qldb-api",
      "version": "3.5.3",
      "description": "Amazon Qldb Api integration server",
      "category": "database",
      "packageName": "mcp-server-amazon-qldb-api",
      "npmDownloads": 2961,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-amazon-qldb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to amazon-qldb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on amazon-qldb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup amazon-qldb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "elasticsearch-api": {
      "name": "elasticsearch-api",
      "version": "1.9.8",
      "description": "Elasticsearch Api integration server",
      "category": "database",
      "packageName": "mcp-server-elasticsearch-api",
      "npmDownloads": 5205,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-elasticsearch-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to elasticsearch-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on elasticsearch-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup elasticsearch-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "opensearch-api": {
      "name": "opensearch-api",
      "version": "3.1.2",
      "description": "Opensearch Api integration server",
      "category": "database",
      "packageName": "mcp-server-opensearch-api",
      "npmDownloads": 6729,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-opensearch-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to opensearch-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on opensearch-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup opensearch-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "solr-api": {
      "name": "solr-api",
      "version": "2.6.14",
      "description": "Solr Api integration server",
      "category": "database",
      "packageName": "mcp-server-solr-api",
      "npmDownloads": 4774,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-solr-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to solr-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on solr-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup solr-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "sphinx-api": {
      "name": "sphinx-api",
      "version": "3.1.18",
      "description": "Sphinx Api integration server",
      "category": "database",
      "packageName": "mcp-server-sphinx-api",
      "npmDownloads": 4754,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-sphinx-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to sphinx-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on sphinx-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup sphinx-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "meilisearch-api": {
      "name": "meilisearch-api",
      "version": "3.2.14",
      "description": "Meilisearch Api integration server",
      "category": "database",
      "packageName": "mcp-server-meilisearch-api",
      "npmDownloads": 7453,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-meilisearch-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to meilisearch-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on meilisearch-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup meilisearch-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "typesense-api": {
      "name": "typesense-api",
      "version": "3.3.0",
      "description": "Typesense Api integration server",
      "category": "database",
      "packageName": "mcp-server-typesense-api",
      "npmDownloads": 1783,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-typesense-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to typesense-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on typesense-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup typesense-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "algolia-api": {
      "name": "algolia-api",
      "version": "1.8.8",
      "description": "Algolia Api integration server",
      "category": "database",
      "packageName": "mcp-server-algolia-api",
      "npmDownloads": 6406,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-algolia-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to algolia-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on algolia-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup algolia-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "swiftype-api": {
      "name": "swiftype-api",
      "version": "2.4.14",
      "description": "Swiftype Api integration server",
      "category": "database",
      "packageName": "mcp-server-swiftype-api",
      "npmDownloads": 3276,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-swiftype-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to swiftype-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on swiftype-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup swiftype-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "amazon-cloudsearch-api": {
      "name": "amazon-cloudsearch-api",
      "version": "1.6.14",
      "description": "Amazon Cloudsearch Api integration server",
      "category": "database",
      "packageName": "mcp-server-amazon-cloudsearch-api",
      "npmDownloads": 5026,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-amazon-cloudsearch-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to amazon-cloudsearch-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on amazon-cloudsearch-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup amazon-cloudsearch-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "azure-search-api": {
      "name": "azure-search-api",
      "version": "3.6.13",
      "description": "Azure Search Api integration server",
      "category": "database",
      "packageName": "mcp-server-azure-search-api",
      "npmDownloads": 2359,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-azure-search-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to azure-search-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on azure-search-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup azure-search-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "influxdb-api": {
      "name": "influxdb-api",
      "version": "2.7.1",
      "description": "Influxdb Api integration server",
      "category": "database",
      "packageName": "mcp-server-influxdb-api",
      "npmDownloads": 972,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-influxdb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to influxdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on influxdb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup influxdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "prometheus-api": {
      "name": "prometheus-api",
      "version": "3.4.9",
      "description": "Prometheus Api integration server",
      "category": "database",
      "packageName": "mcp-server-prometheus-api",
      "npmDownloads": 3405,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-prometheus-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to prometheus-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on prometheus-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup prometheus-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "questdb-api": {
      "name": "questdb-api",
      "version": "1.6.17",
      "description": "Questdb Api integration server",
      "category": "database",
      "packageName": "mcp-server-questdb-api",
      "npmDownloads": 4959,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-questdb-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to questdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on questdb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup questdb-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "victoriametrics-api": {
      "name": "victoriametrics-api",
      "version": "3.1.4",
      "description": "Victoriametrics Api integration server",
      "category": "database",
      "packageName": "mcp-server-victoriametrics-api",
      "npmDownloads": 5533,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-victoriametrics-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to victoriametrics-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on victoriametrics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup victoriametrics-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "amazon-timestream-api": {
      "name": "amazon-timestream-api",
      "version": "1.6.13",
      "description": "Amazon Timestream Api integration server",
      "category": "database",
      "packageName": "mcp-server-amazon-timestream-api",
      "npmDownloads": 1204,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-amazon-timestream-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to amazon-timestream-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on amazon-timestream-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup amazon-timestream-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "azure-data-explorer-api": {
      "name": "azure-data-explorer-api",
      "version": "3.7.9",
      "description": "Azure Data Explorer Api integration server",
      "category": "database",
      "packageName": "mcp-server-azure-data-explorer-api",
      "npmDownloads": 4778,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-azure-data-explorer-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to azure-data-explorer-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on azure-data-explorer-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup azure-data-explorer-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "memcached-api": {
      "name": "memcached-api",
      "version": "1.8.2",
      "description": "Memcached Api integration server",
      "category": "database",
      "packageName": "mcp-server-memcached-api",
      "npmDownloads": 2879,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-memcached-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to memcached-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on memcached-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup memcached-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "hazelcast-api": {
      "name": "hazelcast-api",
      "version": "3.5.2",
      "description": "Hazelcast Api integration server",
      "category": "database",
      "packageName": "mcp-server-hazelcast-api",
      "npmDownloads": 5478,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-hazelcast-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to hazelcast-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on hazelcast-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup hazelcast-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "apache-ignite-api": {
      "name": "apache-ignite-api",
      "version": "1.8.9",
      "description": "Apache Ignite Api integration server",
      "category": "database",
      "packageName": "mcp-server-apache-ignite-api",
      "npmDownloads": 5863,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-apache-ignite-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to apache-ignite-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on apache-ignite-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup apache-ignite-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "gridgain-api": {
      "name": "gridgain-api",
      "version": "3.7.5",
      "description": "Gridgain Api integration server",
      "category": "database",
      "packageName": "mcp-server-gridgain-api",
      "npmDownloads": 6329,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-gridgain-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to gridgain-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on gridgain-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup gridgain-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "coherence-api": {
      "name": "coherence-api",
      "version": "1.0.7",
      "description": "Coherence Api integration server",
      "category": "database",
      "packageName": "mcp-server-coherence-api",
      "npmDownloads": 903,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-coherence-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to coherence-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on coherence-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup coherence-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "ehcache-api": {
      "name": "ehcache-api",
      "version": "3.6.9",
      "description": "Ehcache Api integration server",
      "category": "database",
      "packageName": "mcp-server-ehcache-api",
      "npmDownloads": 3651,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-ehcache-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to ehcache-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on ehcache-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup ehcache-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "infinispan-api": {
      "name": "infinispan-api",
      "version": "2.6.1",
      "description": "Infinispan Api integration server",
      "category": "database",
      "packageName": "mcp-server-infinispan-api",
      "npmDownloads": 6231,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-infinispan-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to infinispan-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on infinispan-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup infinispan-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "gemfire-api": {
      "name": "gemfire-api",
      "version": "2.2.17",
      "description": "Gemfire Api integration server",
      "category": "database",
      "packageName": "mcp-server-gemfire-api",
      "npmDownloads": 5805,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-gemfire-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to gemfire-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on gemfire-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup gemfire-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "aerospike-api": {
      "name": "aerospike-api",
      "version": "3.5.5",
      "description": "Aerospike Api integration server",
      "category": "database",
      "packageName": "mcp-server-aerospike-api",
      "npmDownloads": 2684,
      "repositoryUrl": "https://github.com/database-connectors/mcp-server-aerospike-api",
      "tools": {
        "connect": {
          "name": "connect",
          "description": "Connect to aerospike-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "connection_string": {
                "type": "string",
                "description": "Connection string"
              }
            },
            "required": [
              "connection_string"
            ]
          }
        },
        "query": {
          "name": "query",
          "description": "Execute query on aerospike-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "sql": {
                "type": "string",
                "description": "SQL query"
              },
              "params": {
                "type": "array",
                "description": "Query parameters"
              }
            },
            "required": [
              "sql"
            ]
          }
        },
        "backup": {
          "name": "backup",
          "description": "Backup aerospike-api database",
          "inputSchema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Backup location"
              }
            },
            "required": [
              "location"
            ]
          }
        }
      }
    },
    "newrelic-api": {
      "name": "newrelic-api",
      "version": "1.1.7",
      "description": "Newrelic Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-newrelic-api",
      "npmDownloads": 14526,
      "repositoryUrl": "https://github.com/observability/mcp-server-newrelic-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from newrelic-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List newrelic-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "datadog-api": {
      "name": "datadog-api",
      "version": "1.9.6",
      "description": "Datadog Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-datadog-api",
      "npmDownloads": 3034,
      "repositoryUrl": "https://github.com/observability/mcp-server-datadog-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from datadog-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List datadog-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "dynatrace-api": {
      "name": "dynatrace-api",
      "version": "3.8.6",
      "description": "Dynatrace Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-dynatrace-api",
      "npmDownloads": 18624,
      "repositoryUrl": "https://github.com/observability/mcp-server-dynatrace-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from dynatrace-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List dynatrace-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "appdynamics-api": {
      "name": "appdynamics-api",
      "version": "3.0.9",
      "description": "Appdynamics Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-appdynamics-api",
      "npmDownloads": 3939,
      "repositoryUrl": "https://github.com/observability/mcp-server-appdynamics-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from appdynamics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List appdynamics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "splunk-api": {
      "name": "splunk-api",
      "version": "2.4.16",
      "description": "Splunk Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-splunk-api",
      "npmDownloads": 9589,
      "repositoryUrl": "https://github.com/observability/mcp-server-splunk-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from splunk-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List splunk-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "elastic-apm-api": {
      "name": "elastic-apm-api",
      "version": "2.7.5",
      "description": "Elastic Apm Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-elastic-apm-api",
      "npmDownloads": 3789,
      "repositoryUrl": "https://github.com/observability/mcp-server-elastic-apm-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from elastic-apm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List elastic-apm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "jaeger-api": {
      "name": "jaeger-api",
      "version": "2.3.8",
      "description": "Jaeger Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-jaeger-api",
      "npmDownloads": 7515,
      "repositoryUrl": "https://github.com/observability/mcp-server-jaeger-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from jaeger-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List jaeger-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "zipkin-api": {
      "name": "zipkin-api",
      "version": "1.3.12",
      "description": "Zipkin Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-zipkin-api",
      "npmDownloads": 5081,
      "repositoryUrl": "https://github.com/observability/mcp-server-zipkin-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from zipkin-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List zipkin-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "opencensus-api": {
      "name": "opencensus-api",
      "version": "3.8.12",
      "description": "Opencensus Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-opencensus-api",
      "npmDownloads": 7024,
      "repositoryUrl": "https://github.com/observability/mcp-server-opencensus-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from opencensus-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List opencensus-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "opentelemetry-api": {
      "name": "opentelemetry-api",
      "version": "2.2.8",
      "description": "Opentelemetry Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-opentelemetry-api",
      "npmDownloads": 17363,
      "repositoryUrl": "https://github.com/observability/mcp-server-opentelemetry-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from opentelemetry-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List opentelemetry-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "lightstep-api": {
      "name": "lightstep-api",
      "version": "3.2.14",
      "description": "Lightstep Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-lightstep-api",
      "npmDownloads": 16790,
      "repositoryUrl": "https://github.com/observability/mcp-server-lightstep-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from lightstep-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List lightstep-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "instana-api": {
      "name": "instana-api",
      "version": "1.3.15",
      "description": "Instana Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-instana-api",
      "npmDownloads": 11908,
      "repositoryUrl": "https://github.com/observability/mcp-server-instana-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from instana-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List instana-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pingdom-api": {
      "name": "pingdom-api",
      "version": "1.0.9",
      "description": "Pingdom Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-pingdom-api",
      "npmDownloads": 7346,
      "repositoryUrl": "https://github.com/observability/mcp-server-pingdom-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pingdom-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pingdom-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "uptimerobot-api": {
      "name": "uptimerobot-api",
      "version": "3.7.1",
      "description": "Uptimerobot Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-uptimerobot-api",
      "npmDownloads": 2641,
      "repositoryUrl": "https://github.com/observability/mcp-server-uptimerobot-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from uptimerobot-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List uptimerobot-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "site24x7-api": {
      "name": "site24x7-api",
      "version": "2.5.6",
      "description": "Site24x7 Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-site24x7-api",
      "npmDownloads": 6835,
      "repositoryUrl": "https://github.com/observability/mcp-server-site24x7-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from site24x7-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List site24x7-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "statuspage-api": {
      "name": "statuspage-api",
      "version": "1.3.13",
      "description": "Statuspage Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-statuspage-api",
      "npmDownloads": 2607,
      "repositoryUrl": "https://github.com/observability/mcp-server-statuspage-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from statuspage-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List statuspage-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pagerduty-api": {
      "name": "pagerduty-api",
      "version": "1.9.13",
      "description": "Pagerduty Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-pagerduty-api",
      "npmDownloads": 3999,
      "repositoryUrl": "https://github.com/observability/mcp-server-pagerduty-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pagerduty-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pagerduty-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "opsgenie-api": {
      "name": "opsgenie-api",
      "version": "2.2.3",
      "description": "Opsgenie Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-opsgenie-api",
      "npmDownloads": 14662,
      "repositoryUrl": "https://github.com/observability/mcp-server-opsgenie-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from opsgenie-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List opsgenie-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "victorops-api": {
      "name": "victorops-api",
      "version": "3.4.17",
      "description": "Victorops Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-victorops-api",
      "npmDownloads": 2150,
      "repositoryUrl": "https://github.com/observability/mcp-server-victorops-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from victorops-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List victorops-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "xmatters-api": {
      "name": "xmatters-api",
      "version": "3.8.15",
      "description": "Xmatters Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-xmatters-api",
      "npmDownloads": 12522,
      "repositoryUrl": "https://github.com/observability/mcp-server-xmatters-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from xmatters-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List xmatters-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "honeycomb-api": {
      "name": "honeycomb-api",
      "version": "3.2.17",
      "description": "Honeycomb Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-honeycomb-api",
      "npmDownloads": 11247,
      "repositoryUrl": "https://github.com/observability/mcp-server-honeycomb-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from honeycomb-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List honeycomb-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "observiq-api": {
      "name": "observiq-api",
      "version": "2.9.4",
      "description": "Observiq Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-observiq-api",
      "npmDownloads": 5742,
      "repositoryUrl": "https://github.com/observability/mcp-server-observiq-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from observiq-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List observiq-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "splunk-hec-api": {
      "name": "splunk-hec-api",
      "version": "3.8.3",
      "description": "Splunk Hec Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-splunk-hec-api",
      "npmDownloads": 10218,
      "repositoryUrl": "https://github.com/observability/mcp-server-splunk-hec-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from splunk-hec-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List splunk-hec-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "elasticsearch-logging-api": {
      "name": "elasticsearch-logging-api",
      "version": "1.3.18",
      "description": "Elasticsearch Logging Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-elasticsearch-logging-api",
      "npmDownloads": 14418,
      "repositoryUrl": "https://github.com/observability/mcp-server-elasticsearch-logging-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from elasticsearch-logging-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List elasticsearch-logging-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "logstash-api": {
      "name": "logstash-api",
      "version": "3.5.13",
      "description": "Logstash Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-logstash-api",
      "npmDownloads": 13103,
      "repositoryUrl": "https://github.com/observability/mcp-server-logstash-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from logstash-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List logstash-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fluentd-api": {
      "name": "fluentd-api",
      "version": "2.3.5",
      "description": "Fluentd Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-fluentd-api",
      "npmDownloads": 10444,
      "repositoryUrl": "https://github.com/observability/mcp-server-fluentd-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fluentd-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fluentd-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fluentbit-api": {
      "name": "fluentbit-api",
      "version": "3.4.19",
      "description": "Fluentbit Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-fluentbit-api",
      "npmDownloads": 13228,
      "repositoryUrl": "https://github.com/observability/mcp-server-fluentbit-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fluentbit-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fluentbit-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "graylog-api": {
      "name": "graylog-api",
      "version": "2.3.18",
      "description": "Graylog Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-graylog-api",
      "npmDownloads": 5310,
      "repositoryUrl": "https://github.com/observability/mcp-server-graylog-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from graylog-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List graylog-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "papertrail-api": {
      "name": "papertrail-api",
      "version": "3.0.10",
      "description": "Papertrail Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-papertrail-api",
      "npmDownloads": 6841,
      "repositoryUrl": "https://github.com/observability/mcp-server-papertrail-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from papertrail-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List papertrail-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "loggly-api": {
      "name": "loggly-api",
      "version": "1.8.15",
      "description": "Loggly Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-loggly-api",
      "npmDownloads": 7511,
      "repositoryUrl": "https://github.com/observability/mcp-server-loggly-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from loggly-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List loggly-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sumologic-api": {
      "name": "sumologic-api",
      "version": "1.7.6",
      "description": "Sumologic Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-sumologic-api",
      "npmDownloads": 4316,
      "repositoryUrl": "https://github.com/observability/mcp-server-sumologic-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sumologic-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sumologic-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "logzio-api": {
      "name": "logzio-api",
      "version": "1.2.15",
      "description": "Logzio Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-logzio-api",
      "npmDownloads": 1636,
      "repositoryUrl": "https://github.com/observability/mcp-server-logzio-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from logzio-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List logzio-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "coralogix-api": {
      "name": "coralogix-api",
      "version": "2.9.12",
      "description": "Coralogix Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-coralogix-api",
      "npmDownloads": 10709,
      "repositoryUrl": "https://github.com/observability/mcp-server-coralogix-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from coralogix-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List coralogix-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "humio-api": {
      "name": "humio-api",
      "version": "3.4.6",
      "description": "Humio Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-humio-api",
      "npmDownloads": 11547,
      "repositoryUrl": "https://github.com/observability/mcp-server-humio-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from humio-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List humio-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cribl-api": {
      "name": "cribl-api",
      "version": "1.2.0",
      "description": "Cribl Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-cribl-api",
      "npmDownloads": 4149,
      "repositoryUrl": "https://github.com/observability/mcp-server-cribl-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cribl-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cribl-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "vector-api": {
      "name": "vector-api",
      "version": "1.5.12",
      "description": "Vector Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-vector-api",
      "npmDownloads": 2190,
      "repositoryUrl": "https://github.com/observability/mcp-server-vector-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from vector-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List vector-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "rsyslog-api": {
      "name": "rsyslog-api",
      "version": "3.9.19",
      "description": "Rsyslog Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-rsyslog-api",
      "npmDownloads": 4053,
      "repositoryUrl": "https://github.com/observability/mcp-server-rsyslog-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from rsyslog-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List rsyslog-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "syslogng-api": {
      "name": "syslogng-api",
      "version": "1.7.17",
      "description": "Syslogng Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-syslogng-api",
      "npmDownloads": 10505,
      "repositoryUrl": "https://github.com/observability/mcp-server-syslogng-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from syslogng-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List syslogng-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "journald-api": {
      "name": "journald-api",
      "version": "1.0.6",
      "description": "Journald Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-journald-api",
      "npmDownloads": 9216,
      "repositoryUrl": "https://github.com/observability/mcp-server-journald-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from journald-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List journald-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "winston-api": {
      "name": "winston-api",
      "version": "1.1.13",
      "description": "Winston Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-winston-api",
      "npmDownloads": 1759,
      "repositoryUrl": "https://github.com/observability/mcp-server-winston-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from winston-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List winston-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "bunyan-api": {
      "name": "bunyan-api",
      "version": "3.0.13",
      "description": "Bunyan Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-bunyan-api",
      "npmDownloads": 4830,
      "repositoryUrl": "https://github.com/observability/mcp-server-bunyan-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from bunyan-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List bunyan-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pino-api": {
      "name": "pino-api",
      "version": "3.5.15",
      "description": "Pino Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-pino-api",
      "npmDownloads": 3310,
      "repositoryUrl": "https://github.com/observability/mcp-server-pino-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pino-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pino-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "aws-cloudwatch-logs-api": {
      "name": "aws-cloudwatch-logs-api",
      "version": "2.0.18",
      "description": "Aws Cloudwatch Logs Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-aws-cloudwatch-logs-api",
      "npmDownloads": 7152,
      "repositoryUrl": "https://github.com/observability/mcp-server-aws-cloudwatch-logs-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aws-cloudwatch-logs-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aws-cloudwatch-logs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "azure-monitor-logs-api": {
      "name": "azure-monitor-logs-api",
      "version": "1.0.7",
      "description": "Azure Monitor Logs Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-azure-monitor-logs-api",
      "npmDownloads": 7122,
      "repositoryUrl": "https://github.com/observability/mcp-server-azure-monitor-logs-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from azure-monitor-logs-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List azure-monitor-logs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "loki-api": {
      "name": "loki-api",
      "version": "1.4.14",
      "description": "Loki Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-loki-api",
      "npmDownloads": 5113,
      "repositoryUrl": "https://github.com/observability/mcp-server-loki-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from loki-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List loki-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "promtail-api": {
      "name": "promtail-api",
      "version": "1.4.12",
      "description": "Promtail Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-promtail-api",
      "npmDownloads": 5710,
      "repositoryUrl": "https://github.com/observability/mcp-server-promtail-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from promtail-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List promtail-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sentry-api": {
      "name": "sentry-api",
      "version": "2.5.5",
      "description": "Sentry Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-sentry-api",
      "npmDownloads": 6321,
      "repositoryUrl": "https://github.com/observability/mcp-server-sentry-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sentry-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sentry-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "bugsnag-api": {
      "name": "bugsnag-api",
      "version": "2.2.16",
      "description": "Bugsnag Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-bugsnag-api",
      "npmDownloads": 3274,
      "repositoryUrl": "https://github.com/observability/mcp-server-bugsnag-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from bugsnag-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List bugsnag-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "rollbar-api": {
      "name": "rollbar-api",
      "version": "2.2.6",
      "description": "Rollbar Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-rollbar-api",
      "npmDownloads": 7869,
      "repositoryUrl": "https://github.com/observability/mcp-server-rollbar-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from rollbar-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List rollbar-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "airbrake-api": {
      "name": "airbrake-api",
      "version": "2.4.12",
      "description": "Airbrake Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-airbrake-api",
      "npmDownloads": 3738,
      "repositoryUrl": "https://github.com/observability/mcp-server-airbrake-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from airbrake-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List airbrake-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "honeybadger-api": {
      "name": "honeybadger-api",
      "version": "3.7.15",
      "description": "Honeybadger Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-honeybadger-api",
      "npmDownloads": 6369,
      "repositoryUrl": "https://github.com/observability/mcp-server-honeybadger-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from honeybadger-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List honeybadger-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "raygun-api": {
      "name": "raygun-api",
      "version": "2.1.2",
      "description": "Raygun Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-raygun-api",
      "npmDownloads": 8709,
      "repositoryUrl": "https://github.com/observability/mcp-server-raygun-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from raygun-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List raygun-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "crashlytics-api": {
      "name": "crashlytics-api",
      "version": "1.5.16",
      "description": "Crashlytics Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-crashlytics-api",
      "npmDownloads": 3935,
      "repositoryUrl": "https://github.com/observability/mcp-server-crashlytics-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from crashlytics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List crashlytics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "instabug-api": {
      "name": "instabug-api",
      "version": "3.1.14",
      "description": "Instabug Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-instabug-api",
      "npmDownloads": 2719,
      "repositoryUrl": "https://github.com/observability/mcp-server-instabug-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from instabug-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List instabug-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "flurry-api": {
      "name": "flurry-api",
      "version": "2.0.5",
      "description": "Flurry Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-flurry-api",
      "npmDownloads": 1330,
      "repositoryUrl": "https://github.com/observability/mcp-server-flurry-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from flurry-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List flurry-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "amplitude-api": {
      "name": "amplitude-api",
      "version": "3.6.6",
      "description": "Amplitude Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-amplitude-api",
      "npmDownloads": 2045,
      "repositoryUrl": "https://github.com/observability/mcp-server-amplitude-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from amplitude-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List amplitude-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "mixpanel-api": {
      "name": "mixpanel-api",
      "version": "2.5.5",
      "description": "Mixpanel Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-mixpanel-api",
      "npmDownloads": 6821,
      "repositoryUrl": "https://github.com/observability/mcp-server-mixpanel-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from mixpanel-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List mixpanel-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "segment-api": {
      "name": "segment-api",
      "version": "2.5.11",
      "description": "Segment Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-segment-api",
      "npmDownloads": 4589,
      "repositoryUrl": "https://github.com/observability/mcp-server-segment-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from segment-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List segment-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "rudderstack-api": {
      "name": "rudderstack-api",
      "version": "1.0.17",
      "description": "Rudderstack Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-rudderstack-api",
      "npmDownloads": 2415,
      "repositoryUrl": "https://github.com/observability/mcp-server-rudderstack-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from rudderstack-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List rudderstack-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "snowplow-api": {
      "name": "snowplow-api",
      "version": "3.3.17",
      "description": "Snowplow Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-snowplow-api",
      "npmDownloads": 669,
      "repositoryUrl": "https://github.com/observability/mcp-server-snowplow-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from snowplow-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List snowplow-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "tableau-api": {
      "name": "tableau-api",
      "version": "3.3.17",
      "description": "Tableau Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-tableau-api",
      "npmDownloads": 4192,
      "repositoryUrl": "https://github.com/observability/mcp-server-tableau-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from tableau-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List tableau-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "powerbi-api": {
      "name": "powerbi-api",
      "version": "1.9.5",
      "description": "Powerbi Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-powerbi-api",
      "npmDownloads": 6667,
      "repositoryUrl": "https://github.com/observability/mcp-server-powerbi-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from powerbi-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List powerbi-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "looker-api": {
      "name": "looker-api",
      "version": "1.4.13",
      "description": "Looker Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-looker-api",
      "npmDownloads": 4235,
      "repositoryUrl": "https://github.com/observability/mcp-server-looker-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from looker-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List looker-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "qlik-api": {
      "name": "qlik-api",
      "version": "2.2.2",
      "description": "Qlik Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-qlik-api",
      "npmDownloads": 3978,
      "repositoryUrl": "https://github.com/observability/mcp-server-qlik-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from qlik-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List qlik-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sisense-api": {
      "name": "sisense-api",
      "version": "3.2.2",
      "description": "Sisense Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-sisense-api",
      "npmDownloads": 999,
      "repositoryUrl": "https://github.com/observability/mcp-server-sisense-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sisense-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sisense-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "domo-api": {
      "name": "domo-api",
      "version": "2.5.16",
      "description": "Domo Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-domo-api",
      "npmDownloads": 4320,
      "repositoryUrl": "https://github.com/observability/mcp-server-domo-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from domo-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List domo-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "chartio-api": {
      "name": "chartio-api",
      "version": "3.7.4",
      "description": "Chartio Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-chartio-api",
      "npmDownloads": 5008,
      "repositoryUrl": "https://github.com/observability/mcp-server-chartio-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from chartio-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List chartio-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "periscope-api": {
      "name": "periscope-api",
      "version": "3.4.15",
      "description": "Periscope Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-periscope-api",
      "npmDownloads": 2533,
      "repositoryUrl": "https://github.com/observability/mcp-server-periscope-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from periscope-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List periscope-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "metabase-api": {
      "name": "metabase-api",
      "version": "1.2.11",
      "description": "Metabase Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-metabase-api",
      "npmDownloads": 1005,
      "repositoryUrl": "https://github.com/observability/mcp-server-metabase-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from metabase-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List metabase-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "superset-api": {
      "name": "superset-api",
      "version": "3.1.19",
      "description": "Superset Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-superset-api",
      "npmDownloads": 5228,
      "repositoryUrl": "https://github.com/observability/mcp-server-superset-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from superset-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List superset-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "grafana-api": {
      "name": "grafana-api",
      "version": "2.7.16",
      "description": "Grafana Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-grafana-api",
      "npmDownloads": 1218,
      "repositoryUrl": "https://github.com/observability/mcp-server-grafana-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from grafana-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List grafana-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "kibana-api": {
      "name": "kibana-api",
      "version": "3.5.2",
      "description": "Kibana Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-kibana-api",
      "npmDownloads": 2641,
      "repositoryUrl": "https://github.com/observability/mcp-server-kibana-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from kibana-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List kibana-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "datadog-dashboards-api": {
      "name": "datadog-dashboards-api",
      "version": "2.2.15",
      "description": "Datadog Dashboards Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-datadog-dashboards-api",
      "npmDownloads": 4596,
      "repositoryUrl": "https://github.com/observability/mcp-server-datadog-dashboards-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from datadog-dashboards-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List datadog-dashboards-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "newrelic-insights-api": {
      "name": "newrelic-insights-api",
      "version": "1.6.17",
      "description": "Newrelic Insights Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-newrelic-insights-api",
      "npmDownloads": 5228,
      "repositoryUrl": "https://github.com/observability/mcp-server-newrelic-insights-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from newrelic-insights-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List newrelic-insights-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "splunk-viz-api": {
      "name": "splunk-viz-api",
      "version": "2.8.4",
      "description": "Splunk Viz Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-splunk-viz-api",
      "npmDownloads": 2491,
      "repositoryUrl": "https://github.com/observability/mcp-server-splunk-viz-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from splunk-viz-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List splunk-viz-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gcp-datastudio-api": {
      "name": "gcp-datastudio-api",
      "version": "1.3.12",
      "description": "Gcp Datastudio Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-gcp-datastudio-api",
      "npmDownloads": 5847,
      "repositoryUrl": "https://github.com/observability/mcp-server-gcp-datastudio-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from gcp-datastudio-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List gcp-datastudio-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "azure-powerbi-api": {
      "name": "azure-powerbi-api",
      "version": "3.2.1",
      "description": "Azure Powerbi Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-azure-powerbi-api",
      "npmDownloads": 4544,
      "repositoryUrl": "https://github.com/observability/mcp-server-azure-powerbi-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from azure-powerbi-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List azure-powerbi-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "thoughtspot-api": {
      "name": "thoughtspot-api",
      "version": "3.8.11",
      "description": "Thoughtspot Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-thoughtspot-api",
      "npmDownloads": 1788,
      "repositoryUrl": "https://github.com/observability/mcp-server-thoughtspot-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from thoughtspot-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List thoughtspot-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "palantir-api": {
      "name": "palantir-api",
      "version": "1.6.11",
      "description": "Palantir Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-palantir-api",
      "npmDownloads": 4411,
      "repositoryUrl": "https://github.com/observability/mcp-server-palantir-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from palantir-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List palantir-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "google-analytics-api": {
      "name": "google-analytics-api",
      "version": "2.2.8",
      "description": "Google Analytics Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-google-analytics-api",
      "npmDownloads": 5502,
      "repositoryUrl": "https://github.com/observability/mcp-server-google-analytics-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from google-analytics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List google-analytics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "adobe-analytics-api": {
      "name": "adobe-analytics-api",
      "version": "1.8.13",
      "description": "Adobe Analytics Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-adobe-analytics-api",
      "npmDownloads": 2437,
      "repositoryUrl": "https://github.com/observability/mcp-server-adobe-analytics-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from adobe-analytics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List adobe-analytics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "mixpanel-analytics-api": {
      "name": "mixpanel-analytics-api",
      "version": "2.0.5",
      "description": "Mixpanel Analytics Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-mixpanel-analytics-api",
      "npmDownloads": 3755,
      "repositoryUrl": "https://github.com/observability/mcp-server-mixpanel-analytics-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from mixpanel-analytics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List mixpanel-analytics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "amplitude-analytics-api": {
      "name": "amplitude-analytics-api",
      "version": "1.9.18",
      "description": "Amplitude Analytics Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-amplitude-analytics-api",
      "npmDownloads": 2646,
      "repositoryUrl": "https://github.com/observability/mcp-server-amplitude-analytics-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from amplitude-analytics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List amplitude-analytics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "segment-analytics-api": {
      "name": "segment-analytics-api",
      "version": "2.8.11",
      "description": "Segment Analytics Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-segment-analytics-api",
      "npmDownloads": 3512,
      "repositoryUrl": "https://github.com/observability/mcp-server-segment-analytics-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from segment-analytics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List segment-analytics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "heap-api": {
      "name": "heap-api",
      "version": "3.9.1",
      "description": "Heap Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-heap-api",
      "npmDownloads": 594,
      "repositoryUrl": "https://github.com/observability/mcp-server-heap-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from heap-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List heap-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fullstory-api": {
      "name": "fullstory-api",
      "version": "3.2.9",
      "description": "Fullstory Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-fullstory-api",
      "npmDownloads": 3608,
      "repositoryUrl": "https://github.com/observability/mcp-server-fullstory-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fullstory-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fullstory-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "crazyegg-api": {
      "name": "crazyegg-api",
      "version": "2.3.8",
      "description": "Crazyegg Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-crazyegg-api",
      "npmDownloads": 5118,
      "repositoryUrl": "https://github.com/observability/mcp-server-crazyegg-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from crazyegg-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List crazyegg-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "kissmetrics-api": {
      "name": "kissmetrics-api",
      "version": "1.3.10",
      "description": "Kissmetrics Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-kissmetrics-api",
      "npmDownloads": 4711,
      "repositoryUrl": "https://github.com/observability/mcp-server-kissmetrics-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from kissmetrics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List kissmetrics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pendo-api": {
      "name": "pendo-api",
      "version": "1.1.8",
      "description": "Pendo Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-pendo-api",
      "npmDownloads": 2975,
      "repositoryUrl": "https://github.com/observability/mcp-server-pendo-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pendo-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pendo-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "walkme-api": {
      "name": "walkme-api",
      "version": "1.1.13",
      "description": "Walkme Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-walkme-api",
      "npmDownloads": 1878,
      "repositoryUrl": "https://github.com/observability/mcp-server-walkme-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from walkme-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List walkme-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "appcues-api": {
      "name": "appcues-api",
      "version": "1.4.12",
      "description": "Appcues Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-appcues-api",
      "npmDownloads": 1458,
      "repositoryUrl": "https://github.com/observability/mcp-server-appcues-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from appcues-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List appcues-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "intercom-api": {
      "name": "intercom-api",
      "version": "1.0.12",
      "description": "Intercom Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-intercom-api",
      "npmDownloads": 3772,
      "repositoryUrl": "https://github.com/observability/mcp-server-intercom-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from intercom-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List intercom-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "drift-api": {
      "name": "drift-api",
      "version": "1.9.3",
      "description": "Drift Api integration server",
      "category": "analytics-monitoring",
      "packageName": "mcp-server-drift-api",
      "npmDownloads": 1579,
      "repositoryUrl": "https://github.com/observability/mcp-server-drift-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from drift-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List drift-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "wordpress-api": {
      "name": "wordpress-api",
      "version": "3.1.4",
      "description": "Wordpress Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-wordpress-api",
      "npmDownloads": 3290,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-wordpress-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from wordpress-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List wordpress-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "drupal-api": {
      "name": "drupal-api",
      "version": "2.9.2",
      "description": "Drupal Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-drupal-api",
      "npmDownloads": 6637,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-drupal-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from drupal-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List drupal-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "contentful-api": {
      "name": "contentful-api",
      "version": "1.1.3",
      "description": "Contentful Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-contentful-api",
      "npmDownloads": 8329,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-contentful-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from contentful-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List contentful-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "strapi-api": {
      "name": "strapi-api",
      "version": "3.8.12",
      "description": "Strapi Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-strapi-api",
      "npmDownloads": 5437,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-strapi-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from strapi-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List strapi-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "ghost-api": {
      "name": "ghost-api",
      "version": "3.6.9",
      "description": "Ghost Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-ghost-api",
      "npmDownloads": 2993,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-ghost-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from ghost-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List ghost-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sanity-api": {
      "name": "sanity-api",
      "version": "2.9.3",
      "description": "Sanity Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-sanity-api",
      "npmDownloads": 4463,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-sanity-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sanity-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sanity-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "prismic-api": {
      "name": "prismic-api",
      "version": "3.3.14",
      "description": "Prismic Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-prismic-api",
      "npmDownloads": 987,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-prismic-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from prismic-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List prismic-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "directus-api": {
      "name": "directus-api",
      "version": "1.0.4",
      "description": "Directus Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-directus-api",
      "npmDownloads": 12088,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-directus-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from directus-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List directus-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "forestry-api": {
      "name": "forestry-api",
      "version": "1.3.10",
      "description": "Forestry Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-forestry-api",
      "npmDownloads": 3016,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-forestry-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from forestry-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List forestry-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "netlifycms-api": {
      "name": "netlifycms-api",
      "version": "2.9.9",
      "description": "Netlifycms Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-netlifycms-api",
      "npmDownloads": 5688,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-netlifycms-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from netlifycms-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List netlifycms-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "storyblok-api": {
      "name": "storyblok-api",
      "version": "1.7.18",
      "description": "Storyblok Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-storyblok-api",
      "npmDownloads": 2339,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-storyblok-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from storyblok-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List storyblok-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "buttercms-api": {
      "name": "buttercms-api",
      "version": "3.2.12",
      "description": "Buttercms Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-buttercms-api",
      "npmDownloads": 3563,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-buttercms-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from buttercms-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List buttercms-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cosmic-api": {
      "name": "cosmic-api",
      "version": "3.9.19",
      "description": "Cosmic Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-cosmic-api",
      "npmDownloads": 7260,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-cosmic-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cosmic-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cosmic-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "agilitycms-api": {
      "name": "agilitycms-api",
      "version": "2.1.18",
      "description": "Agilitycms Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-agilitycms-api",
      "npmDownloads": 10948,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-agilitycms-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from agilitycms-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List agilitycms-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "kenticocontent-api": {
      "name": "kenticocontent-api",
      "version": "3.0.10",
      "description": "Kenticocontent Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-kenticocontent-api",
      "npmDownloads": 9991,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-kenticocontent-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from kenticocontent-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List kenticocontent-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sitecore-api": {
      "name": "sitecore-api",
      "version": "3.6.13",
      "description": "Sitecore Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-sitecore-api",
      "npmDownloads": 2330,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-sitecore-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sitecore-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sitecore-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "aem-api": {
      "name": "aem-api",
      "version": "2.7.7",
      "description": "Aem Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-aem-api",
      "npmDownloads": 5283,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-aem-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aem-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aem-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "drupalcommerce-api": {
      "name": "drupalcommerce-api",
      "version": "3.4.17",
      "description": "Drupalcommerce Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-drupalcommerce-api",
      "npmDownloads": 1801,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-drupalcommerce-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from drupalcommerce-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List drupalcommerce-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "magentocms-api": {
      "name": "magentocms-api",
      "version": "2.4.11",
      "description": "Magentocms Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-magentocms-api",
      "npmDownloads": 4894,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-magentocms-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from magentocms-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List magentocms-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "joomla-api": {
      "name": "joomla-api",
      "version": "1.2.6",
      "description": "Joomla Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-joomla-api",
      "npmDownloads": 7715,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-joomla-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from joomla-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List joomla-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cloudinary-api": {
      "name": "cloudinary-api",
      "version": "3.7.16",
      "description": "Cloudinary Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-cloudinary-api",
      "npmDownloads": 10588,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-cloudinary-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cloudinary-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cloudinary-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "imagekit-api": {
      "name": "imagekit-api",
      "version": "2.0.11",
      "description": "Imagekit Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-imagekit-api",
      "npmDownloads": 5911,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-imagekit-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from imagekit-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List imagekit-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "tinypng-api": {
      "name": "tinypng-api",
      "version": "1.5.12",
      "description": "Tinypng Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-tinypng-api",
      "npmDownloads": 2754,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-tinypng-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from tinypng-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List tinypng-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "krakenio-api": {
      "name": "krakenio-api",
      "version": "3.2.18",
      "description": "Krakenio Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-krakenio-api",
      "npmDownloads": 6789,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-krakenio-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from krakenio-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List krakenio-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "imagify-api": {
      "name": "imagify-api",
      "version": "3.6.12",
      "description": "Imagify Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-imagify-api",
      "npmDownloads": 762,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-imagify-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from imagify-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List imagify-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "shortpixel-api": {
      "name": "shortpixel-api",
      "version": "1.4.10",
      "description": "Shortpixel Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-shortpixel-api",
      "npmDownloads": 8320,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-shortpixel-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from shortpixel-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List shortpixel-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "compressorio-api": {
      "name": "compressorio-api",
      "version": "2.9.12",
      "description": "Compressorio Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-compressorio-api",
      "npmDownloads": 5682,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-compressorio-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from compressorio-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List compressorio-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "optimizilla-api": {
      "name": "optimizilla-api",
      "version": "3.3.17",
      "description": "Optimizilla Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-optimizilla-api",
      "npmDownloads": 6048,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-optimizilla-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from optimizilla-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List optimizilla-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "jpegmini-api": {
      "name": "jpegmini-api",
      "version": "1.5.13",
      "description": "Jpegmini Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-jpegmini-api",
      "npmDownloads": 6811,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-jpegmini-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from jpegmini-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List jpegmini-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pngout-api": {
      "name": "pngout-api",
      "version": "3.3.16",
      "description": "Pngout Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-pngout-api",
      "npmDownloads": 3436,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-pngout-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pngout-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pngout-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "aws-rekognition-api": {
      "name": "aws-rekognition-api",
      "version": "2.9.8",
      "description": "Aws Rekognition Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-aws-rekognition-api",
      "npmDownloads": 3435,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-aws-rekognition-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aws-rekognition-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aws-rekognition-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gcp-vision-api": {
      "name": "gcp-vision-api",
      "version": "3.9.19",
      "description": "Gcp Vision Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-gcp-vision-api",
      "npmDownloads": 5828,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-gcp-vision-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from gcp-vision-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List gcp-vision-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "azure-vision-api": {
      "name": "azure-vision-api",
      "version": "3.0.5",
      "description": "Azure Vision Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-azure-vision-api",
      "npmDownloads": 5429,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-azure-vision-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from azure-vision-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List azure-vision-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "clarifai-api": {
      "name": "clarifai-api",
      "version": "1.5.3",
      "description": "Clarifai Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-clarifai-api",
      "npmDownloads": 2437,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-clarifai-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from clarifai-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List clarifai-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "aws-textract-api": {
      "name": "aws-textract-api",
      "version": "2.4.1",
      "description": "Aws Textract Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-aws-textract-api",
      "npmDownloads": 2818,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-aws-textract-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aws-textract-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aws-textract-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "unsplash-api": {
      "name": "unsplash-api",
      "version": "1.8.16",
      "description": "Unsplash Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-unsplash-api",
      "npmDownloads": 5924,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-unsplash-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from unsplash-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List unsplash-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pexels-api": {
      "name": "pexels-api",
      "version": "1.8.10",
      "description": "Pexels Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-pexels-api",
      "npmDownloads": 6433,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-pexels-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pexels-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pexels-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "shutterstock-api": {
      "name": "shutterstock-api",
      "version": "2.1.8",
      "description": "Shutterstock Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-shutterstock-api",
      "npmDownloads": 2206,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-shutterstock-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from shutterstock-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List shutterstock-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "getty-api": {
      "name": "getty-api",
      "version": "2.1.14",
      "description": "Getty Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-getty-api",
      "npmDownloads": 7206,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-getty-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from getty-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List getty-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "adobestock-api": {
      "name": "adobestock-api",
      "version": "2.6.17",
      "description": "Adobestock Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-adobestock-api",
      "npmDownloads": 2018,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-adobestock-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from adobestock-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List adobestock-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "youtube-api": {
      "name": "youtube-api",
      "version": "2.4.15",
      "description": "Youtube Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-youtube-api",
      "npmDownloads": 2018,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-youtube-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from youtube-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List youtube-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "vimeo-api": {
      "name": "vimeo-api",
      "version": "3.4.12",
      "description": "Vimeo Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-vimeo-api",
      "npmDownloads": 3906,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-vimeo-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from vimeo-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List vimeo-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "twitch-api": {
      "name": "twitch-api",
      "version": "1.2.14",
      "description": "Twitch Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-twitch-api",
      "npmDownloads": 1764,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-twitch-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from twitch-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List twitch-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "facebook-video-api": {
      "name": "facebook-video-api",
      "version": "1.4.9",
      "description": "Facebook Video Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-facebook-video-api",
      "npmDownloads": 2840,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-facebook-video-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from facebook-video-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List facebook-video-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "instagram-video-api": {
      "name": "instagram-video-api",
      "version": "2.2.2",
      "description": "Instagram Video Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-instagram-video-api",
      "npmDownloads": 6066,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-instagram-video-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from instagram-video-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List instagram-video-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "tiktok-video-api": {
      "name": "tiktok-video-api",
      "version": "1.5.16",
      "description": "Tiktok Video Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-tiktok-video-api",
      "npmDownloads": 1698,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-tiktok-video-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from tiktok-video-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List tiktok-video-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "dailyco-api": {
      "name": "dailyco-api",
      "version": "1.5.3",
      "description": "Dailyco Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-dailyco-api",
      "npmDownloads": 3780,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-dailyco-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from dailyco-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List dailyco-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "agoraio-api": {
      "name": "agoraio-api",
      "version": "3.6.0",
      "description": "Agoraio Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-agoraio-api",
      "npmDownloads": 1528,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-agoraio-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from agoraio-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List agoraio-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "jitsi-api": {
      "name": "jitsi-api",
      "version": "2.4.10",
      "description": "Jitsi Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-jitsi-api",
      "npmDownloads": 630,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-jitsi-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from jitsi-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List jitsi-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "zoom-sdk-api": {
      "name": "zoom-sdk-api",
      "version": "2.7.2",
      "description": "Zoom Sdk Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-zoom-sdk-api",
      "npmDownloads": 5284,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-zoom-sdk-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from zoom-sdk-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List zoom-sdk-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "aws-elemental-api": {
      "name": "aws-elemental-api",
      "version": "2.6.1",
      "description": "Aws Elemental Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-aws-elemental-api",
      "npmDownloads": 556,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-aws-elemental-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aws-elemental-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aws-elemental-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gcp-video-api": {
      "name": "gcp-video-api",
      "version": "3.4.19",
      "description": "Gcp Video Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-gcp-video-api",
      "npmDownloads": 1635,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-gcp-video-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from gcp-video-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List gcp-video-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "azure-media-api": {
      "name": "azure-media-api",
      "version": "1.7.6",
      "description": "Azure Media Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-azure-media-api",
      "npmDownloads": 3322,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-azure-media-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from azure-media-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List azure-media-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "brightcove-api": {
      "name": "brightcove-api",
      "version": "3.0.13",
      "description": "Brightcove Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-brightcove-api",
      "npmDownloads": 3729,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-brightcove-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from brightcove-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List brightcove-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "jwplayer-api": {
      "name": "jwplayer-api",
      "version": "1.7.8",
      "description": "Jwplayer Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-jwplayer-api",
      "npmDownloads": 2078,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-jwplayer-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from jwplayer-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List jwplayer-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "wistia-api": {
      "name": "wistia-api",
      "version": "1.7.15",
      "description": "Wistia Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-wistia-api",
      "npmDownloads": 257,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-wistia-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from wistia-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List wistia-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "vidyard-api": {
      "name": "vidyard-api",
      "version": "2.2.5",
      "description": "Vidyard Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-vidyard-api",
      "npmDownloads": 2831,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-vidyard-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from vidyard-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List vidyard-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "loom-api": {
      "name": "loom-api",
      "version": "2.3.3",
      "description": "Loom Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-loom-api",
      "npmDownloads": 1025,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-loom-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from loom-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List loom-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "screencastify-api": {
      "name": "screencastify-api",
      "version": "3.5.2",
      "description": "Screencastify Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-screencastify-api",
      "npmDownloads": 1272,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-screencastify-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from screencastify-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List screencastify-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "camtasia-api": {
      "name": "camtasia-api",
      "version": "3.5.11",
      "description": "Camtasia Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-camtasia-api",
      "npmDownloads": 2726,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-camtasia-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from camtasia-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List camtasia-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cloudflare-cdn-api": {
      "name": "cloudflare-cdn-api",
      "version": "2.4.7",
      "description": "Cloudflare Cdn Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-cloudflare-cdn-api",
      "npmDownloads": 734,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-cloudflare-cdn-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cloudflare-cdn-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cloudflare-cdn-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "keycdn-api": {
      "name": "keycdn-api",
      "version": "3.2.10",
      "description": "Keycdn Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-keycdn-api",
      "npmDownloads": 3845,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-keycdn-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from keycdn-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List keycdn-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "maxcdn-api": {
      "name": "maxcdn-api",
      "version": "3.1.11",
      "description": "Maxcdn Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-maxcdn-api",
      "npmDownloads": 697,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-maxcdn-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from maxcdn-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List maxcdn-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "bunnycdn-api": {
      "name": "bunnycdn-api",
      "version": "3.6.14",
      "description": "Bunnycdn Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-bunnycdn-api",
      "npmDownloads": 1844,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-bunnycdn-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from bunnycdn-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List bunnycdn-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "jsdelivr-api": {
      "name": "jsdelivr-api",
      "version": "3.6.11",
      "description": "Jsdelivr Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-jsdelivr-api",
      "npmDownloads": 2097,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-jsdelivr-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from jsdelivr-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List jsdelivr-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "unpkg-api": {
      "name": "unpkg-api",
      "version": "1.8.17",
      "description": "Unpkg Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-unpkg-api",
      "npmDownloads": 2921,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-unpkg-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from unpkg-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List unpkg-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cdnjs-api": {
      "name": "cdnjs-api",
      "version": "3.1.9",
      "description": "Cdnjs Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-cdnjs-api",
      "npmDownloads": 2745,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-cdnjs-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cdnjs-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cdnjs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "googlefonts-api": {
      "name": "googlefonts-api",
      "version": "1.5.12",
      "description": "Googlefonts Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-googlefonts-api",
      "npmDownloads": 1642,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-googlefonts-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from googlefonts-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List googlefonts-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "stackpath-api": {
      "name": "stackpath-api",
      "version": "1.9.2",
      "description": "Stackpath Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-stackpath-api",
      "npmDownloads": 3884,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-stackpath-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from stackpath-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List stackpath-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "incapsula-api": {
      "name": "incapsula-api",
      "version": "3.0.0",
      "description": "Incapsula Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-incapsula-api",
      "npmDownloads": 1126,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-incapsula-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from incapsula-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List incapsula-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sucuri-api": {
      "name": "sucuri-api",
      "version": "2.1.10",
      "description": "Sucuri Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-sucuri-api",
      "npmDownloads": 3960,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-sucuri-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sucuri-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sucuri-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "akamai-api": {
      "name": "akamai-api",
      "version": "3.7.19",
      "description": "Akamai Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-akamai-api",
      "npmDownloads": 423,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-akamai-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from akamai-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List akamai-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "limelight-api": {
      "name": "limelight-api",
      "version": "3.6.2",
      "description": "Limelight Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-limelight-api",
      "npmDownloads": 679,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-limelight-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from limelight-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List limelight-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "level3-api": {
      "name": "level3-api",
      "version": "3.6.7",
      "description": "Level3 Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-level3-api",
      "npmDownloads": 1771,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-level3-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from level3-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List level3-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "edgecast-api": {
      "name": "edgecast-api",
      "version": "1.5.15",
      "description": "Edgecast Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-edgecast-api",
      "npmDownloads": 4154,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-edgecast-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from edgecast-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List edgecast-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "chinacache-api": {
      "name": "chinacache-api",
      "version": "2.9.14",
      "description": "Chinacache Api integration server",
      "category": "content-media",
      "packageName": "mcp-server-chinacache-api",
      "npmDownloads": 4232,
      "repositoryUrl": "https://github.com/content-tools/mcp-server-chinacache-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from chinacache-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List chinacache-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "salesforce-api": {
      "name": "salesforce-api",
      "version": "3.7.3",
      "description": "Salesforce Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-salesforce-api",
      "npmDownloads": 8409,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-salesforce-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from salesforce-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List salesforce-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "hubspot-api": {
      "name": "hubspot-api",
      "version": "2.2.9",
      "description": "Hubspot Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-hubspot-api",
      "npmDownloads": 1572,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-hubspot-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from hubspot-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List hubspot-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pipedrive-api": {
      "name": "pipedrive-api",
      "version": "3.9.14",
      "description": "Pipedrive Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-pipedrive-api",
      "npmDownloads": 1139,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-pipedrive-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pipedrive-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pipedrive-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "zohocrm-api": {
      "name": "zohocrm-api",
      "version": "3.3.8",
      "description": "Zohocrm Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-zohocrm-api",
      "npmDownloads": 2429,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-zohocrm-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from zohocrm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List zohocrm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "freshsales-api": {
      "name": "freshsales-api",
      "version": "1.0.0",
      "description": "Freshsales Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-freshsales-api",
      "npmDownloads": 9812,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-freshsales-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from freshsales-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List freshsales-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "insightly-api": {
      "name": "insightly-api",
      "version": "3.9.0",
      "description": "Insightly Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-insightly-api",
      "npmDownloads": 2445,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-insightly-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from insightly-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List insightly-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "nutshell-api": {
      "name": "nutshell-api",
      "version": "3.5.8",
      "description": "Nutshell Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-nutshell-api",
      "npmDownloads": 5119,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-nutshell-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from nutshell-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List nutshell-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "closecrm-api": {
      "name": "closecrm-api",
      "version": "1.7.1",
      "description": "Closecrm Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-closecrm-api",
      "npmDownloads": 2845,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-closecrm-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from closecrm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List closecrm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "copper-api": {
      "name": "copper-api",
      "version": "2.0.2",
      "description": "Copper Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-copper-api",
      "npmDownloads": 4718,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-copper-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from copper-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List copper-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "agilecrm-api": {
      "name": "agilecrm-api",
      "version": "3.3.2",
      "description": "Agilecrm Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-agilecrm-api",
      "npmDownloads": 3673,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-agilecrm-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from agilecrm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List agilecrm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "salesflare-api": {
      "name": "salesflare-api",
      "version": "1.5.14",
      "description": "Salesflare Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-salesflare-api",
      "npmDownloads": 9875,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-salesflare-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from salesflare-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List salesflare-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "folk-api": {
      "name": "folk-api",
      "version": "3.3.2",
      "description": "Folk Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-folk-api",
      "npmDownloads": 9188,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-folk-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from folk-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List folk-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "mondaycrm-api": {
      "name": "mondaycrm-api",
      "version": "3.1.19",
      "description": "Mondaycrm Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-mondaycrm-api",
      "npmDownloads": 4005,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-mondaycrm-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from mondaycrm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List mondaycrm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "airtable-api": {
      "name": "airtable-api",
      "version": "2.2.16",
      "description": "Airtable Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-airtable-api",
      "npmDownloads": 7130,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-airtable-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from airtable-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List airtable-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "notion-api": {
      "name": "notion-api",
      "version": "2.5.17",
      "description": "Notion Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-notion-api",
      "npmDownloads": 4052,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-notion-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from notion-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List notion-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "clickup-api": {
      "name": "clickup-api",
      "version": "3.5.1",
      "description": "Clickup Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-clickup-api",
      "npmDownloads": 4299,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-clickup-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from clickup-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List clickup-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "asana-api": {
      "name": "asana-api",
      "version": "3.6.10",
      "description": "Asana Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-asana-api",
      "npmDownloads": 7022,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-asana-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from asana-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List asana-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "trello-api": {
      "name": "trello-api",
      "version": "3.0.9",
      "description": "Trello Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-trello-api",
      "npmDownloads": 6026,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-trello-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from trello-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List trello-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "basecamp-api": {
      "name": "basecamp-api",
      "version": "3.8.1",
      "description": "Basecamp Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-basecamp-api",
      "npmDownloads": 5701,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-basecamp-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from basecamp-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List basecamp-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "teamwork-api": {
      "name": "teamwork-api",
      "version": "3.3.12",
      "description": "Teamwork Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-teamwork-api",
      "npmDownloads": 1580,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-teamwork-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from teamwork-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List teamwork-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sap-api": {
      "name": "sap-api",
      "version": "3.8.19",
      "description": "Sap Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-sap-api",
      "npmDownloads": 7596,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-sap-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sap-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sap-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "oracle-erp-api": {
      "name": "oracle-erp-api",
      "version": "3.7.5",
      "description": "Oracle Erp Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-oracle-erp-api",
      "npmDownloads": 5541,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-oracle-erp-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from oracle-erp-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List oracle-erp-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "netsuite-api": {
      "name": "netsuite-api",
      "version": "1.6.17",
      "description": "Netsuite Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-netsuite-api",
      "npmDownloads": 5641,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-netsuite-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from netsuite-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List netsuite-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "dynamics365-api": {
      "name": "dynamics365-api",
      "version": "1.6.8",
      "description": "Dynamics365 Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-dynamics365-api",
      "npmDownloads": 1542,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-dynamics365-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from dynamics365-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List dynamics365-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "workday-api": {
      "name": "workday-api",
      "version": "3.6.15",
      "description": "Workday Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-workday-api",
      "npmDownloads": 7370,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-workday-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from workday-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List workday-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "infor-api": {
      "name": "infor-api",
      "version": "1.7.0",
      "description": "Infor Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-infor-api",
      "npmDownloads": 2043,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-infor-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from infor-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List infor-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "epicor-api": {
      "name": "epicor-api",
      "version": "1.8.18",
      "description": "Epicor Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-epicor-api",
      "npmDownloads": 6552,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-epicor-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from epicor-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List epicor-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sage-api": {
      "name": "sage-api",
      "version": "3.2.14",
      "description": "Sage Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-sage-api",
      "npmDownloads": 5867,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-sage-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sage-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sage-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "acumatica-api": {
      "name": "acumatica-api",
      "version": "3.4.19",
      "description": "Acumatica Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-acumatica-api",
      "npmDownloads": 5399,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-acumatica-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from acumatica-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List acumatica-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "ifs-api": {
      "name": "ifs-api",
      "version": "3.9.9",
      "description": "Ifs Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-ifs-api",
      "npmDownloads": 1406,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-ifs-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from ifs-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List ifs-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "unit4-api": {
      "name": "unit4-api",
      "version": "2.7.5",
      "description": "Unit4 Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-unit4-api",
      "npmDownloads": 4066,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-unit4-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from unit4-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List unit4-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "deltek-api": {
      "name": "deltek-api",
      "version": "2.8.11",
      "description": "Deltek Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-deltek-api",
      "npmDownloads": 2080,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-deltek-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from deltek-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List deltek-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "ramco-api": {
      "name": "ramco-api",
      "version": "1.6.18",
      "description": "Ramco Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-ramco-api",
      "npmDownloads": 6554,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-ramco-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from ramco-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List ramco-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "priority-api": {
      "name": "priority-api",
      "version": "1.4.13",
      "description": "Priority Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-priority-api",
      "npmDownloads": 3331,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-priority-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from priority-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List priority-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "abas-api": {
      "name": "abas-api",
      "version": "3.4.4",
      "description": "Abas Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-abas-api",
      "npmDownloads": 2546,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-abas-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from abas-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List abas-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "quickbooks-api": {
      "name": "quickbooks-api",
      "version": "2.2.2",
      "description": "Quickbooks Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-quickbooks-api",
      "npmDownloads": 4892,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-quickbooks-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from quickbooks-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List quickbooks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "xero-api": {
      "name": "xero-api",
      "version": "1.6.19",
      "description": "Xero Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-xero-api",
      "npmDownloads": 618,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-xero-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from xero-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List xero-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "freshbooks-api": {
      "name": "freshbooks-api",
      "version": "2.1.8",
      "description": "Freshbooks Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-freshbooks-api",
      "npmDownloads": 2401,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-freshbooks-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from freshbooks-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List freshbooks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "wave-api": {
      "name": "wave-api",
      "version": "2.0.11",
      "description": "Wave Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-wave-api",
      "npmDownloads": 2039,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-wave-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from wave-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List wave-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "zohobooks-api": {
      "name": "zohobooks-api",
      "version": "3.5.2",
      "description": "Zohobooks Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-zohobooks-api",
      "npmDownloads": 5706,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-zohobooks-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from zohobooks-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List zohobooks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sage-business-api": {
      "name": "sage-business-api",
      "version": "2.5.14",
      "description": "Sage Business Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-sage-business-api",
      "npmDownloads": 5265,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-sage-business-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sage-business-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sage-business-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "kashoo-api": {
      "name": "kashoo-api",
      "version": "1.9.12",
      "description": "Kashoo Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-kashoo-api",
      "npmDownloads": 2032,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-kashoo-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from kashoo-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List kashoo-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "billy-api": {
      "name": "billy-api",
      "version": "2.9.15",
      "description": "Billy Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-billy-api",
      "npmDownloads": 3817,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-billy-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from billy-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List billy-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "freeagent-api": {
      "name": "freeagent-api",
      "version": "3.5.13",
      "description": "Freeagent Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-freeagent-api",
      "npmDownloads": 1814,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-freeagent-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from freeagent-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List freeagent-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "clearbooks-api": {
      "name": "clearbooks-api",
      "version": "3.6.16",
      "description": "Clearbooks Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-clearbooks-api",
      "npmDownloads": 2703,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-clearbooks-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from clearbooks-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List clearbooks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gnucash-api": {
      "name": "gnucash-api",
      "version": "1.7.17",
      "description": "Gnucash Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-gnucash-api",
      "npmDownloads": 4645,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-gnucash-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from gnucash-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List gnucash-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "manager-api": {
      "name": "manager-api",
      "version": "2.6.8",
      "description": "Manager Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-manager-api",
      "npmDownloads": 3359,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-manager-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from manager-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List manager-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "zipbooks-api": {
      "name": "zipbooks-api",
      "version": "3.3.13",
      "description": "Zipbooks Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-zipbooks-api",
      "npmDownloads": 4007,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-zipbooks-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from zipbooks-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List zipbooks-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "invoiceninja-api": {
      "name": "invoiceninja-api",
      "version": "1.2.16",
      "description": "Invoiceninja Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-invoiceninja-api",
      "npmDownloads": 524,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-invoiceninja-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from invoiceninja-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List invoiceninja-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "akaunting-api": {
      "name": "akaunting-api",
      "version": "2.2.7",
      "description": "Akaunting Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-akaunting-api",
      "npmDownloads": 4583,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-akaunting-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from akaunting-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List akaunting-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "jira-api": {
      "name": "jira-api",
      "version": "1.8.19",
      "description": "Jira Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-jira-api",
      "npmDownloads": 2749,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-jira-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from jira-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List jira-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "confluence-api": {
      "name": "confluence-api",
      "version": "3.7.9",
      "description": "Confluence Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-confluence-api",
      "npmDownloads": 3034,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-confluence-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from confluence-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List confluence-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "linear-api": {
      "name": "linear-api",
      "version": "2.8.17",
      "description": "Linear Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-linear-api",
      "npmDownloads": 2464,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-linear-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from linear-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List linear-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "height-api": {
      "name": "height-api",
      "version": "3.3.1",
      "description": "Height Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-height-api",
      "npmDownloads": 2469,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-height-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from height-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List height-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "shortcut-api": {
      "name": "shortcut-api",
      "version": "1.7.14",
      "description": "Shortcut Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-shortcut-api",
      "npmDownloads": 1946,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-shortcut-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from shortcut-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List shortcut-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pivotaltracker-api": {
      "name": "pivotaltracker-api",
      "version": "1.8.3",
      "description": "Pivotaltracker Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-pivotaltracker-api",
      "npmDownloads": 1712,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-pivotaltracker-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pivotaltracker-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pivotaltracker-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "azureboards-api": {
      "name": "azureboards-api",
      "version": "2.2.14",
      "description": "Azureboards Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-azureboards-api",
      "npmDownloads": 1472,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-azureboards-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from azureboards-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List azureboards-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "github-projects-api": {
      "name": "github-projects-api",
      "version": "2.6.9",
      "description": "Github Projects Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-github-projects-api",
      "npmDownloads": 1365,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-github-projects-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from github-projects-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List github-projects-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gitlab-issues-api": {
      "name": "gitlab-issues-api",
      "version": "1.4.1",
      "description": "Gitlab Issues Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-gitlab-issues-api",
      "npmDownloads": 773,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-gitlab-issues-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from gitlab-issues-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List gitlab-issues-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "bitbucket-issues-api": {
      "name": "bitbucket-issues-api",
      "version": "2.2.15",
      "description": "Bitbucket Issues Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-bitbucket-issues-api",
      "npmDownloads": 1355,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-bitbucket-issues-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from bitbucket-issues-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List bitbucket-issues-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "wrike-api": {
      "name": "wrike-api",
      "version": "3.0.18",
      "description": "Wrike Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-wrike-api",
      "npmDownloads": 418,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-wrike-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from wrike-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List wrike-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "smartsheet-api": {
      "name": "smartsheet-api",
      "version": "2.1.4",
      "description": "Smartsheet Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-smartsheet-api",
      "npmDownloads": 3020,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-smartsheet-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from smartsheet-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List smartsheet-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "monday-api": {
      "name": "monday-api",
      "version": "2.1.13",
      "description": "Monday Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-monday-api",
      "npmDownloads": 868,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-monday-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from monday-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List monday-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "clickup-pm-api": {
      "name": "clickup-pm-api",
      "version": "1.0.4",
      "description": "Clickup Pm Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-clickup-pm-api",
      "npmDownloads": 833,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-clickup-pm-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from clickup-pm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List clickup-pm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "asana-pm-api": {
      "name": "asana-pm-api",
      "version": "1.7.4",
      "description": "Asana Pm Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-asana-pm-api",
      "npmDownloads": 741,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-asana-pm-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from asana-pm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List asana-pm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "trello-pm-api": {
      "name": "trello-pm-api",
      "version": "3.7.15",
      "description": "Trello Pm Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-trello-pm-api",
      "npmDownloads": 505,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-trello-pm-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from trello-pm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List trello-pm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "basecamp3-api": {
      "name": "basecamp3-api",
      "version": "1.9.1",
      "description": "Basecamp3 Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-basecamp3-api",
      "npmDownloads": 597,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-basecamp3-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from basecamp3-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List basecamp3-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "teamwork-pm-api": {
      "name": "teamwork-pm-api",
      "version": "3.3.2",
      "description": "Teamwork Pm Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-teamwork-pm-api",
      "npmDownloads": 1032,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-teamwork-pm-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from teamwork-pm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List teamwork-pm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "workfront-api": {
      "name": "workfront-api",
      "version": "3.9.12",
      "description": "Workfront Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-workfront-api",
      "npmDownloads": 2173,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-workfront-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from workfront-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List workfront-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "clarizen-api": {
      "name": "clarizen-api",
      "version": "1.9.12",
      "description": "Clarizen Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-clarizen-api",
      "npmDownloads": 508,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-clarizen-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from clarizen-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List clarizen-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "msproject-api": {
      "name": "msproject-api",
      "version": "2.9.3",
      "description": "Msproject Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-msproject-api",
      "npmDownloads": 2852,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-msproject-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from msproject-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List msproject-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "primavera-api": {
      "name": "primavera-api",
      "version": "2.3.12",
      "description": "Primavera Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-primavera-api",
      "npmDownloads": 3234,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-primavera-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from primavera-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List primavera-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "ganttproject-api": {
      "name": "ganttproject-api",
      "version": "2.6.12",
      "description": "Ganttproject Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-ganttproject-api",
      "npmDownloads": 1084,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-ganttproject-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from ganttproject-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List ganttproject-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "openproject-api": {
      "name": "openproject-api",
      "version": "2.0.13",
      "description": "Openproject Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-openproject-api",
      "npmDownloads": 809,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-openproject-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from openproject-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List openproject-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "redmine-api": {
      "name": "redmine-api",
      "version": "3.9.6",
      "description": "Redmine Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-redmine-api",
      "npmDownloads": 283,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-redmine-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from redmine-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List redmine-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "taiga-api": {
      "name": "taiga-api",
      "version": "3.3.5",
      "description": "Taiga Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-taiga-api",
      "npmDownloads": 1680,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-taiga-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from taiga-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List taiga-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "youtrack-api": {
      "name": "youtrack-api",
      "version": "2.9.18",
      "description": "Youtrack Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-youtrack-api",
      "npmDownloads": 1630,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-youtrack-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from youtrack-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List youtrack-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "mantis-api": {
      "name": "mantis-api",
      "version": "3.3.0",
      "description": "Mantis Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-mantis-api",
      "npmDownloads": 2192,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-mantis-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from mantis-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List mantis-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "bugzilla-api": {
      "name": "bugzilla-api",
      "version": "1.8.5",
      "description": "Bugzilla Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-bugzilla-api",
      "npmDownloads": 321,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-bugzilla-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from bugzilla-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List bugzilla-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "trac-api": {
      "name": "trac-api",
      "version": "2.1.10",
      "description": "Trac Api integration server",
      "category": "business-applications",
      "packageName": "mcp-server-trac-api",
      "npmDownloads": 585,
      "repositoryUrl": "https://github.com/business-tools/mcp-server-trac-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from trac-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List trac-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "auth0-api": {
      "name": "auth0-api",
      "version": "2.9.15",
      "description": "Auth0 Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-auth0-api",
      "npmDownloads": 8014,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-auth0-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from auth0-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List auth0-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "okta-api": {
      "name": "okta-api",
      "version": "2.3.9",
      "description": "Okta Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-okta-api",
      "npmDownloads": 8027,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-okta-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from okta-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List okta-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "firebase-auth-api": {
      "name": "firebase-auth-api",
      "version": "1.8.6",
      "description": "Firebase Auth Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-firebase-auth-api",
      "npmDownloads": 6185,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-firebase-auth-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from firebase-auth-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List firebase-auth-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "azure-ad-api": {
      "name": "azure-ad-api",
      "version": "3.4.10",
      "description": "Azure Ad Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-azure-ad-api",
      "npmDownloads": 1966,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-azure-ad-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from azure-ad-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List azure-ad-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "google-identity-api": {
      "name": "google-identity-api",
      "version": "3.2.12",
      "description": "Google Identity Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-google-identity-api",
      "npmDownloads": 3582,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-google-identity-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from google-identity-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List google-identity-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "ms-identity-api": {
      "name": "ms-identity-api",
      "version": "1.3.8",
      "description": "Ms Identity Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-ms-identity-api",
      "npmDownloads": 8946,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-ms-identity-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from ms-identity-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List ms-identity-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "onelogin-api": {
      "name": "onelogin-api",
      "version": "1.3.5",
      "description": "Onelogin Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-onelogin-api",
      "npmDownloads": 3092,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-onelogin-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from onelogin-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List onelogin-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "ping-api": {
      "name": "ping-api",
      "version": "1.7.8",
      "description": "Ping Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-ping-api",
      "npmDownloads": 1817,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-ping-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from ping-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List ping-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "keycloak-api": {
      "name": "keycloak-api",
      "version": "2.7.11",
      "description": "Keycloak Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-keycloak-api",
      "npmDownloads": 1530,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-keycloak-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from keycloak-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List keycloak-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "forgerock-api": {
      "name": "forgerock-api",
      "version": "1.6.5",
      "description": "Forgerock Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-forgerock-api",
      "npmDownloads": 2765,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-forgerock-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from forgerock-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List forgerock-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sailpoint-api": {
      "name": "sailpoint-api",
      "version": "1.3.9",
      "description": "Sailpoint Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-sailpoint-api",
      "npmDownloads": 7024,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-sailpoint-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sailpoint-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sailpoint-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cyberark-api": {
      "name": "cyberark-api",
      "version": "2.1.9",
      "description": "Cyberark Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-cyberark-api",
      "npmDownloads": 2307,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-cyberark-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cyberark-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cyberark-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "beyondtrust-api": {
      "name": "beyondtrust-api",
      "version": "2.0.12",
      "description": "Beyondtrust Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-beyondtrust-api",
      "npmDownloads": 1436,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-beyondtrust-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from beyondtrust-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List beyondtrust-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "thycotic-api": {
      "name": "thycotic-api",
      "version": "2.2.6",
      "description": "Thycotic Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-thycotic-api",
      "npmDownloads": 4865,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-thycotic-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from thycotic-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List thycotic-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "vault-api": {
      "name": "vault-api",
      "version": "2.6.7",
      "description": "Vault Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-vault-api",
      "npmDownloads": 3330,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-vault-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from vault-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List vault-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "bitwarden-api": {
      "name": "bitwarden-api",
      "version": "2.8.9",
      "description": "Bitwarden Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-bitwarden-api",
      "npmDownloads": 548,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-bitwarden-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from bitwarden-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List bitwarden-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "1password-api": {
      "name": "1password-api",
      "version": "2.8.1",
      "description": "1password Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-1password-api",
      "npmDownloads": 4924,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-1password-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from 1password-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List 1password-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "lastpass-api": {
      "name": "lastpass-api",
      "version": "1.0.2",
      "description": "Lastpass Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-lastpass-api",
      "npmDownloads": 2192,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-lastpass-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from lastpass-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List lastpass-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "dashlane-api": {
      "name": "dashlane-api",
      "version": "2.1.15",
      "description": "Dashlane Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-dashlane-api",
      "npmDownloads": 3024,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-dashlane-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from dashlane-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List dashlane-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "snyk-api": {
      "name": "snyk-api",
      "version": "1.0.1",
      "description": "Snyk Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-snyk-api",
      "npmDownloads": 5930,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-snyk-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from snyk-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List snyk-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "veracode-api": {
      "name": "veracode-api",
      "version": "2.0.6",
      "description": "Veracode Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-veracode-api",
      "npmDownloads": 6320,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-veracode-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from veracode-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List veracode-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "checkmarx-api": {
      "name": "checkmarx-api",
      "version": "1.8.8",
      "description": "Checkmarx Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-checkmarx-api",
      "npmDownloads": 1632,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-checkmarx-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from checkmarx-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List checkmarx-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fortify-api": {
      "name": "fortify-api",
      "version": "1.7.2",
      "description": "Fortify Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-fortify-api",
      "npmDownloads": 4471,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-fortify-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fortify-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fortify-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sonarqube-api": {
      "name": "sonarqube-api",
      "version": "1.2.14",
      "description": "Sonarqube Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-sonarqube-api",
      "npmDownloads": 1049,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-sonarqube-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sonarqube-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sonarqube-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "whitesource-api": {
      "name": "whitesource-api",
      "version": "1.4.17",
      "description": "Whitesource Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-whitesource-api",
      "npmDownloads": 1168,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-whitesource-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from whitesource-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List whitesource-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "blackduck-api": {
      "name": "blackduck-api",
      "version": "1.5.16",
      "description": "Blackduck Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-blackduck-api",
      "npmDownloads": 3846,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-blackduck-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from blackduck-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List blackduck-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "aqua-api": {
      "name": "aqua-api",
      "version": "3.4.14",
      "description": "Aqua Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-aqua-api",
      "npmDownloads": 2454,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-aqua-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from aqua-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List aqua-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "twistlock-api": {
      "name": "twistlock-api",
      "version": "3.7.9",
      "description": "Twistlock Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-twistlock-api",
      "npmDownloads": 5135,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-twistlock-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from twistlock-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List twistlock-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "prismacloud-api": {
      "name": "prismacloud-api",
      "version": "1.2.7",
      "description": "Prismacloud Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-prismacloud-api",
      "npmDownloads": 4333,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-prismacloud-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from prismacloud-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List prismacloud-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "qualys-api": {
      "name": "qualys-api",
      "version": "1.0.10",
      "description": "Qualys Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-qualys-api",
      "npmDownloads": 2145,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-qualys-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from qualys-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List qualys-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "rapid7-api": {
      "name": "rapid7-api",
      "version": "2.4.15",
      "description": "Rapid7 Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-rapid7-api",
      "npmDownloads": 2716,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-rapid7-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from rapid7-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List rapid7-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "tenable-api": {
      "name": "tenable-api",
      "version": "3.2.5",
      "description": "Tenable Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-tenable-api",
      "npmDownloads": 4498,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-tenable-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from tenable-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List tenable-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "openvas-api": {
      "name": "openvas-api",
      "version": "1.2.2",
      "description": "Openvas Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-openvas-api",
      "npmDownloads": 399,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-openvas-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from openvas-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List openvas-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "nessus-api": {
      "name": "nessus-api",
      "version": "3.5.4",
      "description": "Nessus Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-nessus-api",
      "npmDownloads": 364,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-nessus-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from nessus-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List nessus-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "burpsuite-api": {
      "name": "burpsuite-api",
      "version": "3.7.11",
      "description": "Burpsuite Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-burpsuite-api",
      "npmDownloads": 2018,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-burpsuite-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from burpsuite-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List burpsuite-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "owaspzap-api": {
      "name": "owaspzap-api",
      "version": "1.8.17",
      "description": "Owaspzap Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-owaspzap-api",
      "npmDownloads": 2202,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-owaspzap-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from owaspzap-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List owaspzap-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "acunetix-api": {
      "name": "acunetix-api",
      "version": "3.8.5",
      "description": "Acunetix Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-acunetix-api",
      "npmDownloads": 2810,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-acunetix-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from acunetix-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List acunetix-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "netsparker-api": {
      "name": "netsparker-api",
      "version": "3.5.0",
      "description": "Netsparker Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-netsparker-api",
      "npmDownloads": 3463,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-netsparker-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from netsparker-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List netsparker-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "detectify-api": {
      "name": "detectify-api",
      "version": "2.5.16",
      "description": "Detectify Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-detectify-api",
      "npmDownloads": 150,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-detectify-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from detectify-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List detectify-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gcp-security-api": {
      "name": "gcp-security-api",
      "version": "1.3.7",
      "description": "Gcp Security Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-gcp-security-api",
      "npmDownloads": 2633,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-gcp-security-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from gcp-security-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List gcp-security-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "chef-inspec-api": {
      "name": "chef-inspec-api",
      "version": "3.6.8",
      "description": "Chef Inspec Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-chef-inspec-api",
      "npmDownloads": 2850,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-chef-inspec-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from chef-inspec-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List chef-inspec-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "puppet-compliance-api": {
      "name": "puppet-compliance-api",
      "version": "2.0.0",
      "description": "Puppet Compliance Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-puppet-compliance-api",
      "npmDownloads": 2483,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-puppet-compliance-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from puppet-compliance-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List puppet-compliance-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "ansible-compliance-api": {
      "name": "ansible-compliance-api",
      "version": "1.1.12",
      "description": "Ansible Compliance Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-ansible-compliance-api",
      "npmDownloads": 2337,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-ansible-compliance-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from ansible-compliance-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List ansible-compliance-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "terraform-compliance-api": {
      "name": "terraform-compliance-api",
      "version": "1.9.15",
      "description": "Terraform Compliance Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-terraform-compliance-api",
      "npmDownloads": 2092,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-terraform-compliance-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from terraform-compliance-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List terraform-compliance-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cfn-guard-api": {
      "name": "cfn-guard-api",
      "version": "1.5.14",
      "description": "Cfn Guard Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-cfn-guard-api",
      "npmDownloads": 568,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-cfn-guard-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cfn-guard-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cfn-guard-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "opa-api": {
      "name": "opa-api",
      "version": "1.7.8",
      "description": "Opa Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-opa-api",
      "npmDownloads": 2144,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-opa-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from opa-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List opa-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "falco-api": {
      "name": "falco-api",
      "version": "2.4.10",
      "description": "Falco Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-falco-api",
      "npmDownloads": 1519,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-falco-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from falco-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List falco-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cis-api": {
      "name": "cis-api",
      "version": "3.5.9",
      "description": "Cis Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-cis-api",
      "npmDownloads": 2072,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-cis-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cis-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cis-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "nist-api": {
      "name": "nist-api",
      "version": "3.6.5",
      "description": "Nist Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-nist-api",
      "npmDownloads": 2842,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-nist-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from nist-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List nist-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "iso27001-api": {
      "name": "iso27001-api",
      "version": "2.6.0",
      "description": "Iso27001 Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-iso27001-api",
      "npmDownloads": 1883,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-iso27001-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from iso27001-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List iso27001-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sox-api": {
      "name": "sox-api",
      "version": "3.3.2",
      "description": "Sox Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-sox-api",
      "npmDownloads": 1330,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-sox-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sox-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sox-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "gdpr-api": {
      "name": "gdpr-api",
      "version": "3.1.15",
      "description": "Gdpr Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-gdpr-api",
      "npmDownloads": 2034,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-gdpr-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from gdpr-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List gdpr-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "hipaa-api": {
      "name": "hipaa-api",
      "version": "3.8.16",
      "description": "Hipaa Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-hipaa-api",
      "npmDownloads": 1940,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-hipaa-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from hipaa-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List hipaa-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pcidss-api": {
      "name": "pcidss-api",
      "version": "1.0.16",
      "description": "Pcidss Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-pcidss-api",
      "npmDownloads": 858,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-pcidss-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pcidss-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pcidss-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fedramp-api": {
      "name": "fedramp-api",
      "version": "3.0.14",
      "description": "Fedramp Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-fedramp-api",
      "npmDownloads": 381,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-fedramp-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fedramp-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fedramp-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fisma-api": {
      "name": "fisma-api",
      "version": "3.6.10",
      "description": "Fisma Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-fisma-api",
      "npmDownloads": 633,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-fisma-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fisma-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fisma-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cmmc-api": {
      "name": "cmmc-api",
      "version": "2.2.2",
      "description": "Cmmc Api integration server",
      "category": "security-identity",
      "packageName": "mcp-server-cmmc-api",
      "npmDownloads": 464,
      "repositoryUrl": "https://github.com/security-tools/mcp-server-cmmc-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cmmc-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cmmc-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fhir-api": {
      "name": "fhir-api",
      "version": "3.8.11",
      "description": "Fhir Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-fhir-api",
      "npmDownloads": 3102,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-fhir-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fhir-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fhir-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "epic-api": {
      "name": "epic-api",
      "version": "3.0.11",
      "description": "Epic Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-epic-api",
      "npmDownloads": 3726,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-epic-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from epic-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List epic-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cerner-api": {
      "name": "cerner-api",
      "version": "2.5.8",
      "description": "Cerner Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-cerner-api",
      "npmDownloads": 1791,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-cerner-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cerner-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cerner-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "allscripts-api": {
      "name": "allscripts-api",
      "version": "2.4.12",
      "description": "Allscripts Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-allscripts-api",
      "npmDownloads": 4928,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-allscripts-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from allscripts-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List allscripts-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "athenahealth-api": {
      "name": "athenahealth-api",
      "version": "2.0.0",
      "description": "Athenahealth Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-athenahealth-api",
      "npmDownloads": 6044,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-athenahealth-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from athenahealth-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List athenahealth-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "ehr-api": {
      "name": "ehr-api",
      "version": "1.0.11",
      "description": "Ehr Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-ehr-api",
      "npmDownloads": 3389,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-ehr-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from ehr-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List ehr-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "hl7-api": {
      "name": "hl7-api",
      "version": "2.8.9",
      "description": "Hl7 Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-hl7-api",
      "npmDownloads": 5163,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-hl7-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from hl7-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List hl7-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "dicom-api": {
      "name": "dicom-api",
      "version": "3.6.18",
      "description": "Dicom Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-dicom-api",
      "npmDownloads": 3220,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-dicom-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from dicom-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List dicom-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "snomed-api": {
      "name": "snomed-api",
      "version": "1.0.18",
      "description": "Snomed Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-snomed-api",
      "npmDownloads": 6047,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-snomed-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from snomed-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List snomed-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "icd10-api": {
      "name": "icd10-api",
      "version": "3.7.13",
      "description": "Icd10 Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-icd10-api",
      "npmDownloads": 2514,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-icd10-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from icd10-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List icd10-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cpt-api": {
      "name": "cpt-api",
      "version": "2.1.15",
      "description": "Cpt Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-cpt-api",
      "npmDownloads": 1607,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-cpt-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cpt-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cpt-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "rxnorm-api": {
      "name": "rxnorm-api",
      "version": "1.2.3",
      "description": "Rxnorm Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-rxnorm-api",
      "npmDownloads": 1448,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-rxnorm-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from rxnorm-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List rxnorm-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "loinc-api": {
      "name": "loinc-api",
      "version": "2.6.0",
      "description": "Loinc Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-loinc-api",
      "npmDownloads": 6193,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-loinc-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from loinc-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List loinc-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "hipaa-vault-api": {
      "name": "hipaa-vault-api",
      "version": "3.8.14",
      "description": "Hipaa Vault Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-hipaa-vault-api",
      "npmDownloads": 559,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-hipaa-vault-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from hipaa-vault-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List hipaa-vault-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "patient-portal-api": {
      "name": "patient-portal-api",
      "version": "3.7.2",
      "description": "Patient Portal Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-patient-portal-api",
      "npmDownloads": 2414,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-patient-portal-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from patient-portal-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List patient-portal-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "telemedicine-api": {
      "name": "telemedicine-api",
      "version": "3.0.19",
      "description": "Telemedicine Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-telemedicine-api",
      "npmDownloads": 4421,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-telemedicine-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from telemedicine-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List telemedicine-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pharmacy-api": {
      "name": "pharmacy-api",
      "version": "1.1.0",
      "description": "Pharmacy Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-pharmacy-api",
      "npmDownloads": 769,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-pharmacy-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pharmacy-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pharmacy-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "lab-api": {
      "name": "lab-api",
      "version": "2.5.9",
      "description": "Lab Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-lab-api",
      "npmDownloads": 2284,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-lab-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from lab-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List lab-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "radiology-api": {
      "name": "radiology-api",
      "version": "3.7.3",
      "description": "Radiology Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-radiology-api",
      "npmDownloads": 3954,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-radiology-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from radiology-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List radiology-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "cardiology-api": {
      "name": "cardiology-api",
      "version": "1.6.12",
      "description": "Cardiology Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-cardiology-api",
      "npmDownloads": 5680,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-cardiology-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from cardiology-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List cardiology-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "oncology-api": {
      "name": "oncology-api",
      "version": "1.0.7",
      "description": "Oncology Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-oncology-api",
      "npmDownloads": 3694,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-oncology-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from oncology-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List oncology-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "mental-health-api": {
      "name": "mental-health-api",
      "version": "2.5.7",
      "description": "Mental Health Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-mental-health-api",
      "npmDownloads": 4324,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-mental-health-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from mental-health-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List mental-health-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "dental-api": {
      "name": "dental-api",
      "version": "3.6.5",
      "description": "Dental Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-dental-api",
      "npmDownloads": 4827,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-dental-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from dental-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List dental-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "veterinary-api": {
      "name": "veterinary-api",
      "version": "3.5.12",
      "description": "Veterinary Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-veterinary-api",
      "npmDownloads": 3507,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-veterinary-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from veterinary-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List veterinary-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "clinical-trials-api": {
      "name": "clinical-trials-api",
      "version": "2.7.7",
      "description": "Clinical Trials Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-clinical-trials-api",
      "npmDownloads": 2283,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-clinical-trials-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from clinical-trials-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List clinical-trials-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "bloomberg-api": {
      "name": "bloomberg-api",
      "version": "2.5.3",
      "description": "Bloomberg Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-bloomberg-api",
      "npmDownloads": 6021,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-bloomberg-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from bloomberg-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List bloomberg-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "reuters-api": {
      "name": "reuters-api",
      "version": "1.7.2",
      "description": "Reuters Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-reuters-api",
      "npmDownloads": 4218,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-reuters-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from reuters-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List reuters-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "alpha-vantage-api": {
      "name": "alpha-vantage-api",
      "version": "1.1.18",
      "description": "Alpha Vantage Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-alpha-vantage-api",
      "npmDownloads": 3847,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-alpha-vantage-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from alpha-vantage-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List alpha-vantage-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "quandl-api": {
      "name": "quandl-api",
      "version": "3.3.19",
      "description": "Quandl Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-quandl-api",
      "npmDownloads": 3637,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-quandl-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from quandl-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List quandl-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "iex-api": {
      "name": "iex-api",
      "version": "3.6.11",
      "description": "Iex Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-iex-api",
      "npmDownloads": 454,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-iex-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from iex-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List iex-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "yahoo-finance-api": {
      "name": "yahoo-finance-api",
      "version": "2.2.17",
      "description": "Yahoo Finance Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-yahoo-finance-api",
      "npmDownloads": 4872,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-yahoo-finance-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from yahoo-finance-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List yahoo-finance-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fmp-api": {
      "name": "fmp-api",
      "version": "2.9.11",
      "description": "Fmp Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-fmp-api",
      "npmDownloads": 3841,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-fmp-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fmp-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fmp-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "marketstack-api": {
      "name": "marketstack-api",
      "version": "3.2.12",
      "description": "Marketstack Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-marketstack-api",
      "npmDownloads": 3463,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-marketstack-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from marketstack-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List marketstack-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fixer-api": {
      "name": "fixer-api",
      "version": "3.1.2",
      "description": "Fixer Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-fixer-api",
      "npmDownloads": 2016,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-fixer-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fixer-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fixer-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "currencylayer-api": {
      "name": "currencylayer-api",
      "version": "1.3.7",
      "description": "Currencylayer Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-currencylayer-api",
      "npmDownloads": 1336,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-currencylayer-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from currencylayer-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List currencylayer-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "plaid-api": {
      "name": "plaid-api",
      "version": "1.5.2",
      "description": "Plaid Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-plaid-api",
      "npmDownloads": 1941,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-plaid-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from plaid-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List plaid-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "yodlee-api": {
      "name": "yodlee-api",
      "version": "3.4.6",
      "description": "Yodlee Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-yodlee-api",
      "npmDownloads": 4356,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-yodlee-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from yodlee-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List yodlee-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "mx-api": {
      "name": "mx-api",
      "version": "2.0.8",
      "description": "Mx Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-mx-api",
      "npmDownloads": 5041,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-mx-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from mx-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List mx-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "finicity-api": {
      "name": "finicity-api",
      "version": "3.0.15",
      "description": "Finicity Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-finicity-api",
      "npmDownloads": 1268,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-finicity-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from finicity-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List finicity-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "akoya-api": {
      "name": "akoya-api",
      "version": "1.5.8",
      "description": "Akoya Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-akoya-api",
      "npmDownloads": 4069,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-akoya-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from akoya-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List akoya-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "openbanking-api": {
      "name": "openbanking-api",
      "version": "2.4.2",
      "description": "Openbanking Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-openbanking-api",
      "npmDownloads": 1009,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-openbanking-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from openbanking-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List openbanking-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "psd2-api": {
      "name": "psd2-api",
      "version": "1.0.1",
      "description": "Psd2 Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-psd2-api",
      "npmDownloads": 978,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-psd2-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from psd2-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List psd2-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "swift-api": {
      "name": "swift-api",
      "version": "1.3.2",
      "description": "Swift Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-swift-api",
      "npmDownloads": 4710,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-swift-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from swift-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List swift-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fedwire-api": {
      "name": "fedwire-api",
      "version": "3.8.13",
      "description": "Fedwire Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-fedwire-api",
      "npmDownloads": 3883,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-fedwire-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fedwire-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fedwire-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "ach-api": {
      "name": "ach-api",
      "version": "3.9.19",
      "description": "Ach Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-ach-api",
      "npmDownloads": 4155,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-ach-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from ach-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List ach-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "creditkarma-api": {
      "name": "creditkarma-api",
      "version": "3.7.0",
      "description": "Creditkarma Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-creditkarma-api",
      "npmDownloads": 2528,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-creditkarma-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from creditkarma-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List creditkarma-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "experian-api": {
      "name": "experian-api",
      "version": "1.5.11",
      "description": "Experian Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-experian-api",
      "npmDownloads": 3602,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-experian-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from experian-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List experian-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "equifax-api": {
      "name": "equifax-api",
      "version": "2.8.11",
      "description": "Equifax Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-equifax-api",
      "npmDownloads": 4204,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-equifax-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from equifax-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List equifax-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "transunion-api": {
      "name": "transunion-api",
      "version": "2.1.8",
      "description": "Transunion Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-transunion-api",
      "npmDownloads": 1293,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-transunion-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from transunion-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List transunion-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "fico-api": {
      "name": "fico-api",
      "version": "1.0.16",
      "description": "Fico Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-fico-api",
      "npmDownloads": 3219,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-fico-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from fico-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List fico-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "mes-api": {
      "name": "mes-api",
      "version": "1.3.1",
      "description": "Mes Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-mes-api",
      "npmDownloads": 1055,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-mes-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from mes-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List mes-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "erp-manufacturing-api": {
      "name": "erp-manufacturing-api",
      "version": "2.6.17",
      "description": "Erp Manufacturing Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-erp-manufacturing-api",
      "npmDownloads": 908,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-erp-manufacturing-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from erp-manufacturing-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List erp-manufacturing-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "scada-api": {
      "name": "scada-api",
      "version": "2.5.12",
      "description": "Scada Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-scada-api",
      "npmDownloads": 3175,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-scada-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from scada-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List scada-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "plc-api": {
      "name": "plc-api",
      "version": "2.9.1",
      "description": "Plc Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-plc-api",
      "npmDownloads": 1128,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-plc-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from plc-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List plc-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "opcua-api": {
      "name": "opcua-api",
      "version": "3.6.8",
      "description": "Opcua Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-opcua-api",
      "npmDownloads": 3765,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-opcua-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from opcua-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List opcua-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "mqtt-industrial-api": {
      "name": "mqtt-industrial-api",
      "version": "3.5.13",
      "description": "Mqtt Industrial Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-mqtt-industrial-api",
      "npmDownloads": 2391,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-mqtt-industrial-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from mqtt-industrial-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List mqtt-industrial-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "modbus-api": {
      "name": "modbus-api",
      "version": "2.2.4",
      "description": "Modbus Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-modbus-api",
      "npmDownloads": 616,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-modbus-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from modbus-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List modbus-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "profibus-api": {
      "name": "profibus-api",
      "version": "2.3.13",
      "description": "Profibus Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-profibus-api",
      "npmDownloads": 799,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-profibus-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from profibus-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List profibus-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "ethercat-api": {
      "name": "ethercat-api",
      "version": "2.0.19",
      "description": "Ethercat Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-ethercat-api",
      "npmDownloads": 2267,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-ethercat-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from ethercat-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List ethercat-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "canbus-api": {
      "name": "canbus-api",
      "version": "1.2.19",
      "description": "Canbus Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-canbus-api",
      "npmDownloads": 937,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-canbus-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from canbus-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List canbus-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "industry40-api": {
      "name": "industry40-api",
      "version": "1.4.1",
      "description": "Industry40 Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-industry40-api",
      "npmDownloads": 1379,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-industry40-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from industry40-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List industry40-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "iot-sensors-api": {
      "name": "iot-sensors-api",
      "version": "2.1.15",
      "description": "Iot Sensors Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-iot-sensors-api",
      "npmDownloads": 117,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-iot-sensors-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from iot-sensors-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List iot-sensors-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "predictive-maintenance-api": {
      "name": "predictive-maintenance-api",
      "version": "1.6.0",
      "description": "Predictive Maintenance Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-predictive-maintenance-api",
      "npmDownloads": 2847,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-predictive-maintenance-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from predictive-maintenance-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List predictive-maintenance-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "quality-control-api": {
      "name": "quality-control-api",
      "version": "1.7.10",
      "description": "Quality Control Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-quality-control-api",
      "npmDownloads": 1701,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-quality-control-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from quality-control-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List quality-control-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "supply-chain-api": {
      "name": "supply-chain-api",
      "version": "3.2.3",
      "description": "Supply Chain Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-supply-chain-api",
      "npmDownloads": 824,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-supply-chain-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from supply-chain-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List supply-chain-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "inventory-mgmt-api": {
      "name": "inventory-mgmt-api",
      "version": "3.2.1",
      "description": "Inventory Mgmt Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-inventory-mgmt-api",
      "npmDownloads": 2288,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-inventory-mgmt-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from inventory-mgmt-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List inventory-mgmt-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "wms-api": {
      "name": "wms-api",
      "version": "3.3.6",
      "description": "Wms Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-wms-api",
      "npmDownloads": 2235,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-wms-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from wms-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List wms-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "asset-tracking-api": {
      "name": "asset-tracking-api",
      "version": "3.1.0",
      "description": "Asset Tracking Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-asset-tracking-api",
      "npmDownloads": 383,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-asset-tracking-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from asset-tracking-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List asset-tracking-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "maintenance-api": {
      "name": "maintenance-api",
      "version": "3.6.10",
      "description": "Maintenance Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-maintenance-api",
      "npmDownloads": 2550,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-maintenance-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from maintenance-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List maintenance-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "safety-api": {
      "name": "safety-api",
      "version": "1.9.4",
      "description": "Safety Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-safety-api",
      "npmDownloads": 578,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-safety-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from safety-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List safety-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "environmental-api": {
      "name": "environmental-api",
      "version": "3.8.9",
      "description": "Environmental Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-environmental-api",
      "npmDownloads": 1653,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-environmental-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from environmental-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List environmental-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "energy-mgmt-api": {
      "name": "energy-mgmt-api",
      "version": "2.9.7",
      "description": "Energy Mgmt Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-energy-mgmt-api",
      "npmDownloads": 1867,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-energy-mgmt-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from energy-mgmt-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List energy-mgmt-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "production-planning-api": {
      "name": "production-planning-api",
      "version": "3.4.14",
      "description": "Production Planning Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-production-planning-api",
      "npmDownloads": 575,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-production-planning-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from production-planning-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List production-planning-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "scheduling-api": {
      "name": "scheduling-api",
      "version": "1.4.19",
      "description": "Scheduling Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-scheduling-api",
      "npmDownloads": 2347,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-scheduling-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from scheduling-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List scheduling-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "reporting-api": {
      "name": "reporting-api",
      "version": "2.3.2",
      "description": "Reporting Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-reporting-api",
      "npmDownloads": 1860,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-reporting-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from reporting-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List reporting-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "canvas-api": {
      "name": "canvas-api",
      "version": "1.6.18",
      "description": "Canvas Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-canvas-api",
      "npmDownloads": 1552,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-canvas-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from canvas-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List canvas-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "blackboard-api": {
      "name": "blackboard-api",
      "version": "1.9.10",
      "description": "Blackboard Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-blackboard-api",
      "npmDownloads": 1024,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-blackboard-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from blackboard-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List blackboard-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "moodle-api": {
      "name": "moodle-api",
      "version": "3.4.14",
      "description": "Moodle Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-moodle-api",
      "npmDownloads": 2268,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-moodle-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from moodle-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List moodle-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "schoology-api": {
      "name": "schoology-api",
      "version": "3.2.15",
      "description": "Schoology Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-schoology-api",
      "npmDownloads": 1127,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-schoology-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from schoology-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List schoology-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "google-classroom-api": {
      "name": "google-classroom-api",
      "version": "2.8.2",
      "description": "Google Classroom Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-google-classroom-api",
      "npmDownloads": 1256,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-google-classroom-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from google-classroom-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List google-classroom-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "teams-education-api": {
      "name": "teams-education-api",
      "version": "2.9.11",
      "description": "Teams Education Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-teams-education-api",
      "npmDownloads": 172,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-teams-education-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from teams-education-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List teams-education-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "zoom-education-api": {
      "name": "zoom-education-api",
      "version": "2.8.2",
      "description": "Zoom Education Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-zoom-education-api",
      "npmDownloads": 578,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-zoom-education-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from zoom-education-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List zoom-education-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "khan-academy-api": {
      "name": "khan-academy-api",
      "version": "1.6.9",
      "description": "Khan Academy Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-khan-academy-api",
      "npmDownloads": 774,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-khan-academy-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from khan-academy-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List khan-academy-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "coursera-api": {
      "name": "coursera-api",
      "version": "2.0.4",
      "description": "Coursera Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-coursera-api",
      "npmDownloads": 2316,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-coursera-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from coursera-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List coursera-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "edx-api": {
      "name": "edx-api",
      "version": "3.2.5",
      "description": "Edx Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-edx-api",
      "npmDownloads": 151,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-edx-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from edx-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List edx-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "udemy-api": {
      "name": "udemy-api",
      "version": "2.5.14",
      "description": "Udemy Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-udemy-api",
      "npmDownloads": 633,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-udemy-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from udemy-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List udemy-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "skillshare-api": {
      "name": "skillshare-api",
      "version": "3.8.0",
      "description": "Skillshare Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-skillshare-api",
      "npmDownloads": 724,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-skillshare-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from skillshare-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List skillshare-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pluralsight-api": {
      "name": "pluralsight-api",
      "version": "2.0.7",
      "description": "Pluralsight Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-pluralsight-api",
      "npmDownloads": 1540,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-pluralsight-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pluralsight-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pluralsight-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "linkedin-learning-api": {
      "name": "linkedin-learning-api",
      "version": "2.8.2",
      "description": "Linkedin Learning Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-linkedin-learning-api",
      "npmDownloads": 1099,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-linkedin-learning-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from linkedin-learning-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List linkedin-learning-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "sis-api": {
      "name": "sis-api",
      "version": "1.4.16",
      "description": "Sis Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-sis-api",
      "npmDownloads": 189,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-sis-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from sis-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List sis-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pos-api": {
      "name": "pos-api",
      "version": "1.6.6",
      "description": "Pos Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-pos-api",
      "npmDownloads": 1960,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-pos-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pos-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pos-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "inventory-retail-api": {
      "name": "inventory-retail-api",
      "version": "3.7.15",
      "description": "Inventory Retail Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-inventory-retail-api",
      "npmDownloads": 1885,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-inventory-retail-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from inventory-retail-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List inventory-retail-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "loyalty-api": {
      "name": "loyalty-api",
      "version": "3.4.9",
      "description": "Loyalty Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-loyalty-api",
      "npmDownloads": 263,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-loyalty-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from loyalty-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List loyalty-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "giftcard-api": {
      "name": "giftcard-api",
      "version": "1.1.19",
      "description": "Giftcard Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-giftcard-api",
      "npmDownloads": 1212,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-giftcard-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from giftcard-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List giftcard-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "promotions-api": {
      "name": "promotions-api",
      "version": "3.5.13",
      "description": "Promotions Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-promotions-api",
      "npmDownloads": 465,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-promotions-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from promotions-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List promotions-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "pricing-api": {
      "name": "pricing-api",
      "version": "1.6.8",
      "description": "Pricing Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-pricing-api",
      "npmDownloads": 2127,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-pricing-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from pricing-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List pricing-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "catalog-api": {
      "name": "catalog-api",
      "version": "2.3.12",
      "description": "Catalog Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-catalog-api",
      "npmDownloads": 2302,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-catalog-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from catalog-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List catalog-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "customer-analytics-api": {
      "name": "customer-analytics-api",
      "version": "1.7.11",
      "description": "Customer Analytics Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-customer-analytics-api",
      "npmDownloads": 2283,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-customer-analytics-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from customer-analytics-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List customer-analytics-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "foot-traffic-api": {
      "name": "foot-traffic-api",
      "version": "2.8.12",
      "description": "Foot Traffic Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-foot-traffic-api",
      "npmDownloads": 1589,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-foot-traffic-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from foot-traffic-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List foot-traffic-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "queue-api": {
      "name": "queue-api",
      "version": "3.3.15",
      "description": "Queue Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-queue-api",
      "npmDownloads": 1154,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-queue-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from queue-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List queue-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "digital-signage-api": {
      "name": "digital-signage-api",
      "version": "3.2.10",
      "description": "Digital Signage Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-digital-signage-api",
      "npmDownloads": 1660,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-digital-signage-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from digital-signage-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List digital-signage-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "mobile-payments-api": {
      "name": "mobile-payments-api",
      "version": "2.1.3",
      "description": "Mobile Payments Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-mobile-payments-api",
      "npmDownloads": 1707,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-mobile-payments-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from mobile-payments-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List mobile-payments-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    },
    "receipt-api": {
      "name": "receipt-api",
      "version": "2.3.13",
      "description": "Receipt Api integration server",
      "category": "industry-specific",
      "packageName": "mcp-server-receipt-api",
      "npmDownloads": 991,
      "repositoryUrl": "https://github.com/industry-connectors/mcp-server-receipt-api",
      "tools": {
        "get_info": {
          "name": "get_info",
          "description": "Get information from receipt-api",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Query string"
              }
            }
          }
        },
        "list_resources": {
          "name": "list_resources",
          "description": "List receipt-api resources",
          "inputSchema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Resource filter"
              }
            }
          }
        }
      }
    }
  }
}